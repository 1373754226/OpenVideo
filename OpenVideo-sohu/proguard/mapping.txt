android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    android.support.v4.app.FragmentManager getFragmentManager() -> d
    boolean isAdded() -> e
    boolean isDetached() -> f
    boolean isHidden() -> g
    void onHiddenChanged(boolean) -> a
    void setMenuVisibility(boolean) -> b
    void setUserVisibleHint(boolean) -> c
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> h
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> i
    void onResume() -> j
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> k
    void onStop() -> l
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> m
    void onDestroy() -> n
    void initState() -> o
    void onDetach() -> p
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> q
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> r
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> s
    void performResume() -> t
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> u
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> v
    void performStop() -> w
    void performReallyStop() -> x
    void performDestroyView() -> y
    void performDestroy() -> z
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.u:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.v:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.w:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.x:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.y:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.z:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.aa:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ab:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ac:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ad:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ae:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.c.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.h:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.k:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.l:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.m:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> b
    float getPageWidth(int) -> c
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> j
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> k
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> c
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> l
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> d
    void endFakeDrag() -> e
    void fakeDragBy(float) -> b
    boolean isFakeDragging() -> f
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> m
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> g
    boolean pageRight() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> i
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bf:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bg:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bi:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bj:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bk:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bn:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bo:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.br:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> a
    void getBoundsInParent(android.graphics.Rect) -> a
    void getBoundsInScreen(android.graphics.Rect) -> b
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    boolean isFocused() -> f
    boolean isSelected() -> g
    boolean isClickable() -> h
    boolean isLongClickable() -> i
    boolean isEnabled() -> j
    boolean isPassword() -> k
    boolean isScrollable() -> l
    void setScrollable(boolean) -> a
    java.lang.CharSequence getPackageName() -> m
    java.lang.CharSequence getClassName() -> n
    void setClassName(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> o
    java.lang.CharSequence getContentDescription() -> p
    java.lang.String getViewIdResourceName() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.i:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.p:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.r:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.s:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.t:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.u:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.v:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.w:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.x:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.y:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.z:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.aa:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ab:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.a:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.c:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.d:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.e:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.f:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.k:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.n:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.o:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.p:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.q:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.r:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.s:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.t:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.u:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.w:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.x:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.y:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.z:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setColorScheme(int,int,int,int) -> a
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds(int,int,int,int) -> b
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.aa:
    android.support.v4.widget.SwipeProgressBar mProgressBar -> a
    android.view.View mTarget -> b
    int mOriginalOffsetTop -> c
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> d
    android.view.MotionEvent mDownEvent -> e
    int mFrom -> f
    boolean mRefreshing -> g
    int mTouchSlop -> h
    float mDistanceToTriggerSync -> i
    float mPrevY -> j
    int mMediumAnimationDuration -> k
    float mFromPercentage -> l
    float mCurrPercentage -> m
    int mProgressBarHeight -> n
    int mCurrentTargetOffsetTop -> o
    boolean mReturningToStart -> p
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> q
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> r
    int[] LAYOUT_ATTRS -> s
    android.view.animation.Animation mAnimateToStartPosition -> t
    android.view.animation.Animation mShrinkTrigger -> u
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> v
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> w
    java.lang.Runnable mReturnToStartPosition -> x
    java.lang.Runnable mCancel -> y
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> a
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> a
    void ensureTarget() -> b
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> c
    void updateContentOffsetTop(int) -> a
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> d
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> a
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> f
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> j
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> k
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> l
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.ab:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.ac:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.ad:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.ae:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.af:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.ag:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.ah:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.ai:
    void onRefresh() -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.aj:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ak:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.al:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.android.volley.AuthFailureError -> com.android.volley.AuthFailureError:
    android.content.Intent mResolutionIntent -> mResolutionIntent
    android.content.Intent getResolutionIntent() -> getResolutionIntent
    java.lang.String getMessage() -> getMessage
com.android.volley.Cache -> com.android.volley.Cache:
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void initialize() -> initialize
    void invalidate(java.lang.String,boolean) -> invalidate
    void remove(java.lang.String) -> remove
    void clear() -> clear
com.android.volley.Cache$Entry -> com.android.volley.Cache$Entry:
    byte[] data -> data
    java.lang.String etag -> etag
    long serverDate -> serverDate
    long ttl -> ttl
    long softTtl -> softTtl
    java.util.Map responseHeaders -> responseHeaders
    boolean isExpired() -> isExpired
    boolean refreshNeeded() -> refreshNeeded
com.android.volley.CacheDispatcher -> com.android.volley.CacheDispatcher:
    boolean DEBUG -> DEBUG
    java.util.concurrent.BlockingQueue mCacheQueue -> mCacheQueue
    java.util.concurrent.BlockingQueue mNetworkQueue -> mNetworkQueue
    com.android.volley.Cache mCache -> mCache
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    boolean mQuit -> mQuit
    void quit() -> quit
    void run() -> run
    java.util.concurrent.BlockingQueue access$0(com.android.volley.CacheDispatcher) -> access$0
com.android.volley.CacheDispatcher$1 -> com.android.volley.CacheDispatcher$1:
    com.android.volley.CacheDispatcher this$0 -> this$0
    com.android.volley.Request val$request -> val$request
    void run() -> run
com.android.volley.DefaultRetryPolicy -> com.android.volley.DefaultRetryPolicy:
    int mCurrentTimeoutMs -> mCurrentTimeoutMs
    int mCurrentRetryCount -> mCurrentRetryCount
    int mMaxNumRetries -> mMaxNumRetries
    float mBackoffMultiplier -> mBackoffMultiplier
    int DEFAULT_TIMEOUT_MS -> DEFAULT_TIMEOUT_MS
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    float DEFAULT_BACKOFF_MULT -> DEFAULT_BACKOFF_MULT
    int getCurrentTimeout() -> getCurrentTimeout
    int getCurrentRetryCount() -> getCurrentRetryCount
    void retry(com.android.volley.VolleyError) -> retry
    boolean hasAttemptRemaining() -> hasAttemptRemaining
com.android.volley.ExecutorDelivery -> com.android.volley.ExecutorDelivery:
    java.util.concurrent.Executor mResponsePoster -> mResponsePoster
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
com.android.volley.ExecutorDelivery$1 -> com.android.volley.ExecutorDelivery$1:
    com.android.volley.ExecutorDelivery this$0 -> this$0
    android.os.Handler val$handler -> val$handler
    void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable:
    com.android.volley.Request mRequest -> mRequest
    com.android.volley.Response mResponse -> mResponse
    java.lang.Runnable mRunnable -> mRunnable
    com.android.volley.ExecutorDelivery this$0 -> this$0
    void run() -> run
com.android.volley.Network -> com.android.volley.Network:
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
com.android.volley.NetworkDispatcher -> com.android.volley.NetworkDispatcher:
    java.util.concurrent.BlockingQueue mQueue -> mQueue
    com.android.volley.Network mNetwork -> mNetwork
    com.android.volley.Cache mCache -> mCache
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    boolean mQuit -> mQuit
    void quit() -> quit
    void addTrafficStatsTag(com.android.volley.Request) -> addTrafficStatsTag
    void run() -> run
    void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> parseAndDeliverNetworkError
com.android.volley.NetworkError -> com.android.volley.NetworkError:
com.android.volley.NetworkResponse -> com.android.volley.NetworkResponse:
    int statusCode -> statusCode
    byte[] data -> data
    java.util.Map headers -> headers
    boolean notModified -> notModified
com.android.volley.NoConnectionError -> com.android.volley.NoConnectionError:
com.android.volley.ParseError -> com.android.volley.ParseError:
com.android.volley.R -> com.android.volley.R:
com.android.volley.R$drawable -> com.android.volley.R$drawable:
    int ic_launcher -> ic_launcher
com.android.volley.R$string -> com.android.volley.R$string:
    int app_name -> app_name
com.android.volley.R$style -> com.android.volley.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.android.volley.Request -> com.android.volley.Request:
    java.lang.String DEFAULT_PARAMS_ENCODING -> DEFAULT_PARAMS_ENCODING
    com.android.volley.VolleyLog$MarkerLog mEventLog -> mEventLog
    int mMethod -> mMethod
    java.lang.String mUrl -> mUrl
    int mDefaultTrafficStatsTag -> mDefaultTrafficStatsTag
    com.android.volley.Response$ErrorListener mErrorListener -> mErrorListener
    java.lang.Integer mSequence -> mSequence
    com.android.volley.RequestQueue mRequestQueue -> mRequestQueue
    boolean mShouldCache -> mShouldCache
    boolean mCanceled -> mCanceled
    boolean mResponseDelivered -> mResponseDelivered
    long mRequestBirthTime -> mRequestBirthTime
    long SLOW_REQUEST_THRESHOLD_MS -> SLOW_REQUEST_THRESHOLD_MS
    com.android.volley.RetryPolicy mRetryPolicy -> mRetryPolicy
    com.android.volley.Cache$Entry mCacheEntry -> mCacheEntry
    java.lang.Object mTag -> mTag
    int getMethod() -> getMethod
    com.android.volley.Request setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    int getTrafficStatsTag() -> getTrafficStatsTag
    com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy) -> setRetryPolicy
    void addMarker(java.lang.String) -> addMarker
    void finish(java.lang.String) -> finish
    com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue) -> setRequestQueue
    com.android.volley.Request setSequence(int) -> setSequence
    int getSequence() -> getSequence
    java.lang.String getUrl() -> getUrl
    java.lang.String getCacheKey() -> getCacheKey
    com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry) -> setCacheEntry
    com.android.volley.Cache$Entry getCacheEntry() -> getCacheEntry
    void cancel() -> cancel
    boolean isCanceled() -> isCanceled
    java.util.Map getHeaders() -> getHeaders
    java.util.Map getPostParams() -> getPostParams
    java.lang.String getPostParamsEncoding() -> getPostParamsEncoding
    java.lang.String getPostBodyContentType() -> getPostBodyContentType
    byte[] getPostBody() -> getPostBody
    java.util.Map getParams() -> getParams
    java.lang.String getParamsEncoding() -> getParamsEncoding
    java.lang.String getBodyContentType() -> getBodyContentType
    byte[] getBody() -> getBody
    byte[] encodeParameters(java.util.Map,java.lang.String) -> encodeParameters
    com.android.volley.Request setShouldCache(boolean) -> setShouldCache
    boolean shouldCache() -> shouldCache
    com.android.volley.Request$Priority getPriority() -> getPriority
    int getTimeoutMs() -> getTimeoutMs
    com.android.volley.RetryPolicy getRetryPolicy() -> getRetryPolicy
    void markDelivered() -> markDelivered
    boolean hasHadResponseDelivered() -> hasHadResponseDelivered
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> parseNetworkError
    void deliverResponse(java.lang.Object) -> deliverResponse
    void deliverError(com.android.volley.VolleyError) -> deliverError
    int compareTo(com.android.volley.Request) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    com.android.volley.VolleyLog$MarkerLog access$1(com.android.volley.Request) -> access$1
com.android.volley.Request$1 -> com.android.volley.Request$1:
    com.android.volley.Request this$0 -> this$0
    java.lang.String val$tag -> val$tag
    long val$threadId -> val$threadId
    void run() -> run
com.android.volley.Request$Method -> com.android.volley.Request$Method:
    int DEPRECATED_GET_OR_POST -> DEPRECATED_GET_OR_POST
    int GET -> GET
    int POST -> POST
    int PUT -> PUT
    int DELETE -> DELETE
    int HEAD -> HEAD
    int OPTIONS -> OPTIONS
    int TRACE -> TRACE
    int PATCH -> PATCH
com.android.volley.Request$Priority -> com.android.volley.Request$Priority:
    com.android.volley.Request$Priority LOW -> LOW
    com.android.volley.Request$Priority NORMAL -> NORMAL
    com.android.volley.Request$Priority HIGH -> HIGH
    com.android.volley.Request$Priority IMMEDIATE -> IMMEDIATE
    com.android.volley.Request$Priority[] ENUM$VALUES -> ENUM$VALUES
    com.android.volley.Request$Priority[] values() -> values
    com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
com.android.volley.RequestQueue -> com.android.volley.RequestQueue:
    java.util.concurrent.atomic.AtomicInteger mSequenceGenerator -> mSequenceGenerator
    java.util.Map mWaitingRequests -> mWaitingRequests
    java.util.Set mCurrentRequests -> mCurrentRequests
    java.util.concurrent.PriorityBlockingQueue mCacheQueue -> mCacheQueue
    java.util.concurrent.PriorityBlockingQueue mNetworkQueue -> mNetworkQueue
    int DEFAULT_NETWORK_THREAD_POOL_SIZE -> DEFAULT_NETWORK_THREAD_POOL_SIZE
    com.android.volley.Cache mCache -> mCache
    com.android.volley.Network mNetwork -> mNetwork
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    com.android.volley.NetworkDispatcher[] mDispatchers -> mDispatchers
    com.android.volley.CacheDispatcher mCacheDispatcher -> mCacheDispatcher
    void start() -> start
    void stop() -> stop
    int getSequenceNumber() -> getSequenceNumber
    com.android.volley.Cache getCache() -> getCache
    void cancelAll(com.android.volley.RequestQueue$RequestFilter) -> cancelAll
    void cancelAll(java.lang.Object) -> cancelAll
    com.android.volley.Request add(com.android.volley.Request) -> add
    void finish(com.android.volley.Request) -> finish
com.android.volley.RequestQueue$1 -> com.android.volley.RequestQueue$1:
    com.android.volley.RequestQueue this$0 -> this$0
    java.lang.Object val$tag -> val$tag
    boolean apply(com.android.volley.Request) -> apply
com.android.volley.RequestQueue$RequestFilter -> com.android.volley.RequestQueue$RequestFilter:
    boolean apply(com.android.volley.Request) -> apply
com.android.volley.Response -> com.android.volley.Response:
    java.lang.Object result -> result
    com.android.volley.Cache$Entry cacheEntry -> cacheEntry
    com.android.volley.VolleyError error -> error
    boolean intermediate -> intermediate
    com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> success
    com.android.volley.Response error(com.android.volley.VolleyError) -> error
    boolean isSuccess() -> isSuccess
com.android.volley.Response$ErrorListener -> com.android.volley.Response$ErrorListener:
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.Response$Listener -> com.android.volley.Response$Listener:
    void onResponse(java.lang.Object) -> onResponse
com.android.volley.ResponseDelivery -> com.android.volley.ResponseDelivery:
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
com.android.volley.RetryPolicy -> com.android.volley.RetryPolicy:
    int getCurrentTimeout() -> getCurrentTimeout
    int getCurrentRetryCount() -> getCurrentRetryCount
    void retry(com.android.volley.VolleyError) -> retry
com.android.volley.ServerError -> com.android.volley.ServerError:
com.android.volley.TimeoutError -> com.android.volley.TimeoutError:
com.android.volley.VolleyError -> com.android.volley.VolleyError:
    com.android.volley.NetworkResponse networkResponse -> networkResponse
com.android.volley.VolleyLog -> com.android.volley.VolleyLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    void setTag(java.lang.String) -> setTag
    void v(java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void wtf(java.lang.String,java.lang.Object[]) -> wtf
    void wtf(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> wtf
    java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> buildMessage
com.android.volley.VolleyLog$MarkerLog -> com.android.volley.VolleyLog$MarkerLog:
    boolean ENABLED -> ENABLED
    long MIN_DURATION_FOR_LOGGING_MS -> MIN_DURATION_FOR_LOGGING_MS
    java.util.List mMarkers -> mMarkers
    boolean mFinished -> mFinished
    void add(java.lang.String,long) -> add
    void finish(java.lang.String) -> finish
    void finalize() -> finalize
    long getTotalDuration() -> getTotalDuration
com.android.volley.VolleyLog$MarkerLog$Marker -> com.android.volley.VolleyLog$MarkerLog$Marker:
    java.lang.String name -> name
    long thread -> thread
    long time -> time
com.android.volley.toolbox.AndroidAuthenticator -> com.android.volley.toolbox.AndroidAuthenticator:
    android.content.Context mContext -> mContext
    android.accounts.Account mAccount -> mAccount
    java.lang.String mAuthTokenType -> mAuthTokenType
    boolean mNotifyAuthFailure -> mNotifyAuthFailure
    android.accounts.Account getAccount() -> getAccount
    java.lang.String getAuthToken() -> getAuthToken
    void invalidateAuthToken(java.lang.String) -> invalidateAuthToken
com.android.volley.toolbox.Authenticator -> com.android.volley.toolbox.Authenticator:
    java.lang.String getAuthToken() -> getAuthToken
    void invalidateAuthToken(java.lang.String) -> invalidateAuthToken
com.android.volley.toolbox.BasicNetwork -> com.android.volley.toolbox.BasicNetwork:
    boolean DEBUG -> DEBUG
    int SLOW_REQUEST_THRESHOLD_MS -> SLOW_REQUEST_THRESHOLD_MS
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.android.volley.toolbox.HttpStack mHttpStack -> mHttpStack
    com.android.volley.toolbox.ByteArrayPool mPool -> mPool
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
    void logSlowRequests(long,com.android.volley.Request,byte[],org.apache.http.StatusLine) -> logSlowRequests
    void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> attemptRetryOnException
    void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry) -> addCacheHeaders
    void logError(java.lang.String,java.lang.String,long) -> logError
    byte[] entityToBytes(org.apache.http.HttpEntity) -> entityToBytes
    java.util.Map convertHeaders(org.apache.http.Header[]) -> convertHeaders
com.android.volley.toolbox.ByteArrayPool -> com.android.volley.toolbox.ByteArrayPool:
    java.util.List mBuffersByLastUse -> mBuffersByLastUse
    java.util.List mBuffersBySize -> mBuffersBySize
    int mCurrentSize -> mCurrentSize
    int mSizeLimit -> mSizeLimit
    java.util.Comparator BUF_COMPARATOR -> BUF_COMPARATOR
    byte[] getBuf(int) -> getBuf
    void returnBuf(byte[]) -> returnBuf
    void trim() -> trim
com.android.volley.toolbox.ByteArrayPool$1 -> com.android.volley.toolbox.ByteArrayPool$1:
    int compare(byte[],byte[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.volley.toolbox.ClearCacheRequest -> com.android.volley.toolbox.ClearCacheRequest:
    com.android.volley.Cache mCache -> mCache
    java.lang.Runnable mCallback -> mCallback
    boolean isCanceled() -> isCanceled
    com.android.volley.Request$Priority getPriority() -> getPriority
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.DiskBasedCache -> com.android.volley.toolbox.DiskBasedCache:
    java.util.Map mEntries -> mEntries
    long mTotalSize -> mTotalSize
    java.io.File mRootDirectory -> mRootDirectory
    int mMaxCacheSizeInBytes -> mMaxCacheSizeInBytes
    int DEFAULT_DISK_USAGE_BYTES -> DEFAULT_DISK_USAGE_BYTES
    float HYSTERESIS_FACTOR -> HYSTERESIS_FACTOR
    int CACHE_MAGIC -> CACHE_MAGIC
    void clear() -> clear
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void initialize() -> initialize
    void invalidate(java.lang.String,boolean) -> invalidate
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void remove(java.lang.String) -> remove
    java.lang.String getFilenameForKey(java.lang.String) -> getFilenameForKey
    java.io.File getFileForKey(java.lang.String) -> getFileForKey
    void pruneIfNeeded(int) -> pruneIfNeeded
    void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> putEntry
    void removeEntry(java.lang.String) -> removeEntry
    byte[] streamToBytes(java.io.InputStream,int) -> streamToBytes
    int read(java.io.InputStream) -> read
    void writeInt(java.io.OutputStream,int) -> writeInt
    int readInt(java.io.InputStream) -> readInt
    void writeLong(java.io.OutputStream,long) -> writeLong
    long readLong(java.io.InputStream) -> readLong
    void writeString(java.io.OutputStream,java.lang.String) -> writeString
    java.lang.String readString(java.io.InputStream) -> readString
    void writeStringStringMap(java.util.Map,java.io.OutputStream) -> writeStringStringMap
    java.util.Map readStringStringMap(java.io.InputStream) -> readStringStringMap
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.android.volley.toolbox.DiskBasedCache$CacheHeader:
    long size -> size
    java.lang.String key -> key
    java.lang.String etag -> etag
    long serverDate -> serverDate
    long ttl -> ttl
    long softTtl -> softTtl
    java.util.Map responseHeaders -> responseHeaders
    com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream) -> readHeader
    com.android.volley.Cache$Entry toCacheEntry(byte[]) -> toCacheEntry
    boolean writeHeader(java.io.OutputStream) -> writeHeader
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.android.volley.toolbox.DiskBasedCache$CountingInputStream:
    int bytesRead -> bytesRead
    int read() -> read
    int read(byte[],int,int) -> read
    int access$1(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> access$1
com.android.volley.toolbox.HttpClientStack -> com.android.volley.toolbox.HttpClientStack:
    org.apache.http.client.HttpClient mClient -> mClient
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> addHeaders
    java.util.List getPostParameterPairs(java.util.Map) -> getPostParameterPairs
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    org.apache.http.client.methods.HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map) -> createHttpRequest
    void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> setEntityIfNonEmptyBody
    void onPrepareRequest(org.apache.http.client.methods.HttpUriRequest) -> onPrepareRequest
com.android.volley.toolbox.HttpClientStack$HttpPatch -> com.android.volley.toolbox.HttpClientStack$HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
com.android.volley.toolbox.HttpHeaderParser -> com.android.volley.toolbox.HttpHeaderParser:
    com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> parseCacheHeaders
    long parseDateAsEpoch(java.lang.String) -> parseDateAsEpoch
    java.lang.String parseCharset(java.util.Map) -> parseCharset
com.android.volley.toolbox.HttpStack -> com.android.volley.toolbox.HttpStack:
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
com.android.volley.toolbox.HurlStack -> com.android.volley.toolbox.HurlStack:
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter -> mUrlRewriter
    javax.net.ssl.SSLSocketFactory mSslSocketFactory -> mSslSocketFactory
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection) -> entityFromConnection
    java.net.HttpURLConnection createConnection(java.net.URL) -> createConnection
    java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> openConnection
    void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> setConnectionParametersForRequest
    void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> addBodyIfExists
com.android.volley.toolbox.HurlStack$UrlRewriter -> com.android.volley.toolbox.HurlStack$UrlRewriter:
    java.lang.String rewriteUrl(java.lang.String) -> rewriteUrl
com.android.volley.toolbox.ImageLoader -> com.android.volley.toolbox.ImageLoader:
    com.android.volley.RequestQueue mRequestQueue -> mRequestQueue
    int mBatchResponseDelayMs -> mBatchResponseDelayMs
    com.android.volley.toolbox.ImageLoader$ImageCache mCache -> mCache
    java.util.HashMap mInFlightRequests -> mInFlightRequests
    java.util.HashMap mBatchedResponses -> mBatchedResponses
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRunnable -> mRunnable
    com.android.volley.toolbox.ImageLoader$ImageListener getImageListener(android.widget.ImageView,int,int) -> getImageListener
    boolean isCached(java.lang.String,int,int) -> isCached
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener) -> get
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener,int,int) -> get
    void setBatchedResponseDelay(int) -> setBatchedResponseDelay
    void onGetImageSuccess(java.lang.String,android.graphics.Bitmap) -> onGetImageSuccess
    void onGetImageError(java.lang.String,com.android.volley.VolleyError) -> onGetImageError
    void batchResponse(java.lang.String,com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> batchResponse
    void throwIfNotOnMainThread() -> throwIfNotOnMainThread
    java.lang.String getCacheKey(java.lang.String,int,int) -> getCacheKey
    java.util.HashMap access$0(com.android.volley.toolbox.ImageLoader) -> access$0
    java.util.HashMap access$1(com.android.volley.toolbox.ImageLoader) -> access$1
    void access$2(com.android.volley.toolbox.ImageLoader,java.lang.String,android.graphics.Bitmap) -> access$2
    void access$3(com.android.volley.toolbox.ImageLoader,java.lang.String,com.android.volley.VolleyError) -> access$3
    void access$4(com.android.volley.toolbox.ImageLoader,java.lang.Runnable) -> access$4
com.android.volley.toolbox.ImageLoader$1 -> com.android.volley.toolbox.ImageLoader$1:
    int val$errorImageResId -> val$errorImageResId
    android.widget.ImageView val$view -> val$view
    int val$defaultImageResId -> val$defaultImageResId
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.ImageLoader$2 -> com.android.volley.toolbox.ImageLoader$2:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    java.lang.String val$cacheKey -> val$cacheKey
    void onResponse(android.graphics.Bitmap) -> onResponse
    void onResponse(java.lang.Object) -> onResponse
com.android.volley.toolbox.ImageLoader$3 -> com.android.volley.toolbox.ImageLoader$3:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    java.lang.String val$cacheKey -> val$cacheKey
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.toolbox.ImageLoader$4 -> com.android.volley.toolbox.ImageLoader$4:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void run() -> run
com.android.volley.toolbox.ImageLoader$BatchedImageRequest -> com.android.volley.toolbox.ImageLoader$BatchedImageRequest:
    com.android.volley.Request mRequest -> mRequest
    android.graphics.Bitmap mResponseBitmap -> mResponseBitmap
    com.android.volley.VolleyError mError -> mError
    java.util.LinkedList mContainers -> mContainers
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void setError(com.android.volley.VolleyError) -> setError
    com.android.volley.VolleyError getError() -> getError
    void addContainer(com.android.volley.toolbox.ImageLoader$ImageContainer) -> addContainer
    boolean removeContainerAndCancelIfNecessary(com.android.volley.toolbox.ImageLoader$ImageContainer) -> removeContainerAndCancelIfNecessary
    java.util.LinkedList access$0(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> access$0
    void access$1(com.android.volley.toolbox.ImageLoader$BatchedImageRequest,android.graphics.Bitmap) -> access$1
    android.graphics.Bitmap access$2(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> access$2
com.android.volley.toolbox.ImageLoader$ImageCache -> com.android.volley.toolbox.ImageLoader$ImageCache:
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
com.android.volley.toolbox.ImageLoader$ImageContainer -> com.android.volley.toolbox.ImageLoader$ImageContainer:
    android.graphics.Bitmap mBitmap -> mBitmap
    com.android.volley.toolbox.ImageLoader$ImageListener mListener -> mListener
    java.lang.String mCacheKey -> mCacheKey
    java.lang.String mRequestUrl -> mRequestUrl
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void cancelRequest() -> cancelRequest
    android.graphics.Bitmap getBitmap() -> getBitmap
    java.lang.String getRequestUrl() -> getRequestUrl
    com.android.volley.toolbox.ImageLoader$ImageListener access$0(com.android.volley.toolbox.ImageLoader$ImageContainer) -> access$0
    void access$1(com.android.volley.toolbox.ImageLoader$ImageContainer,android.graphics.Bitmap) -> access$1
com.android.volley.toolbox.ImageLoader$ImageListener -> com.android.volley.toolbox.ImageLoader$ImageListener:
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.ImageRequest -> com.android.volley.toolbox.ImageRequest:
    int IMAGE_TIMEOUT_MS -> IMAGE_TIMEOUT_MS
    int IMAGE_MAX_RETRIES -> IMAGE_MAX_RETRIES
    float IMAGE_BACKOFF_MULT -> IMAGE_BACKOFF_MULT
    com.android.volley.Response$Listener mListener -> mListener
    android.graphics.Bitmap$Config mDecodeConfig -> mDecodeConfig
    int mMaxWidth -> mMaxWidth
    int mMaxHeight -> mMaxHeight
    java.lang.Object sDecodeLock -> sDecodeLock
    com.android.volley.Request$Priority getPriority() -> getPriority
    int getResizedDimension(int,int,int,int) -> getResizedDimension
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    com.android.volley.Response doParse(com.android.volley.NetworkResponse) -> doParse
    void deliverResponse(android.graphics.Bitmap) -> deliverResponse
    int findBestSampleSize(int,int,int,int) -> findBestSampleSize
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.JsonArrayRequest -> com.android.volley.toolbox.JsonArrayRequest:
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.JsonObjectRequest -> com.android.volley.toolbox.JsonObjectRequest:
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.JsonRequest -> com.android.volley.toolbox.JsonRequest:
    java.lang.String PROTOCOL_CHARSET -> PROTOCOL_CHARSET
    java.lang.String PROTOCOL_CONTENT_TYPE -> PROTOCOL_CONTENT_TYPE
    com.android.volley.Response$Listener mListener -> mListener
    java.lang.String mRequestBody -> mRequestBody
    void deliverResponse(java.lang.Object) -> deliverResponse
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    java.lang.String getPostBodyContentType() -> getPostBodyContentType
    byte[] getPostBody() -> getPostBody
    java.lang.String getBodyContentType() -> getBodyContentType
    byte[] getBody() -> getBody
com.android.volley.toolbox.NetworkImageView -> com.android.volley.toolbox.NetworkImageView:
    java.lang.String mUrl -> mUrl
    int mDefaultImageId -> mDefaultImageId
    int mErrorImageId -> mErrorImageId
    com.android.volley.toolbox.ImageLoader mImageLoader -> mImageLoader
    com.android.volley.toolbox.ImageLoader$ImageContainer mImageContainer -> mImageContainer
    void setImageUrl(java.lang.String,com.android.volley.toolbox.ImageLoader) -> setImageUrl
    void setDefaultImageResId(int) -> setDefaultImageResId
    void setErrorImageResId(int) -> setErrorImageResId
    void loadImageIfNecessary(boolean) -> loadImageIfNecessary
    void setDefaultImageOrNull() -> setDefaultImageOrNull
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawableStateChanged() -> drawableStateChanged
    int access$0(com.android.volley.toolbox.NetworkImageView) -> access$0
    int access$1(com.android.volley.toolbox.NetworkImageView) -> access$1
com.android.volley.toolbox.NetworkImageView$1 -> com.android.volley.toolbox.NetworkImageView$1:
    com.android.volley.toolbox.NetworkImageView this$0 -> this$0
    boolean val$isInLayoutPass -> val$isInLayoutPass
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.NetworkImageView$1$1 -> com.android.volley.toolbox.NetworkImageView$1$1:
    com.android.volley.toolbox.NetworkImageView$1 this$1 -> this$1
    com.android.volley.toolbox.ImageLoader$ImageContainer val$response -> val$response
    void run() -> run
com.android.volley.toolbox.NoCache -> com.android.volley.toolbox.NoCache:
    void clear() -> clear
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void invalidate(java.lang.String,boolean) -> invalidate
    void remove(java.lang.String) -> remove
    void initialize() -> initialize
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.android.volley.toolbox.PoolingByteArrayOutputStream:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    com.android.volley.toolbox.ByteArrayPool mPool -> mPool
    void close() -> close
    void finalize() -> finalize
    void expand(int) -> expand
    void write(byte[],int,int) -> write
    void write(int) -> write
com.android.volley.toolbox.RequestFuture -> com.android.volley.toolbox.RequestFuture:
    com.android.volley.Request mRequest -> mRequest
    boolean mResultReceived -> mResultReceived
    java.lang.Object mResult -> mResult
    com.android.volley.VolleyError mException -> mException
    com.android.volley.toolbox.RequestFuture newFuture() -> newFuture
    void setRequest(com.android.volley.Request) -> setRequest
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object doGet(java.lang.Long) -> doGet
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    void onResponse(java.lang.Object) -> onResponse
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.toolbox.StringRequest -> com.android.volley.toolbox.StringRequest:
    com.android.volley.Response$Listener mListener -> mListener
    void deliverResponse(java.lang.String) -> deliverResponse
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.Volley -> com.android.volley.toolbox.Volley:
    java.lang.String DEFAULT_CACHE_DIR -> DEFAULT_CACHE_DIR
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack) -> newRequestQueue
    com.android.volley.RequestQueue newRequestQueue(android.content.Context) -> newRequestQueue
com.devil.openvideo.DetailActivity -> com.devil.openvideo.DetailActivity:
    java.lang.String movieId -> a
    java.lang.String recordMovieId -> b
    com.devil.openvideo.bean.MovieDetailBean detailBean -> c
    com.devil.openvideo.bean.EpisodeBean episodeBean -> d
    android.widget.LinearLayout detailContent -> e
    android.widget.ProgressBar detailLoadProgress -> f
    com.android.volley.toolbox.NetworkImageView imageView -> g
    android.view.View directorLayer -> h
    android.view.View performanceLayer -> i
    android.widget.TextView director -> j
    android.widget.TextView performance -> k
    android.widget.TextView desTextView -> l
    android.widget.ListView episodeList -> m
    android.widget.LinearLayout detailLayout -> n
    android.widget.TextView detailBtn -> o
    android.widget.TextView episodeBtn -> p
    android.widget.TextView showDateView -> q
    android.widget.TextView totalClickView -> r
    android.widget.TextView doubanRate -> s
    android.widget.TextView episodeTotal -> t
    android.widget.TextView updateTo -> u
    android.widget.Button playBtn -> v
    android.widget.TextView playedEpisode -> w
    android.widget.TextView PlayedTimes -> x
    com.devil.openvideo.DetailActivity$episodeAdapter adapter -> y
    boolean detailLoaded -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void findView() -> c
    void refreshData() -> d
    void refreshGridView() -> e
    void startLoadData() -> f
    void loadEpisode() -> g
    void executeRequest(com.android.volley.Request,java.lang.Object) -> a
    com.android.volley.Response$Listener responseListener() -> a
    com.android.volley.Response$ErrorListener errorSponseListener() -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.devil.openvideo.bean.EpisodeBean access$0(com.devil.openvideo.DetailActivity) -> a
    void access$1(com.devil.openvideo.DetailActivity,java.lang.String) -> a
    com.devil.openvideo.bean.MovieDetailBean access$2(com.devil.openvideo.DetailActivity) -> b
    android.widget.ListView access$3(com.devil.openvideo.DetailActivity) -> c
    android.widget.LinearLayout access$4(com.devil.openvideo.DetailActivity) -> d
    android.widget.TextView access$5(com.devil.openvideo.DetailActivity) -> e
    android.widget.TextView access$6(com.devil.openvideo.DetailActivity) -> f
    void access$7(com.devil.openvideo.DetailActivity,com.devil.openvideo.bean.EpisodeBean) -> a
    void access$8(com.devil.openvideo.DetailActivity) -> g
    void access$9(com.devil.openvideo.DetailActivity,com.devil.openvideo.bean.MovieDetailBean) -> a
    void access$10(com.devil.openvideo.DetailActivity) -> h
    void access$11(com.devil.openvideo.DetailActivity) -> i
com.devil.openvideo.DetailActivity$1 -> com.devil.openvideo.a:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.devil.openvideo.DetailActivity$2 -> com.devil.openvideo.b:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.DetailActivity$3 -> com.devil.openvideo.c:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.DetailActivity$4 -> com.devil.openvideo.d:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.DetailActivity$5 -> com.devil.openvideo.e:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.devil.openvideo.DetailActivity$6 -> com.devil.openvideo.f:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.devil.openvideo.DetailActivity$7 -> com.devil.openvideo.g:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.devil.openvideo.DetailActivity$8 -> com.devil.openvideo.h:
    com.devil.openvideo.DetailActivity this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.devil.openvideo.DetailActivity$ViewHolder -> com.devil.openvideo.i:
    com.android.volley.toolbox.NetworkImageView imagView -> d
    android.widget.TextView tagsView -> e
    android.widget.TextView desView -> f
    java.lang.String videoId -> a
    java.lang.String videoName -> b
    com.devil.openvideo.DetailActivity this$0 -> c
    void access$0(com.devil.openvideo.DetailActivity$ViewHolder,com.android.volley.toolbox.NetworkImageView) -> a
    void access$1(com.devil.openvideo.DetailActivity$ViewHolder,android.widget.TextView) -> a
    void access$2(com.devil.openvideo.DetailActivity$ViewHolder,android.widget.TextView) -> b
    android.widget.TextView access$3(com.devil.openvideo.DetailActivity$ViewHolder) -> a
    android.widget.TextView access$4(com.devil.openvideo.DetailActivity$ViewHolder) -> b
    com.android.volley.toolbox.NetworkImageView access$5(com.devil.openvideo.DetailActivity$ViewHolder) -> c
com.devil.openvideo.DetailActivity$episodeAdapter -> com.devil.openvideo.j:
    com.devil.openvideo.DetailActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.devil.openvideo.MediaPlayerActivity -> com.devil.openvideo.MediaPlayerActivity:
    boolean mShowing -> c
    boolean mDragging -> d
    long mDuration -> e
    io.vov.vitamio.MediaPlayer mMediaPlayer -> f
    android.view.SurfaceView mSurfaceView -> g
    android.view.SurfaceHolder holder -> h
    android.widget.ProgressBar progressBar -> i
    android.widget.TextView downloadRate -> j
    android.widget.TextView loadRate -> k
    android.widget.LinearLayout bufferLayout -> l
    java.lang.String path -> m
    long currentPosition -> n
    java.lang.String videoId -> o
    java.lang.String videoName -> p
    com.devil.openvideo.bean.PlayAddressBean bean -> q
    android.widget.RelativeLayout topLayout -> r
    android.widget.TextView movieName -> s
    android.widget.TextView systemTime -> t
    android.view.View playProgressView -> u
    android.widget.ImageButton playBtn -> v
    android.widget.TextView modeBtn -> w
    android.widget.TextView mCurrentTime -> x
    android.widget.TextView endTime -> y
    android.widget.SeekBar seekBar -> z
    com.devil.openvideo.view.MyPopWindow popWindow -> A
    java.util.ArrayList modeList -> B
    java.util.ArrayList modeVolueList -> C
    java.util.ArrayList urlList -> D
    android.os.Handler mHandler -> E
    java.lang.Runnable delayRunnable -> a
    long currentTimes -> b
    int mCurrentBufferPercentage -> F
    android.widget.SeekBar$OnSeekBarChangeListener seekBarChangeListener -> G
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void releaseMediaPlayer() -> a
    void findView() -> b
    void playVideo() -> c
    void initMediaPlayer(java.lang.String) -> a
    void refreshData() -> d
    void startVideoPlayback() -> e
    void getPlayUrl() -> f
    void executeRequest(com.android.volley.Request,java.lang.Object) -> a
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void showPopWindow() -> g
    void dismissPopWindow() -> h
    void DisplayFloatView() -> i
    void doPauseResume() -> j
    void updatePausePlay() -> k
    long setProgress() -> l
    long access$0(com.devil.openvideo.MediaPlayerActivity) -> a
    boolean access$1(com.devil.openvideo.MediaPlayerActivity) -> b
    boolean access$2(com.devil.openvideo.MediaPlayerActivity) -> c
    void access$3(com.devil.openvideo.MediaPlayerActivity) -> d
    android.widget.RelativeLayout access$4(com.devil.openvideo.MediaPlayerActivity) -> e
    android.view.View access$5(com.devil.openvideo.MediaPlayerActivity) -> f
    void access$6(com.devil.openvideo.MediaPlayerActivity,boolean) -> a
    void access$7(com.devil.openvideo.MediaPlayerActivity) -> g
    void access$8(com.devil.openvideo.MediaPlayerActivity,boolean) -> b
    android.os.Handler access$9(com.devil.openvideo.MediaPlayerActivity) -> h
    io.vov.vitamio.MediaPlayer access$10(com.devil.openvideo.MediaPlayerActivity) -> i
    long access$11(com.devil.openvideo.MediaPlayerActivity) -> j
    void access$12(com.devil.openvideo.MediaPlayerActivity) -> k
    com.devil.openvideo.view.MyPopWindow access$13(com.devil.openvideo.MediaPlayerActivity) -> l
    void access$14(com.devil.openvideo.MediaPlayerActivity) -> m
    void access$15(com.devil.openvideo.MediaPlayerActivity,com.devil.openvideo.bean.PlayAddressBean) -> a
    void access$16(com.devil.openvideo.MediaPlayerActivity) -> n
    android.widget.TextView access$17(com.devil.openvideo.MediaPlayerActivity) -> o
    void access$18(com.devil.openvideo.MediaPlayerActivity,long) -> a
com.devil.openvideo.MediaPlayerActivity$1 -> com.devil.openvideo.k:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.devil.openvideo.MediaPlayerActivity$2 -> com.devil.openvideo.l:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void run() -> run
com.devil.openvideo.MediaPlayerActivity$3 -> com.devil.openvideo.m:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.devil.openvideo.MediaPlayerActivity$4 -> com.devil.openvideo.n:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.MediaPlayerActivity$5 -> com.devil.openvideo.o:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.MediaPlayerActivity$6 -> com.devil.openvideo.p:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.devil.openvideo.MediaPlayerActivity$7 -> com.devil.openvideo.q:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.devil.openvideo.MediaPlayerActivity$8 -> com.devil.openvideo.r:
    com.devil.openvideo.MediaPlayerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.devil.openvideo.OpenApplication -> com.devil.openvideo.OpenApplication:
    com.devil.openvideo.OpenApplication instance -> a
    void onCreate() -> onCreate
    void initVolley() -> a
com.devil.openvideo.R -> com.devil.openvideo.s:
com.devil.openvideo.R$styleable -> com.devil.openvideo.t:
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered -> CirclePageIndicator_centered
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius -> CirclePageIndicator_radius
    int CirclePageIndicator_snap -> CirclePageIndicator_snap
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth -> CirclePageIndicator_strokeWidth
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered -> LinePageIndicator_centered
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor -> LinePageIndicator_selectedColor
    int LinePageIndicator_strokeWidth -> LinePageIndicator_strokeWidth
    int LinePageIndicator_unselectedColor -> LinePageIndicator_unselectedColor
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor -> TitlePageIndicator_selectedColor
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor -> UnderlinePageIndicator_selectedColor
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.devil.openvideo.SettingActivity -> com.devil.openvideo.SettingActivity:
    android.widget.TextView cacheSize -> a
    android.os.Handler handler -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void clearCache(android.view.View) -> clearCache
    void goToAboutUs(android.view.View) -> goToAboutUs
    void goToFeedback(android.view.View) -> goToFeedback
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.widget.TextView access$0(com.devil.openvideo.SettingActivity) -> a
com.devil.openvideo.SettingActivity$1 -> com.devil.openvideo.u:
    com.devil.openvideo.SettingActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.devil.openvideo.VideoMainActivity -> com.devil.openvideo.VideoMainActivity:
    java.lang.String LIST_TEXT -> c
    java.lang.String LIST_IMAGEVIEW -> d
    int mTag -> e
    java.lang.String[] categoryIds -> a
    com.devil.openvideo.slidingmenu.SlidingMenu sm -> f
    android.widget.ListView slidingItemList -> g
    android.widget.SimpleAdapter lvAdapter -> h
    long currentTimes -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initSlidingMenu() -> a
    void initView() -> b
    void initSildingListView() -> c
    java.util.List getData() -> d
    void onBackPressed() -> onBackPressed
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    int access$0(com.devil.openvideo.VideoMainActivity) -> a
    android.widget.ListView access$1(com.devil.openvideo.VideoMainActivity) -> b
    void access$2(com.devil.openvideo.VideoMainActivity,int) -> a
    com.devil.openvideo.slidingmenu.SlidingMenu access$3(com.devil.openvideo.VideoMainActivity) -> c
com.devil.openvideo.VideoMainActivity$1 -> com.devil.openvideo.v:
    com.devil.openvideo.VideoMainActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.devil.openvideo.VideoMainActivity$2 -> com.devil.openvideo.w:
    com.devil.openvideo.VideoMainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.devil.openvideo.VideoViewPlayerActivity -> com.devil.openvideo.VideoViewPlayerActivity:
    boolean mShowing -> c
    boolean mDragging -> d
    long mDuration -> e
    int mVideoLayout -> f
    io.vov.vitamio.widget.VideoView mVideoView -> g
    android.widget.ProgressBar progressBar -> h
    android.widget.TextView downloadRate -> i
    android.widget.TextView loadRate -> j
    android.widget.LinearLayout bufferLayout -> k
    java.lang.String path -> l
    long currentPosition -> m
    java.lang.String videoId -> n
    java.lang.String videoName -> o
    java.lang.String videoTitle -> p
    java.lang.String playMode -> q
    com.devil.openvideo.bean.PlayAddressBean bean -> r
    android.widget.RelativeLayout topLayout -> s
    android.widget.TextView movieName -> t
    android.widget.TextView systemTimes -> u
    android.widget.ImageView batteryImg -> v
    android.view.View playProgressView -> w
    android.widget.ImageButton playBtn -> x
    android.widget.TextView modeBtn -> y
    android.widget.TextView mCurrentTime -> z
    android.widget.TextView endTime -> A
    android.widget.SeekBar seekBar -> B
    android.widget.Button displayModebtn -> C
    com.devil.openvideo.view.MyPopWindow popWindow -> D
    java.util.ArrayList modeList -> E
    java.util.ArrayList modeVolueList -> F
    com.devil.openvideo.sql.DBManager dbManager -> G
    boolean isOnPause -> H
    boolean isComPlete -> I
    java.lang.Runnable delayRunnable -> a
    android.os.Handler mHandler -> J
    long currentTimes -> b
    int mCurrentBufferPercentage -> K
    android.widget.SeekBar$OnSeekBarChangeListener seekBarChangeListener -> L
    android.content.BroadcastReceiver broadcastReceiver -> M
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void upDateRecord() -> a
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void findView() -> b
    void playVideo() -> c
    void startVideoPlayback() -> d
    void getPlayUrl() -> e
    void executeRequest(com.android.volley.Request,java.lang.Object) -> a
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void showPopWindow() -> f
    void dismissPopWindow() -> g
    void DisplayFloatView() -> h
    void doPauseResume() -> i
    void updatePausePlay() -> j
    long setProgress() -> k
    void changeLayout(android.view.View) -> changeLayout
    android.widget.RelativeLayout access$0(com.devil.openvideo.VideoViewPlayerActivity) -> a
    android.view.View access$1(com.devil.openvideo.VideoViewPlayerActivity) -> b
    android.widget.Button access$2(com.devil.openvideo.VideoViewPlayerActivity) -> c
    void access$3(com.devil.openvideo.VideoViewPlayerActivity,boolean) -> a
    void access$4(com.devil.openvideo.VideoViewPlayerActivity) -> d
    long access$5(com.devil.openvideo.VideoViewPlayerActivity) -> e
    boolean access$6(com.devil.openvideo.VideoViewPlayerActivity) -> f
    boolean access$7(com.devil.openvideo.VideoViewPlayerActivity) -> g
    void access$8(com.devil.openvideo.VideoViewPlayerActivity) -> h
    void access$9(com.devil.openvideo.VideoViewPlayerActivity,boolean) -> b
    android.os.Handler access$10(com.devil.openvideo.VideoViewPlayerActivity) -> i
    long access$11(com.devil.openvideo.VideoViewPlayerActivity) -> j
    io.vov.vitamio.widget.VideoView access$12(com.devil.openvideo.VideoViewPlayerActivity) -> k
    android.widget.ImageView access$13(com.devil.openvideo.VideoViewPlayerActivity) -> l
    void access$14(com.devil.openvideo.VideoViewPlayerActivity) -> m
    com.devil.openvideo.view.MyPopWindow access$15(com.devil.openvideo.VideoViewPlayerActivity) -> n
    void access$16(com.devil.openvideo.VideoViewPlayerActivity) -> o
    void access$17(com.devil.openvideo.VideoViewPlayerActivity,com.devil.openvideo.bean.PlayAddressBean) -> a
    void access$18(com.devil.openvideo.VideoViewPlayerActivity) -> p
    android.widget.TextView access$19(com.devil.openvideo.VideoViewPlayerActivity) -> q
    void access$20(com.devil.openvideo.VideoViewPlayerActivity,java.lang.String) -> a
    void access$21(com.devil.openvideo.VideoViewPlayerActivity,long) -> a
    long access$22(com.devil.openvideo.VideoViewPlayerActivity) -> r
com.devil.openvideo.VideoViewPlayerActivity$1 -> com.devil.openvideo.x:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void run() -> run
com.devil.openvideo.VideoViewPlayerActivity$2 -> com.devil.openvideo.y:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.devil.openvideo.VideoViewPlayerActivity$3 -> com.devil.openvideo.z:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.devil.openvideo.VideoViewPlayerActivity$4 -> com.devil.openvideo.aa:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.devil.openvideo.VideoViewPlayerActivity$5 -> com.devil.openvideo.ab:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.VideoViewPlayerActivity$6 -> com.devil.openvideo.ac:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.VideoViewPlayerActivity$7 -> com.devil.openvideo.ad:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.devil.openvideo.VideoViewPlayerActivity$8 -> com.devil.openvideo.ae:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.devil.openvideo.VideoViewPlayerActivity$9 -> com.devil.openvideo.af:
    com.devil.openvideo.VideoViewPlayerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.devil.openvideo.adapter.OpenVideoFragmentAdapter -> com.devil.openvideo.a.a:
    com.devil.openvideo.bean.CategoryBean$Results results -> a
    android.support.v4.app.FragmentManager fm -> b
    int cat -> c
    android.support.v4.app.Fragment getItem(int) -> a
    int getItemPosition(java.lang.Object) -> a
    java.lang.CharSequence getPageTitle(int) -> b
    int getCount() -> b
com.devil.openvideo.adapter.PopListViewAdapter -> com.devil.openvideo.a.b:
    java.util.ArrayList itemList -> a
    java.util.ArrayList itemValueList -> b
    android.content.Context mContext -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.devil.openvideo.adapter.PopListViewAdapter$PopViewHolder -> com.devil.openvideo.a.c:
    android.widget.TextView textView -> a
    java.lang.String url -> b
    com.devil.openvideo.adapter.PopListViewAdapter this$0 -> c
    android.widget.TextView getTextView() -> a
    java.lang.String getUrl() -> b
com.devil.openvideo.bean.CategoryBean -> com.devil.openvideo.b.a:
    java.util.List resultsList -> a
    java.lang.String status -> b
    void init(org.json.JSONObject) -> a
    java.util.List getResultsList() -> a
com.devil.openvideo.bean.CategoryBean$Results -> com.devil.openvideo.b.b:
    java.lang.String title -> b
    java.lang.String cat -> c
    java.util.List itemsList -> d
    com.devil.openvideo.bean.CategoryBean this$0 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getTitle() -> a
    java.util.List getItemsList() -> b
com.devil.openvideo.bean.CategoryBean$Results$Items -> com.devil.openvideo.b.c:
    java.lang.String title -> b
    java.lang.String value -> c
    com.devil.openvideo.bean.CategoryBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getTitle() -> a
    java.lang.String getValue() -> b
com.devil.openvideo.bean.EpisodeBean -> com.devil.openvideo.b.d:
    int total -> a
    int pg -> b
    boolean show_update -> c
    java.lang.String order -> d
    java.util.List resultsList -> e
    java.lang.String status -> f
    java.lang.String showcats -> g
    int pz -> h
    void init(org.json.JSONObject) -> a
    java.util.List getResultsList() -> a
com.devil.openvideo.bean.EpisodeBean$Results -> com.devil.openvideo.b.e:
    java.lang.String desc -> c
    java.lang.String img -> d
    java.lang.String userid -> e
    int total_fav -> f
    int state -> g
    java.lang.String cats -> h
    boolean is_new -> i
    java.lang.String username -> j
    java.lang.String title -> k
    int total_comment -> l
    double reputation -> m
    java.lang.String[] streamtypes -> n
    java.lang.String tags -> o
    int limit -> p
    int show_videostage -> q
    int stg -> r
    int total_up -> s
    java.lang.String pubdate -> t
    int total_pv -> u
    double duration -> v
    int publicType -> w
    int show_videoseq -> x
    java.lang.String img_hd -> y
    int total_down -> z
    java.lang.String videoid -> A
    java.lang.String[] guest -> a
    com.devil.openvideo.bean.EpisodeBean this$0 -> b
    void init(org.json.JSONObject) -> a
    java.lang.String getDesc() -> a
    java.lang.String getImg() -> b
    java.lang.String getTitle() -> c
    java.lang.String getVideoid() -> d
com.devil.openvideo.bean.MainPageBean -> com.devil.openvideo.b.f:
    java.util.List result_movieList -> a
    java.lang.String status -> b
    java.util.List result_subjectList -> c
    void init(org.json.JSONObject) -> a
    java.util.List getResult_movieList() -> a
com.devil.openvideo.bean.MainPageBean$Result_movie -> com.devil.openvideo.b.g:
    int total -> b
    java.lang.String title -> c
    java.lang.String showid -> d
    java.lang.String category -> e
    java.lang.String desc -> f
    java.lang.String showname -> g
    java.lang.String show_bannerurl -> h
    int seq -> i
    java.lang.String show_vthumburl -> j
    java.lang.String show_thumburl -> k
    int stage -> l
    java.lang.String videoid -> m
    com.devil.openvideo.bean.MainPageBean this$0 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getTitle() -> a
    java.lang.String getShowid() -> b
    java.lang.String getShow_bannerurl() -> c
com.devil.openvideo.bean.MainPageBean$Result_subject -> com.devil.openvideo.b.h:
    java.lang.String background_image -> b
    int sid -> c
    java.lang.String title -> d
    java.lang.String launcher_banner_image -> e
    int layout -> f
    java.lang.String show_bannerurl -> g
    java.lang.String show_vthumburl -> h
    java.lang.String show_thumburl -> i
    com.devil.openvideo.bean.MainPageBean this$0 -> a
    void init(org.json.JSONObject) -> a
com.devil.openvideo.bean.MovieDetailBean -> com.devil.openvideo.b.i:
    com.devil.openvideo.bean.MovieDetailBean$Detail detail -> a
    java.lang.String status -> b
    void init(org.json.JSONObject) -> a
    com.devil.openvideo.bean.MovieDetailBean$Detail getDetail() -> a
com.devil.openvideo.bean.MovieDetailBean$Detail -> com.devil.openvideo.b.j:
    java.lang.String[] genre -> b
    java.lang.String showid -> c
    java.lang.String desc -> d
    java.lang.String total_vv -> e
    java.lang.String total_fav -> f
    java.lang.String img -> g
    java.lang.String stripe_bottom -> h
    java.lang.String douban_rating -> i
    java.lang.String img_default -> j
    java.lang.String tag_type -> k
    java.lang.String showtotal_search -> l
    java.lang.String cats -> m
    java.lang.String title -> n
    java.lang.String[] area -> o
    java.lang.String total_comment -> p
    java.lang.String showdate -> q
    int cats_id -> r
    java.lang.String reputation -> s
    java.lang.String show_videotype -> t
    int completed -> u
    int limit -> v
    java.lang.String img_type -> w
    java.lang.String episode_total -> x
    java.lang.String total_up -> y
    java.lang.String[] director -> z
    int videosize -> A
    int publicType -> B
    java.lang.String pk_odshow -> C
    java.lang.String total_down -> D
    java.lang.String[] performer -> E
    java.lang.String videoid -> F
    int format_flag -> G
    com.devil.openvideo.bean.MovieDetailBean this$0 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getDesc() -> a
    java.lang.String getTotal_vv() -> b
    java.lang.String getImg() -> c
    java.lang.String getStripe_bottom() -> d
    java.lang.String getTitle() -> e
    java.lang.String getShowdate() -> f
    int getCats_id() -> g
    java.lang.String getReputation() -> h
    java.lang.String getEpisode_total() -> i
    java.lang.String[] getDirector() -> j
    java.lang.String[] getPerformer() -> k
    java.lang.String getVideoid() -> l
com.devil.openvideo.bean.MovieListBean -> com.devil.openvideo.b.k:
    int total -> a
    java.lang.String pg -> b
    java.util.List resultsList -> c
    java.lang.String status -> d
    java.lang.String pz -> e
    void init(org.json.JSONObject) -> a
    int getTotal() -> a
    java.util.List getResultsList() -> b
com.devil.openvideo.bean.MovieListBean$Results -> com.devil.openvideo.b.l:
    java.lang.String show_thumburl_hd -> b
    java.lang.String showname -> c
    double reputation -> d
    java.lang.String show_vthumburl_hd -> e
    java.lang.String show_vthumburl -> f
    java.lang.String stripe_bottom -> g
    int show_thumburl_hd_type -> h
    java.lang.String show_thumburl -> i
    java.lang.String tid -> j
    java.lang.String type -> k
    int completed -> l
    int show_vthumburl_hd_type -> m
    java.lang.String middle_stripe -> n
    com.devil.openvideo.bean.MovieListBean this$0 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getShow_thumburl_hd() -> a
    java.lang.String getShowname() -> b
    java.lang.String getTid() -> c
    java.lang.String getMiddle_stripe() -> d
com.devil.openvideo.bean.PlayAddressBean -> com.devil.openvideo.b.m:
    com.devil.openvideo.bean.PlayAddressBean$Results results -> a
    java.lang.String status -> b
    java.util.List pointsList -> c
    double totalseconds -> d
    void init(org.json.JSONObject) -> a
    com.devil.openvideo.bean.PlayAddressBean$Results getResults() -> a
com.devil.openvideo.bean.PlayAddressBean$Points -> com.devil.openvideo.b.n:
    java.lang.String title -> b
    java.lang.String desc -> c
    double start -> d
    java.lang.String type -> e
    com.devil.openvideo.bean.PlayAddressBean this$0 -> a
    void init(org.json.JSONObject) -> a
com.devil.openvideo.bean.PlayAddressBean$Results -> com.devil.openvideo.b.o:
    java.util.List hd2List -> b
    java.util.List flvhdList -> c
    java.util.List m3u8_flvList -> d
    java.util.List m3gphdList -> e
    java.util.List mp4List -> f
    java.util.List m3u8_hdList -> g
    java.util.List m3u8_mp4List -> h
    java.util.List m3u8List -> i
    com.devil.openvideo.bean.PlayAddressBean this$0 -> a
    void init(org.json.JSONObject) -> a
    java.util.List getM3u8_flvList() -> a
    java.util.List getM3u8_hdList() -> b
    java.util.List getM3u8_mp4List() -> c
com.devil.openvideo.bean.PlayAddressBean$Results$Flvhd -> com.devil.openvideo.b.p:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
com.devil.openvideo.bean.PlayAddressBean$Results$Hd2 -> com.devil.openvideo.b.q:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
com.devil.openvideo.bean.PlayAddressBean$Results$M3gphd -> com.devil.openvideo.b.r:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
com.devil.openvideo.bean.PlayAddressBean$Results$M3u8 -> com.devil.openvideo.b.s:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
com.devil.openvideo.bean.PlayAddressBean$Results$M3u8_flv -> com.devil.openvideo.b.t:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getUrl() -> a
com.devil.openvideo.bean.PlayAddressBean$Results$M3u8_hd -> com.devil.openvideo.b.u:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getUrl() -> a
com.devil.openvideo.bean.PlayAddressBean$Results$M3u8_mp4 -> com.devil.openvideo.b.v:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
    java.lang.String getUrl() -> a
com.devil.openvideo.bean.PlayAddressBean$Results$Mp4 -> com.devil.openvideo.b.w:
    int id -> b
    int seconds -> c
    java.lang.String url -> d
    int size -> e
    com.devil.openvideo.bean.PlayAddressBean$Results this$1 -> a
    void init(org.json.JSONObject) -> a
com.devil.openvideo.bean.RecordBean -> com.devil.openvideo.b.x:
    java.lang.String position -> a
    java.lang.String movieId -> b
    java.lang.String movieTitle -> c
    java.lang.String getMovieId() -> a
    void setMovieId(java.lang.String) -> a
    java.lang.String getPosition() -> b
    void setPosition(java.lang.String) -> b
    java.lang.String getMovieTitle() -> c
    void setMovieTitle(java.lang.String) -> c
com.devil.openvideo.fragment.BaseFragment -> com.devil.openvideo.c.a:
    void executeRequest(com.android.volley.Request,java.lang.Object) -> a
com.devil.openvideo.fragment.MainPageFragmet -> com.devil.openvideo.c.b:
    android.widget.GridView gridView -> P
    android.widget.ProgressBar loadImageView -> Q
    com.devil.openvideo.bean.MainPageBean bean -> R
    com.devil.openvideo.view.MultiSwipeRefreshLayout swipeRefreshLayout -> S
    com.devil.openvideo.fragment.MainPageFragmet$MyBaseAdapter adapter -> T
    android.widget.TextView tips -> U
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void startLoadData() -> A
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void showUI() -> B
    com.android.volley.Response$Listener responseListener() -> C
    com.android.volley.Response$ErrorListener errorSponseListener() -> D
com.devil.openvideo.fragment.MainPageFragmet$1 -> com.devil.openvideo.c.c:
    com.devil.openvideo.fragment.MainPageFragmet this$0 -> a
    void onRefresh() -> a
com.devil.openvideo.fragment.MainPageFragmet$2 -> com.devil.openvideo.c.d:
    com.devil.openvideo.fragment.MainPageFragmet this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.devil.openvideo.fragment.MainPageFragmet$3 -> com.devil.openvideo.c.e:
    com.devil.openvideo.fragment.MainPageFragmet this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.fragment.MainPageFragmet$4 -> com.devil.openvideo.c.f:
    com.devil.openvideo.fragment.MainPageFragmet this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.devil.openvideo.fragment.MainPageFragmet$5 -> com.devil.openvideo.c.g:
    com.devil.openvideo.fragment.MainPageFragmet this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.devil.openvideo.fragment.MainPageFragmet$MyBaseAdapter -> com.devil.openvideo.c.h:
    android.content.Context context -> a
    com.devil.openvideo.fragment.MainPageFragmet this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.devil.openvideo.fragment.MainPageFragmet$ViewHolder -> com.devil.openvideo.c.i:
    android.widget.TextView movieTitle -> a
    com.android.volley.toolbox.NetworkImageView imageView -> b
    java.lang.String tid -> c
    com.devil.openvideo.fragment.MainPageFragmet this$0 -> d
com.devil.openvideo.fragment.PagerContentFragment -> com.devil.openvideo.c.j:
    com.devil.openvideo.indicator.TabPageIndicator indicator -> Q
    android.support.v4.view.ViewPager pager -> R
    android.widget.ProgressBar loadImageView -> S
    com.devil.openvideo.bean.CategoryBean bean -> T
    com.devil.openvideo.adapter.OpenVideoFragmentAdapter adapter -> U
    com.devil.openvideo.slidingmenu.SlidingMenu sm -> V
    android.widget.TextView tipsView -> W
    int catId -> X
    android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener -> P
    android.support.v4.app.Fragment newInstance(com.devil.openvideo.slidingmenu.SlidingMenu,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void startLoad() -> C
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void setAdapter() -> D
    com.android.volley.Response$Listener responseListener() -> A
    com.android.volley.Response$ErrorListener errorSponseListener() -> B
    com.devil.openvideo.slidingmenu.SlidingMenu access$0(com.devil.openvideo.fragment.PagerContentFragment) -> a
    android.support.v4.view.ViewPager access$1(com.devil.openvideo.fragment.PagerContentFragment) -> b
    android.widget.TextView access$2(com.devil.openvideo.fragment.PagerContentFragment) -> c
    android.widget.ProgressBar access$3(com.devil.openvideo.fragment.PagerContentFragment) -> d
    void access$4(com.devil.openvideo.fragment.PagerContentFragment) -> e
    void access$5(com.devil.openvideo.fragment.PagerContentFragment,com.devil.openvideo.bean.CategoryBean) -> a
    com.devil.openvideo.bean.CategoryBean access$6(com.devil.openvideo.fragment.PagerContentFragment) -> f
    void access$7(com.devil.openvideo.fragment.PagerContentFragment) -> g
com.devil.openvideo.fragment.PagerContentFragment$1 -> com.devil.openvideo.c.k:
    com.devil.openvideo.fragment.PagerContentFragment this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.devil.openvideo.fragment.PagerContentFragment$2 -> com.devil.openvideo.c.l:
    com.devil.openvideo.fragment.PagerContentFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.devil.openvideo.fragment.PagerContentFragment$3 -> com.devil.openvideo.c.m:
    com.devil.openvideo.fragment.PagerContentFragment this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.devil.openvideo.fragment.PagerContentFragment$4 -> com.devil.openvideo.c.n:
    com.devil.openvideo.fragment.PagerContentFragment this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.devil.openvideo.fragment.PagerItemFragment -> com.devil.openvideo.c.o:
    com.devil.openvideo.bean.CategoryBean$Results$Items mItems -> P
    java.lang.String mContent -> Q
    android.widget.GridView gridView -> R
    com.devil.openvideo.bean.MovieListBean bean -> S
    java.util.List results -> T
    com.devil.openvideo.fragment.PagerItemFragment$MyBaseAdapter adapter -> U
    com.devil.openvideo.view.MultiSwipeRefreshLayout swipeRefreshLayout -> V
    android.widget.ProgressBar progressBar -> W
    int currentPage -> X
    int tempPage -> Y
    int cat -> Z
    boolean isLoading -> aa
    int lastVisibleIndex -> ab
    android.support.v4.app.Fragment newInstance(com.devil.openvideo.bean.CategoryBean$Results$Items,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void startLoadData(int,int) -> a
    com.android.volley.Response$Listener responseListener() -> A
    com.android.volley.Response$ErrorListener errorSponseListener() -> B
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    java.util.List access$0(com.devil.openvideo.fragment.PagerItemFragment) -> a
    void access$1(com.devil.openvideo.fragment.PagerItemFragment,int,int) -> a
    int access$2(com.devil.openvideo.fragment.PagerItemFragment) -> b
    com.devil.openvideo.view.MultiSwipeRefreshLayout access$3(com.devil.openvideo.fragment.PagerItemFragment) -> c
    android.widget.ProgressBar access$4(com.devil.openvideo.fragment.PagerItemFragment) -> d
    int access$5(com.devil.openvideo.fragment.PagerItemFragment) -> e
    void access$6(com.devil.openvideo.fragment.PagerItemFragment,int) -> a
    void access$7(com.devil.openvideo.fragment.PagerItemFragment,com.devil.openvideo.bean.MovieListBean) -> a
    com.devil.openvideo.bean.MovieListBean access$8(com.devil.openvideo.fragment.PagerItemFragment) -> f
    com.devil.openvideo.fragment.PagerItemFragment$MyBaseAdapter access$9(com.devil.openvideo.fragment.PagerItemFragment) -> g
    void access$10(com.devil.openvideo.fragment.PagerItemFragment,int) -> b
com.devil.openvideo.fragment.PagerItemFragment$1 -> com.devil.openvideo.c.p:
    com.devil.openvideo.fragment.PagerItemFragment this$0 -> a
    void onRefresh() -> a
com.devil.openvideo.fragment.PagerItemFragment$2 -> com.devil.openvideo.c.q:
    com.devil.openvideo.fragment.PagerItemFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.devil.openvideo.fragment.PagerItemFragment$3 -> com.devil.openvideo.c.r:
    com.devil.openvideo.fragment.PagerItemFragment this$0 -> a
    void onResponse(org.json.JSONObject) -> a
    void onResponse(java.lang.Object) -> onResponse
com.devil.openvideo.fragment.PagerItemFragment$4 -> com.devil.openvideo.c.s:
    com.devil.openvideo.fragment.PagerItemFragment this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.devil.openvideo.fragment.PagerItemFragment$MyBaseAdapter -> com.devil.openvideo.c.t:
    android.content.Context context -> a
    com.devil.openvideo.fragment.PagerItemFragment this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.devil.openvideo.fragment.PagerItemFragment$ViewHolder -> com.devil.openvideo.c.u:
    android.widget.TextView movieTitle -> a
    android.widget.TextView updateTips -> b
    com.android.volley.toolbox.NetworkImageView imageView -> c
    java.lang.String tid -> d
    com.devil.openvideo.fragment.PagerItemFragment this$0 -> e
com.devil.openvideo.indicator.CirclePageIndicator -> com.devil.openvideo.indicator.CirclePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    float mRadius -> mRadius
    android.graphics.Paint mPaintPageFill -> mPaintPageFill
    android.graphics.Paint mPaintStroke -> mPaintStroke
    android.graphics.Paint mPaintFill -> mPaintFill
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    int mSnapPage -> mSnapPage
    float mPageOffset -> mPageOffset
    int mScrollState -> mScrollState
    int mOrientation -> mOrientation
    boolean mCentered -> mCentered
    boolean mSnap -> mSnap
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    void setCentered(boolean) -> setCentered
    boolean isCentered() -> isCentered
    void setPageColor(int) -> setPageColor
    int getPageColor() -> getPageColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setSnap(boolean) -> setSnap
    boolean isSnap() -> isSnap
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> measureLong
    int measureShort(int) -> measureShort
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.devil.openvideo.indicator.CirclePageIndicator$SavedState -> com.devil.openvideo.indicator.CirclePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1 -> com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1:
    com.devil.openvideo.indicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.devil.openvideo.indicator.CirclePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.devil.openvideo.indicator.IconPageIndicator -> com.devil.openvideo.indicator.IconPageIndicator:
    com.devil.openvideo.indicator.IcsLinearLayout mIconsLayout -> mIconsLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    java.lang.Runnable mIconSelector -> mIconSelector
    int mSelectedIndex -> mSelectedIndex
    void animateToIcon(int) -> animateToIcon
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void access$0(com.devil.openvideo.indicator.IconPageIndicator,java.lang.Runnable) -> access$0
com.devil.openvideo.indicator.IconPageIndicator$1 -> com.devil.openvideo.indicator.IconPageIndicator$1:
    com.devil.openvideo.indicator.IconPageIndicator this$0 -> this$0
    android.view.View val$iconView -> val$iconView
    void run() -> run
com.devil.openvideo.indicator.IconPagerAdapter -> com.devil.openvideo.indicator.IconPagerAdapter:
    int getIconResId(int) -> getIconResId
    int getCount() -> getCount
com.devil.openvideo.indicator.IcsLinearLayout -> com.devil.openvideo.indicator.IcsLinearLayout:
    int[] LL -> LL
    int LL_DIVIDER -> LL_DIVIDER
    int LL_SHOW_DIVIDER -> LL_SHOW_DIVIDER
    int LL_DIVIDER_PADDING -> LL_DIVIDER_PADDING
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.devil.openvideo.indicator.LinePageIndicator -> com.devil.openvideo.indicator.LinePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    android.graphics.Paint mPaintUnselected -> mPaintUnselected
    android.graphics.Paint mPaintSelected -> mPaintSelected
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    boolean mCentered -> mCentered
    float mLineWidth -> mLineWidth
    float mGapWidth -> mGapWidth
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    void setCentered(boolean) -> setCentered
    boolean isCentered() -> isCentered
    void setUnselectedColor(int) -> setUnselectedColor
    int getUnselectedColor() -> getUnselectedColor
    void setSelectedColor(int) -> setSelectedColor
    int getSelectedColor() -> getSelectedColor
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setGapWidth(float) -> setGapWidth
    float getGapWidth() -> getGapWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.devil.openvideo.indicator.LinePageIndicator$SavedState -> com.devil.openvideo.indicator.LinePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.devil.openvideo.indicator.LinePageIndicator$SavedState$1 -> com.devil.openvideo.indicator.LinePageIndicator$SavedState$1:
    com.devil.openvideo.indicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.devil.openvideo.indicator.LinePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.devil.openvideo.indicator.PageIndicator -> com.devil.openvideo.indicator.PageIndicator:
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> notifyDataSetChanged
com.devil.openvideo.indicator.TabPageIndicator -> com.devil.openvideo.indicator.TabPageIndicator:
    java.lang.CharSequence EMPTY_TITLE -> EMPTY_TITLE
    java.lang.Runnable mTabSelector -> mTabSelector
    android.view.View$OnClickListener mTabClickListener -> mTabClickListener
    com.devil.openvideo.indicator.IcsLinearLayout mTabLayout -> mTabLayout
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mMaxTabWidth -> mMaxTabWidth
    int mSelectedTabIndex -> mSelectedTabIndex
    com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener mTabReselectedListener -> mTabReselectedListener
    void setOnTabReselectedListener(com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(int,java.lang.CharSequence,int) -> addTab
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager access$0(com.devil.openvideo.indicator.TabPageIndicator) -> access$0
    com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener access$1(com.devil.openvideo.indicator.TabPageIndicator) -> access$1
    int access$2(com.devil.openvideo.indicator.TabPageIndicator) -> access$2
    void access$3(com.devil.openvideo.indicator.TabPageIndicator,java.lang.Runnable) -> access$3
com.devil.openvideo.indicator.TabPageIndicator$1 -> com.devil.openvideo.indicator.TabPageIndicator$1:
    com.devil.openvideo.indicator.TabPageIndicator this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.devil.openvideo.indicator.TabPageIndicator$2 -> com.devil.openvideo.indicator.TabPageIndicator$2:
    com.devil.openvideo.indicator.TabPageIndicator this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener -> com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener:
    void onTabReselected(int) -> onTabReselected
com.devil.openvideo.indicator.TabPageIndicator$TabView -> com.devil.openvideo.indicator.TabPageIndicator$TabView:
    int mIndex -> mIndex
    com.devil.openvideo.indicator.TabPageIndicator this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> getIndex
    void access$0(com.devil.openvideo.indicator.TabPageIndicator$TabView,int) -> access$0
com.devil.openvideo.indicator.TitlePageIndicator -> com.devil.openvideo.indicator.TitlePageIndicator:
    float SELECTION_FADE_PERCENTAGE -> SELECTION_FADE_PERCENTAGE
    float BOLD_FADE_PERCENTAGE -> BOLD_FADE_PERCENTAGE
    java.lang.String EMPTY_TITLE -> EMPTY_TITLE
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mCurrentPage -> mCurrentPage
    float mPageOffset -> mPageOffset
    int mScrollState -> mScrollState
    android.graphics.Paint mPaintText -> mPaintText
    boolean mBoldText -> mBoldText
    int mColorText -> mColorText
    int mColorSelected -> mColorSelected
    android.graphics.Path mPath -> mPath
    android.graphics.Rect mBounds -> mBounds
    android.graphics.Paint mPaintFooterLine -> mPaintFooterLine
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> mFooterIndicatorStyle
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition mLinePosition -> mLinePosition
    android.graphics.Paint mPaintFooterIndicator -> mPaintFooterIndicator
    float mFooterIndicatorHeight -> mFooterIndicatorHeight
    float mFooterIndicatorUnderlinePadding -> mFooterIndicatorUnderlinePadding
    float mFooterPadding -> mFooterPadding
    float mTitlePadding -> mTitlePadding
    float mTopPadding -> mTopPadding
    float mClipPadding -> mClipPadding
    float mFooterLineHeight -> mFooterLineHeight
    int INVALID_POINTER -> INVALID_POINTER
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> mCenterItemClickListener
    int[] $SWITCH_TABLE$com$devil$openvideo$indicator$TitlePageIndicator$IndicatorStyle -> $SWITCH_TABLE$com$devil$openvideo$indicator$TitlePageIndicator$IndicatorStyle
    int getFooterColor() -> getFooterColor
    void setFooterColor(int) -> setFooterColor
    float getFooterLineHeight() -> getFooterLineHeight
    void setFooterLineHeight(float) -> setFooterLineHeight
    float getFooterIndicatorHeight() -> getFooterIndicatorHeight
    void setFooterIndicatorHeight(float) -> setFooterIndicatorHeight
    float getFooterIndicatorPadding() -> getFooterIndicatorPadding
    void setFooterIndicatorPadding(float) -> setFooterIndicatorPadding
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle() -> getFooterIndicatorStyle
    void setFooterIndicatorStyle(com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle) -> setFooterIndicatorStyle
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition getLinePosition() -> getLinePosition
    void setLinePosition(com.devil.openvideo.indicator.TitlePageIndicator$LinePosition) -> setLinePosition
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    boolean isSelectedBold() -> isSelectedBold
    void setSelectedBold(boolean) -> setSelectedBold
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getTitlePadding() -> getTitlePadding
    void setTitlePadding(float) -> setTitlePadding
    float getTopPadding() -> getTopPadding
    void setTopPadding(float) -> setTopPadding
    float getClipPadding() -> getClipPadding
    void setClipPadding(float) -> setClipPadding
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.Rect,float,int) -> clipViewOnTheRight
    void clipViewOnTheLeft(android.graphics.Rect,float,int) -> clipViewOnTheLeft
    java.util.ArrayList calculateAllBounds(android.graphics.Paint) -> calculateAllBounds
    android.graphics.Rect calcBounds(int,android.graphics.Paint) -> calcBounds
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setOnCenterItemClickListener(com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener) -> setOnCenterItemClickListener
    void setCurrentItem(int) -> setCurrentItem
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.CharSequence getTitle(int) -> getTitle
    int[] $SWITCH_TABLE$com$devil$openvideo$indicator$TitlePageIndicator$IndicatorStyle() -> $SWITCH_TABLE$com$devil$openvideo$indicator$TitlePageIndicator$IndicatorStyle
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle -> com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle:
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle None -> None
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle Triangle -> Triangle
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle Underline -> Underline
    int value -> value
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES -> ENUM$VALUES
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle fromValue(int) -> fromValue
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle[] values() -> values
    com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String) -> valueOf
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition -> com.devil.openvideo.indicator.TitlePageIndicator$LinePosition:
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition Bottom -> Bottom
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition Top -> Top
    int value -> value
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition[] ENUM$VALUES -> ENUM$VALUES
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition fromValue(int) -> fromValue
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition[] values() -> values
    com.devil.openvideo.indicator.TitlePageIndicator$LinePosition valueOf(java.lang.String) -> valueOf
com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener -> com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener:
    void onCenterItemClick(int) -> onCenterItemClick
com.devil.openvideo.indicator.TitlePageIndicator$SavedState -> com.devil.openvideo.indicator.TitlePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1 -> com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1:
    com.devil.openvideo.indicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.devil.openvideo.indicator.TitlePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.devil.openvideo.indicator.UnderlinePageIndicator -> com.devil.openvideo.indicator.UnderlinePageIndicator:
    int INVALID_POINTER -> INVALID_POINTER
    int FADE_FRAME_MS -> FADE_FRAME_MS
    android.graphics.Paint mPaint -> mPaint
    boolean mFades -> mFades
    int mFadeDelay -> mFadeDelay
    int mFadeLength -> mFadeLength
    int mFadeBy -> mFadeBy
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> mListener
    int mScrollState -> mScrollState
    int mCurrentPage -> mCurrentPage
    float mPositionOffset -> mPositionOffset
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    int mActivePointerId -> mActivePointerId
    boolean mIsDragging -> mIsDragging
    java.lang.Runnable mFadeRunnable -> mFadeRunnable
    boolean getFades() -> getFades
    void setFades(boolean) -> setFades
    int getFadeDelay() -> getFadeDelay
    void setFadeDelay(int) -> setFadeDelay
    int getFadeLength() -> getFadeLength
    void setFadeLength(int) -> setFadeLength
    int getSelectedColor() -> getSelectedColor
    void setSelectedColor(int) -> setSelectedColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    boolean access$0(com.devil.openvideo.indicator.UnderlinePageIndicator) -> access$0
    android.graphics.Paint access$1(com.devil.openvideo.indicator.UnderlinePageIndicator) -> access$1
    int access$2(com.devil.openvideo.indicator.UnderlinePageIndicator) -> access$2
    java.lang.Runnable access$3(com.devil.openvideo.indicator.UnderlinePageIndicator) -> access$3
com.devil.openvideo.indicator.UnderlinePageIndicator$1 -> com.devil.openvideo.indicator.UnderlinePageIndicator$1:
    com.devil.openvideo.indicator.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.devil.openvideo.indicator.UnderlinePageIndicator$2 -> com.devil.openvideo.indicator.UnderlinePageIndicator$2:
    com.devil.openvideo.indicator.UnderlinePageIndicator this$0 -> this$0
    void run() -> run
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState -> com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState:
    int currentPage -> currentPage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1 -> com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1:
    com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.devil.openvideo.net.RequestManager -> com.devil.openvideo.d.a:
    com.android.volley.RequestQueue mRequestQueue -> a
    com.android.volley.toolbox.ImageLoader mImageLoader -> b
    void init(android.content.Context) -> a
    void addRequest(com.android.volley.Request,java.lang.Object) -> a
    com.android.volley.toolbox.ImageLoader getImageLoader() -> a
com.devil.openvideo.net.cache.BitmapLruCache -> com.devil.openvideo.d.a.a:
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    int sizeOf(java.lang.Object,java.lang.Object) -> b
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder -> com.devil.openvideo.slidingmenu.CanvasTransformerBuilder:
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer mTrans -> mTrans
    android.view.animation.Interpolator lin -> lin
    void initTransformer() -> initTransformer
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int) -> zoom
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator) -> zoom
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer rotate(int,int,int,int) -> rotate
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator) -> rotate
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer translate(int,int,int,int) -> translate
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator) -> translate
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer concatTransformer(com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer) -> concatTransformer
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer access$0(com.devil.openvideo.slidingmenu.CanvasTransformerBuilder) -> access$0
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$1 -> com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$1:
    float getInterpolation(float) -> getInterpolation
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$2 -> com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$2:
    com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3 -> com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3:
    com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4 -> com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4:
    com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedDeg -> val$openedDeg
    int val$closedDeg -> val$closedDeg
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5 -> com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5:
    com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$6 -> com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$6:
    com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0 -> this$0
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer val$t -> val$t
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.devil.openvideo.slidingmenu.CustomViewAbove -> com.devil.openvideo.slidingmenu.CustomViewAbove:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.view.View mContent -> mContent
    int mCurItem -> mCurItem
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mScrolling -> mScrolling
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    com.devil.openvideo.slidingmenu.CustomViewBehind mViewBehind -> mViewBehind
    boolean mEnabled -> mEnabled
    com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener mClosedListener -> mClosedListener
    com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener -> mOpenedListener
    java.util.List mIgnoredViews -> mIgnoredViews
    int mTouchMode -> mTouchMode
    boolean mQuickReturn -> mQuickReturn
    float mScrollX -> mScrollX
    void initCustomViewAbove() -> initCustomViewAbove
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOnPageChangeListener(com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener) -> setInternalPageChangeListener
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int getDestScrollX(int) -> getDestScrollX
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> isMenuOpen
    boolean isInIgnoredView(android.view.MotionEvent) -> isInIgnoredView
    int getBehindWidth() -> getBehindWidth
    int getChildWidth(int) -> getChildWidth
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.devil.openvideo.slidingmenu.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> completeScroll
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> thisTouchAllowed
    boolean thisSlideAllowed(float) -> thisSlideAllowed
    int getPointerIndex(android.view.MotionEvent,int) -> getPointerIndex
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> determineDrag
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> determineTargetPage
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void startDrag() -> startDrag
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    com.devil.openvideo.slidingmenu.CustomViewBehind access$0(com.devil.openvideo.slidingmenu.CustomViewAbove) -> access$0
com.devil.openvideo.slidingmenu.CustomViewAbove$1 -> com.devil.openvideo.slidingmenu.CustomViewAbove$1:
    float getInterpolation(float) -> getInterpolation
com.devil.openvideo.slidingmenu.CustomViewAbove$2 -> com.devil.openvideo.slidingmenu.CustomViewAbove$2:
    com.devil.openvideo.slidingmenu.CustomViewAbove this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener -> com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.devil.openvideo.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener -> com.devil.openvideo.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.devil.openvideo.slidingmenu.CustomViewBehind -> com.devil.openvideo.slidingmenu.CustomViewBehind:
    java.lang.String TAG -> TAG
    int MARGIN_THRESHOLD -> MARGIN_THRESHOLD
    int mTouchMode -> mTouchMode
    com.devil.openvideo.slidingmenu.CustomViewAbove mViewAbove -> mViewAbove
    android.view.View mContent -> mContent
    android.view.View mSecondaryContent -> mSecondaryContent
    int mMarginThreshold -> mMarginThreshold
    int mWidthOffset -> mWidthOffset
    com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer mTransformer -> mTransformer
    boolean mChildrenEnabled -> mChildrenEnabled
    int mMode -> mMode
    boolean mFadeEnabled -> mFadeEnabled
    android.graphics.Paint mFadePaint -> mFadePaint
    float mScrollScale -> mScrollScale
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> mSecondaryShadowDrawable
    int mShadowWidth -> mShadowWidth
    float mFadeDegree -> mFadeDegree
    boolean mSelectorEnabled -> mSelectorEnabled
    android.graphics.Bitmap mSelectorDrawable -> mSelectorDrawable
    android.view.View mSelectedView -> mSelectedView
    void setCustomViewAbove(com.devil.openvideo.slidingmenu.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getMarginThreshold() -> getMarginThreshold
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> getMenuPage
    void scrollBehindTo(android.view.View,int,int) -> scrollBehindTo
    int getMenuLeft(android.view.View,int) -> getMenuLeft
    int getAbsLeftBound(android.view.View) -> getAbsLeftBound
    int getAbsRightBound(android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int) -> marginTouchAllowed
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(float) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(float) -> menuOpenSlideAllowed
    void drawShadow(android.view.View,android.graphics.Canvas) -> drawShadow
    void drawFade(android.view.View,android.graphics.Canvas,float) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.devil.openvideo.slidingmenu.MenuInterface -> com.devil.openvideo.slidingmenu.MenuInterface:
    void scrollBehindTo(int,int,com.devil.openvideo.slidingmenu.CustomViewBehind,float) -> scrollBehindTo
    int getMenuLeft(com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View) -> getMenuLeft
    int getAbsLeftBound(com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View) -> getAbsLeftBound
    int getAbsRightBound(com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int,int) -> marginTouchAllowed
    boolean menuOpenTouchAllowed(android.view.View,int,int) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,int) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(int) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(int) -> menuOpenSlideAllowed
    void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawShadow
    void drawFade(android.graphics.Canvas,int,com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
com.devil.openvideo.slidingmenu.SlidingMenu -> com.devil.openvideo.slidingmenu.SlidingMenu:
    java.lang.String TAG -> TAG
    int SLIDING_WINDOW -> SLIDING_WINDOW
    int SLIDING_CONTENT -> SLIDING_CONTENT
    boolean mActionbarOverlay -> mActionbarOverlay
    int TOUCHMODE_MARGIN -> TOUCHMODE_MARGIN
    int TOUCHMODE_FULLSCREEN -> TOUCHMODE_FULLSCREEN
    int TOUCHMODE_NONE -> TOUCHMODE_NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_RIGHT -> LEFT_RIGHT
    com.devil.openvideo.slidingmenu.CustomViewAbove mViewAbove -> mViewAbove
    com.devil.openvideo.slidingmenu.CustomViewBehind mViewBehind -> mViewBehind
    com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener mOpenListener -> mOpenListener
    com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener mSecondaryOpenListner -> mSecondaryOpenListner
    com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener mCloseListener -> mCloseListener
    void attachToActivity(android.app.Activity,int) -> attachToActivity
    void attachToActivity(android.app.Activity,int,boolean) -> attachToActivity
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> showMenu
    void showMenu(boolean) -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void showSecondaryMenu(boolean) -> showSecondaryMenu
    void showContent() -> showContent
    void showContent(boolean) -> showContent
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    boolean isMenuShowing() -> isMenuShowing
    boolean isSecondaryMenuShowing() -> isSecondaryMenuShowing
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    int getTouchmodeMarginThreshold() -> getTouchmodeMarginThreshold
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    void setOnOpenListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setSecondaryOnOpenListner(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener) -> setSecondaryOnOpenListner
    void setOnCloseListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> manageLayers
    com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener access$0(com.devil.openvideo.slidingmenu.SlidingMenu) -> access$0
    com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener access$1(com.devil.openvideo.slidingmenu.SlidingMenu) -> access$1
    com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener access$2(com.devil.openvideo.slidingmenu.SlidingMenu) -> access$2
    java.lang.String access$3() -> access$3
com.devil.openvideo.slidingmenu.SlidingMenu$1 -> com.devil.openvideo.slidingmenu.SlidingMenu$1:
    int POSITION_OPEN -> POSITION_OPEN
    int POSITION_CLOSE -> POSITION_CLOSE
    int POSITION_SECONDARY_OPEN -> POSITION_SECONDARY_OPEN
    com.devil.openvideo.slidingmenu.SlidingMenu this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.devil.openvideo.slidingmenu.SlidingMenu$2 -> com.devil.openvideo.slidingmenu.SlidingMenu$2:
    com.devil.openvideo.slidingmenu.SlidingMenu this$0 -> this$0
    int val$layerType -> val$layerType
    void run() -> run
com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer -> com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer:
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener -> com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener:
    void onClose() -> onClose
com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener -> com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener:
    void onClosed() -> onClosed
com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener -> com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener:
    void onOpen() -> onOpen
com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener -> com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener:
    void onOpened() -> onOpened
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState -> com.devil.openvideo.slidingmenu.SlidingMenu$SavedState:
    int mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> getItem
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1 -> com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1:
    com.devil.openvideo.slidingmenu.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.devil.openvideo.slidingmenu.SlidingMenu$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.devil.openvideo.slidingmenu.app.SlidingActivity -> com.devil.openvideo.slidingmenu.app.SlidingActivity:
    com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.devil.openvideo.slidingmenu.app.SlidingActivityBase -> com.devil.openvideo.slidingmenu.app.SlidingActivityBase:
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(int) -> setBehindContentView
    com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper -> com.devil.openvideo.slidingmenu.app.SlidingActivityHelper:
    android.app.Activity mActivity -> mActivity
    com.devil.openvideo.slidingmenu.SlidingMenu mSlidingMenu -> mSlidingMenu
    android.view.View mViewAbove -> mViewAbove
    android.view.View mViewBehind -> mViewBehind
    boolean mBroadcasting -> mBroadcasting
    boolean mOnPostCreateCalled -> mOnPostCreateCalled
    boolean mEnableSlide -> mEnableSlide
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> registerAboveContentView
    void setContentView(android.view.View) -> setContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.devil.openvideo.slidingmenu.SlidingMenu access$0(com.devil.openvideo.slidingmenu.app.SlidingActivityHelper) -> access$0
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1 -> com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1:
    com.devil.openvideo.slidingmenu.app.SlidingActivityHelper this$0 -> this$0
    boolean val$open -> val$open
    boolean val$secondary -> val$secondary
    void run() -> run
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity -> com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity:
    com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.devil.openvideo.slidingmenu.app.SlidingListActivity -> com.devil.openvideo.slidingmenu.app.SlidingListActivity:
    com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity -> com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity:
    com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.devil.openvideo.sql.DBManager -> com.devil.openvideo.e.a:
    android.content.Context mContext -> a
    com.devil.openvideo.sql.MovieSQLiteHelper helper -> b
    android.database.sqlite.SQLiteDatabase sqLiteDatabase -> c
    void add(com.devil.openvideo.bean.RecordBean) -> a
    void updatePosition(com.devil.openvideo.bean.RecordBean) -> b
    void deleteRecord(java.lang.String) -> a
    com.devil.openvideo.bean.RecordBean findByMovieId(java.lang.String) -> b
    void closeDB() -> a
com.devil.openvideo.sql.MovieSQLiteHelper -> com.devil.openvideo.e.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.devil.openvideo.util.JSONParser -> com.devil.openvideo.f.a:
    org.json.JSONObject jsonObject -> a
    org.json.JSONObject getJSONObject(java.lang.String) -> a
    org.json.JSONArray getJSONArray(java.lang.String) -> b
    java.lang.String getString(java.lang.String) -> c
    double getDouble(java.lang.String) -> d
    int getInt(java.lang.String) -> e
    boolean getBoolean(java.lang.String) -> f
    java.lang.String[] getStringArray(java.lang.String) -> g
com.devil.openvideo.util.LogUtil -> com.devil.openvideo.f.b:
    boolean isDebug -> a
    void v(java.lang.String,java.lang.String) -> a
    void d(java.lang.String,java.lang.String) -> b
    void i(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
com.devil.openvideo.util.MovieURLUtil -> com.devil.openvideo.f.c:
    java.lang.String getMovieListUrl(int,int,int,java.lang.String) -> a
    java.lang.String getMovieDetaiUrl(java.lang.String) -> a
    java.lang.String getMovieEpisodeUrl(java.lang.String,int,int) -> a
    java.lang.String getMoviePlayUrl(java.lang.String) -> b
com.devil.openvideo.util.Util -> com.devil.openvideo.f.d:
    java.lang.String getCurrentSystemTimes() -> a
    java.lang.String getCacheSize(android.content.Context) -> a
    long getDirSize(java.io.File) -> a
    java.lang.String formatFileSize(long) -> a
    void clearAppCache(android.content.Context,android.os.Handler) -> a
    int clearCacheFolder(java.io.File,long) -> b
    int access$0(java.io.File,long) -> a
com.devil.openvideo.util.Util$1 -> com.devil.openvideo.f.e:
    android.content.Context val$context -> a
    android.os.Handler val$handler -> b
    void run() -> run
com.devil.openvideo.view.MultiSwipeRefreshLayout -> com.devil.openvideo.view.MultiSwipeRefreshLayout:
    android.view.View[] mSwipeableChildren -> b
    boolean $assertionsDisabled -> a
    void setSwipeableChildren(int[]) -> setSwipeableChildren
    boolean canChildScrollUp() -> a
    boolean canViewScrollUp(android.view.View) -> a
com.devil.openvideo.view.MyPopWindow -> com.devil.openvideo.view.a:
io.vov.vitamio.EGL -> io.vov.vitamio.EGL:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    io.vov.vitamio.EGL$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    io.vov.vitamio.EGL$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    io.vov.vitamio.EGL$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    boolean initialize(android.view.Surface) -> initialize
    void release() -> release
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.Surface) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
    void throwEglException(java.lang.String,int) -> throwEglException
io.vov.vitamio.EGL$ComponentSizeChooser -> io.vov.vitamio.EGL$ComponentSizeChooser:
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    io.vov.vitamio.EGL this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
io.vov.vitamio.EGL$EGLConfigChooser -> io.vov.vitamio.EGL$EGLConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    io.vov.vitamio.EGL this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int[] filterConfigSpec(int[]) -> filterConfigSpec
io.vov.vitamio.EGL$EGLContextFactory -> io.vov.vitamio.EGL$EGLContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    io.vov.vitamio.EGL this$0 -> this$0
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
io.vov.vitamio.EGL$EGLWindowSurfaceFactory -> io.vov.vitamio.EGL$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
io.vov.vitamio.EGL$SimpleEGLConfigChooser -> io.vov.vitamio.EGL$SimpleEGLConfigChooser:
    io.vov.vitamio.EGL this$0 -> this$0
io.vov.vitamio.LibsChecker -> io.vov.vitamio.LibsChecker:
    java.lang.String FROM_ME -> FROM_ME
    boolean checkVitamioLibs(android.app.Activity) -> checkVitamioLibs
io.vov.vitamio.MediaFile -> io.vov.vitamio.MediaFile:
    java.lang.String sFileExtensions -> sFileExtensions
    int FILE_TYPE_MP3 -> FILE_TYPE_MP3
    int FILE_TYPE_M4A -> FILE_TYPE_M4A
    int FILE_TYPE_WAV -> FILE_TYPE_WAV
    int FILE_TYPE_AMR -> FILE_TYPE_AMR
    int FILE_TYPE_AWB -> FILE_TYPE_AWB
    int FILE_TYPE_WMA -> FILE_TYPE_WMA
    int FILE_TYPE_OGG -> FILE_TYPE_OGG
    int FILE_TYPE_AAC -> FILE_TYPE_AAC
    int FILE_TYPE_MKA -> FILE_TYPE_MKA
    int FILE_TYPE_MID -> FILE_TYPE_MID
    int FILE_TYPE_SMF -> FILE_TYPE_SMF
    int FILE_TYPE_IMY -> FILE_TYPE_IMY
    int FILE_TYPE_APE -> FILE_TYPE_APE
    int FILE_TYPE_FLAC -> FILE_TYPE_FLAC
    int FIRST_AUDIO_FILE_TYPE -> FIRST_AUDIO_FILE_TYPE
    int LAST_AUDIO_FILE_TYPE -> LAST_AUDIO_FILE_TYPE
    int FILE_TYPE_MP4 -> FILE_TYPE_MP4
    int FILE_TYPE_M4V -> FILE_TYPE_M4V
    int FILE_TYPE_3GPP -> FILE_TYPE_3GPP
    int FILE_TYPE_3GPP2 -> FILE_TYPE_3GPP2
    int FILE_TYPE_WMV -> FILE_TYPE_WMV
    int FILE_TYPE_ASF -> FILE_TYPE_ASF
    int FILE_TYPE_MKV -> FILE_TYPE_MKV
    int FILE_TYPE_MP2TS -> FILE_TYPE_MP2TS
    int FILE_TYPE_FLV -> FILE_TYPE_FLV
    int FILE_TYPE_MOV -> FILE_TYPE_MOV
    int FILE_TYPE_RM -> FILE_TYPE_RM
    int FILE_TYPE_DVD -> FILE_TYPE_DVD
    int FILE_TYPE_DIVX -> FILE_TYPE_DIVX
    int FILE_TYPE_OGV -> FILE_TYPE_OGV
    int FILE_TYPE_VIVO -> FILE_TYPE_VIVO
    int FILE_TYPE_WTV -> FILE_TYPE_WTV
    int FILE_TYPE_AVS -> FILE_TYPE_AVS
    int FILE_TYPE_SWF -> FILE_TYPE_SWF
    int FILE_TYPE_RAW -> FILE_TYPE_RAW
    int FIRST_VIDEO_FILE_TYPE -> FIRST_VIDEO_FILE_TYPE
    int LAST_VIDEO_FILE_TYPE -> LAST_VIDEO_FILE_TYPE
    java.util.HashMap sFileTypeMap -> sFileTypeMap
    java.util.HashMap sMimeTypeMap -> sMimeTypeMap
    void addFileType(java.lang.String,int,java.lang.String) -> addFileType
    boolean isAudioFileType(int) -> isAudioFileType
    boolean isVideoFileType(int) -> isVideoFileType
    io.vov.vitamio.MediaFile$MediaFileType getFileType(java.lang.String) -> getFileType
    int getFileTypeForMimeType(java.lang.String) -> getFileTypeForMimeType
io.vov.vitamio.MediaFile$MediaFileType -> io.vov.vitamio.MediaFile$MediaFileType:
    int fileType -> fileType
    java.lang.String mimeType -> mimeType
io.vov.vitamio.MediaFormat -> io.vov.vitamio.MediaFormat:
    java.util.Map mMap -> mMap
    java.lang.String KEY_MIME -> KEY_MIME
    java.lang.String KEY_LANGUAGE -> KEY_LANGUAGE
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_PATH -> KEY_PATH
    java.lang.String KEY_SAMPLE_RATE -> KEY_SAMPLE_RATE
    java.lang.String KEY_CHANNEL_COUNT -> KEY_CHANNEL_COUNT
    java.lang.String KEY_WIDTH -> KEY_WIDTH
    java.lang.String KEY_HEIGHT -> KEY_HEIGHT
    java.lang.String KEY_MAX_WIDTH -> KEY_MAX_WIDTH
    java.lang.String KEY_MAX_HEIGHT -> KEY_MAX_HEIGHT
    java.lang.String KEY_MAX_INPUT_SIZE -> KEY_MAX_INPUT_SIZE
    java.lang.String KEY_BIT_RATE -> KEY_BIT_RATE
    java.lang.String KEY_COLOR_FORMAT -> KEY_COLOR_FORMAT
    java.lang.String KEY_FRAME_RATE -> KEY_FRAME_RATE
    java.lang.String KEY_I_FRAME_INTERVAL -> KEY_I_FRAME_INTERVAL
    java.lang.String KEY_STRIDE -> KEY_STRIDE
    java.lang.String KEY_SLICE_HEIGHT -> KEY_SLICE_HEIGHT
    java.lang.String KEY_REPEAT_PREVIOUS_FRAME_AFTER -> KEY_REPEAT_PREVIOUS_FRAME_AFTER
    java.lang.String KEY_PUSH_BLANK_BUFFERS_ON_STOP -> KEY_PUSH_BLANK_BUFFERS_ON_STOP
    java.lang.String KEY_DURATION -> KEY_DURATION
    java.lang.String KEY_IS_ADTS -> KEY_IS_ADTS
    java.lang.String KEY_CHANNEL_MASK -> KEY_CHANNEL_MASK
    java.lang.String KEY_AAC_PROFILE -> KEY_AAC_PROFILE
    java.lang.String KEY_FLAC_COMPRESSION_LEVEL -> KEY_FLAC_COMPRESSION_LEVEL
    java.lang.String KEY_IS_AUTOSELECT -> KEY_IS_AUTOSELECT
    java.lang.String KEY_IS_DEFAULT -> KEY_IS_DEFAULT
    java.lang.String KEY_IS_FORCED_SUBTITLE -> KEY_IS_FORCED_SUBTITLE
    java.util.Map getMap() -> getMap
    boolean containsKey(java.lang.String) -> containsKey
    int getInteger(java.lang.String) -> getInteger
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    java.nio.ByteBuffer getByteBuffer(java.lang.String) -> getByteBuffer
    void setInteger(java.lang.String,int) -> setInteger
    void setLong(java.lang.String,long) -> setLong
    void setFloat(java.lang.String,float) -> setFloat
    void setString(java.lang.String,java.lang.String) -> setString
    void setByteBuffer(java.lang.String,java.nio.ByteBuffer) -> setByteBuffer
    io.vov.vitamio.MediaFormat createAudioFormat(java.lang.String,int,int) -> createAudioFormat
    io.vov.vitamio.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String) -> createSubtitleFormat
    io.vov.vitamio.MediaFormat createVideoFormat(java.lang.String,int,int) -> createVideoFormat
    java.lang.String toString() -> toString
io.vov.vitamio.MediaMetadataRetriever -> io.vov.vitamio.MediaMetadataRetriever:
    android.content.res.AssetFileDescriptor mFD -> mFD
    int mNativeContext -> mNativeContext
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_COMMENT -> METADATA_KEY_COMMENT
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COPYRIGHT -> METADATA_KEY_COPYRIGHT
    java.lang.String METADATA_KEY_CREATION_TIME -> METADATA_KEY_CREATION_TIME
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_DISC -> METADATA_KEY_DISC
    java.lang.String METADATA_KEY_ENCODER -> METADATA_KEY_ENCODER
    java.lang.String METADATA_KEY_ENCODED_BY -> METADATA_KEY_ENCODED_BY
    java.lang.String METADATA_KEY_FILENAME -> METADATA_KEY_FILENAME
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_LANGUAGE -> METADATA_KEY_LANGUAGE
    java.lang.String METADATA_KEY_PERFORMER -> METADATA_KEY_PERFORMER
    java.lang.String METADATA_KEY_PUBLISHER -> METADATA_KEY_PUBLISHER
    java.lang.String METADATA_KEY_SERVICE_NAME -> METADATA_KEY_SERVICE_NAME
    java.lang.String METADATA_KEY_SERVICE_PROVIDER -> METADATA_KEY_SERVICE_PROVIDER
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_TRACK -> METADATA_KEY_TRACK
    java.lang.String METADATA_KEY_VARIANT_BITRATE -> METADATA_KEY_VARIANT_BITRATE
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_AUDIO_CODEC -> METADATA_KEY_AUDIO_CODEC
    java.lang.String METADATA_KEY_VIDEO_CODEC -> METADATA_KEY_VIDEO_CODEC
    java.lang.String METADATA_KEY_VIDEO_ROTATION -> METADATA_KEY_VIDEO_ROTATION
    java.lang.String METADATA_KEY_VIDEO_WIDTH -> METADATA_KEY_VIDEO_WIDTH
    java.lang.String METADATA_KEY_VIDEO_HEIGHT -> METADATA_KEY_VIDEO_HEIGHT
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_HAS_AUDIO -> METADATA_KEY_HAS_AUDIO
    java.lang.String METADATA_KEY_HAS_VIDEO -> METADATA_KEY_HAS_VIDEO
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    void setDataSource(java.lang.String) -> setDataSource
    void setDataSource(java.io.FileDescriptor) -> setDataSource
    java.lang.String extractMetadata(java.lang.String) -> extractMetadata
    android.graphics.Bitmap getFrameAtTime(long) -> getFrameAtTime
    byte[] getEmbeddedPicture() -> getEmbeddedPicture
    void _release() -> _release
    void native_setup() -> native_setup
    void native_init() -> native_init
    void native_finalize() -> native_finalize
    void release() -> release
    void finalize() -> finalize
    void closeFD() -> closeFD
io.vov.vitamio.MediaPlayer -> io.vov.vitamio.MediaPlayer:
    int CACHE_TYPE_NOT_AVAILABLE -> CACHE_TYPE_NOT_AVAILABLE
    int CACHE_TYPE_START -> CACHE_TYPE_START
    int CACHE_TYPE_UPDATE -> CACHE_TYPE_UPDATE
    int CACHE_TYPE_SPEED -> CACHE_TYPE_SPEED
    int CACHE_TYPE_COMPLETE -> CACHE_TYPE_COMPLETE
    int CACHE_INFO_NO_SPACE -> CACHE_INFO_NO_SPACE
    int CACHE_INFO_STREAM_NOT_SUPPORT -> CACHE_INFO_STREAM_NOT_SUPPORT
    int MEDIA_ERROR_UNKNOWN -> MEDIA_ERROR_UNKNOWN
    int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK -> MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK
    int MEDIA_ERROR_IO -> MEDIA_ERROR_IO
    int MEDIA_ERROR_MALFORMED -> MEDIA_ERROR_MALFORMED
    int MEDIA_ERROR_UNSUPPORTED -> MEDIA_ERROR_UNSUPPORTED
    int MEDIA_ERROR_TIMED_OUT -> MEDIA_ERROR_TIMED_OUT
    int MEDIA_INFO_VIDEO_TRACK_LAGGING -> MEDIA_INFO_VIDEO_TRACK_LAGGING
    int MEDIA_INFO_BUFFERING_START -> MEDIA_INFO_BUFFERING_START
    int MEDIA_INFO_BUFFERING_END -> MEDIA_INFO_BUFFERING_END
    int MEDIA_INFO_NOT_SEEKABLE -> MEDIA_INFO_NOT_SEEKABLE
    int MEDIA_INFO_DOWNLOAD_RATE_CHANGED -> MEDIA_INFO_DOWNLOAD_RATE_CHANGED
    int VIDEOQUALITY_LOW -> VIDEOQUALITY_LOW
    int VIDEOQUALITY_MEDIUM -> VIDEOQUALITY_MEDIUM
    int VIDEOQUALITY_HIGH -> VIDEOQUALITY_HIGH
    int VIDEOCHROMA_RGB565 -> VIDEOCHROMA_RGB565
    int VIDEOCHROMA_RGBA -> VIDEOCHROMA_RGBA
    int SUBTITLE_INTERNAL -> SUBTITLE_INTERNAL
    int SUBTITLE_EXTERNAL -> SUBTITLE_EXTERNAL
    java.lang.String[] SUB_TYPES -> SUB_TYPES
    int MEDIA_NOP -> MEDIA_NOP
    int MEDIA_PREPARED -> MEDIA_PREPARED
    int MEDIA_PLAYBACK_COMPLETE -> MEDIA_PLAYBACK_COMPLETE
    int MEDIA_BUFFERING_UPDATE -> MEDIA_BUFFERING_UPDATE
    int MEDIA_SEEK_COMPLETE -> MEDIA_SEEK_COMPLETE
    int MEDIA_SET_VIDEO_SIZE -> MEDIA_SET_VIDEO_SIZE
    int MEDIA_ERROR -> MEDIA_ERROR
    int MEDIA_INFO -> MEDIA_INFO
    int MEDIA_CACHE -> MEDIA_CACHE
    int MEDIA_HW_ERROR -> MEDIA_HW_ERROR
    int MEDIA_TIMED_TEXT -> MEDIA_TIMED_TEXT
    int MEDIA_CACHING_UPDATE -> MEDIA_CACHING_UPDATE
    java.lang.String MEDIA_CACHING_SEGMENTS -> MEDIA_CACHING_SEGMENTS
    java.lang.String MEDIA_CACHING_TYPE -> MEDIA_CACHING_TYPE
    java.lang.String MEDIA_CACHING_INFO -> MEDIA_CACHING_INFO
    java.lang.String MEDIA_SUBTITLE_STRING -> MEDIA_SUBTITLE_STRING
    java.lang.String MEDIA_SUBTITLE_BYTES -> MEDIA_SUBTITLE_BYTES
    java.lang.String MEDIA_SUBTITLE_TYPE -> MEDIA_SUBTITLE_TYPE
    int SUBTITLE_TEXT -> SUBTITLE_TEXT
    int SUBTITLE_BITMAP -> SUBTITLE_BITMAP
    java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED -> NATIVE_OMX_LOADED
    android.content.Context mContext -> mContext
    android.view.Surface mSurface -> mSurface
    android.view.SurfaceHolder mSurfaceHolder -> mSurfaceHolder
    io.vov.vitamio.MediaPlayer$EventHandler mEventHandler -> mEventHandler
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    boolean mScreenOnWhilePlaying -> mScreenOnWhilePlaying
    boolean mStayAwake -> mStayAwake
    io.vov.vitamio.Metadata mMeta -> mMeta
    io.vov.vitamio.MediaPlayer$TrackInfo[] mInbandTracks -> mInbandTracks
    io.vov.vitamio.MediaPlayer$TrackInfo mOutOfBandTracks -> mOutOfBandTracks
    android.content.res.AssetFileDescriptor mFD -> mFD
    io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener -> mOnHWRenderFailedListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> mOnPreparedListener
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> mOnCompletionListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> mOnBufferingUpdateListener
    io.vov.vitamio.MediaPlayer$OnCachingUpdateListener mOnCachingUpdateListener -> mOnCachingUpdateListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> mOnSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener -> mOnVideoSizeChangedListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> mOnErrorListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> mOnInfoListener
    io.vov.vitamio.MediaPlayer$OnTimedTextListener mOnTimedTextListener -> mOnTimedTextListener
    android.media.AudioTrack mAudioTrack -> mAudioTrack
    int mAudioTrackBufferSize -> mAudioTrackBufferSize
    android.view.Surface mLocalSurface -> mLocalSurface
    android.graphics.Bitmap mBitmap -> mBitmap
    java.nio.ByteBuffer mByteBuffer -> mByteBuffer
    void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object) -> postEventFromNative
    boolean loadVAO_native(java.lang.String) -> loadVAO_native
    boolean loadVVO_native(java.lang.String) -> loadVVO_native
    boolean loadOMX_native(java.lang.String) -> loadOMX_native
    void unloadOMX_native() -> unloadOMX_native
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    void _setVideoSurface(android.view.Surface) -> _setVideoSurface
    void setDisplay(android.view.SurfaceHolder) -> setDisplay
    void setSurface(android.view.Surface) -> setSurface
    void setDataSource(java.lang.String) -> setDataSource
    void setDataSource(android.content.Context,android.net.Uri) -> setDataSource
    void setDataSource(android.content.Context,android.net.Uri,java.util.Map) -> setDataSource
    void setDataSource(java.lang.String,java.util.Map) -> setDataSource
    void setDataSource(java.lang.String,java.lang.String[],java.lang.String[]) -> setDataSource
    void setDataSegments(java.lang.String[],java.lang.String) -> setDataSegments
    void setOnHWRenderFailedListener(io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener) -> setOnHWRenderFailedListener
    void _setDataSource(java.lang.String,java.lang.String[],java.lang.String[]) -> _setDataSource
    void setDataSource(java.io.FileDescriptor) -> setDataSource
    void _setDataSegmentsSource(java.lang.String[],java.lang.String) -> _setDataSegmentsSource
    void prepare() -> prepare
    void prepareAsync() -> prepareAsync
    void start() -> start
    void _start() -> _start
    void stop() -> stop
    void _stop() -> _stop
    void pause() -> pause
    void _pause() -> _pause
    void setWakeMode(android.content.Context,int) -> setWakeMode
    void setScreenOnWhilePlaying(boolean) -> setScreenOnWhilePlaying
    void stayAwake(boolean) -> stayAwake
    void updateSurfaceScreenOn() -> updateSurfaceScreenOn
    int getVideoWidth() -> getVideoWidth
    int getVideoWidth_a() -> getVideoWidth_a
    int getVideoHeight() -> getVideoHeight
    int getVideoHeight_a() -> getVideoHeight_a
    boolean isPlaying() -> isPlaying
    void setUseCache(boolean) -> setUseCache
    void setCacheDirectory(java.lang.String) -> setCacheDirectory
    void setAdaptiveStream(boolean) -> setAdaptiveStream
    void seekTo(long) -> seekTo
    long getCurrentPosition() -> getCurrentPosition
    android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    long getDuration() -> getDuration
    io.vov.vitamio.Metadata getMetadata() -> getMetadata
    void release() -> release
    void _release() -> _release
    void reset() -> reset
    void _reset() -> _reset
    void closeFD() -> closeFD
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setAudioAmplify(float) -> setAudioAmplify
    void setVolume(float,float) -> setVolume
    boolean native_getTrackInfo(android.util.SparseArray) -> native_getTrackInfo
    boolean native_getMetadata(java.util.Map) -> native_getMetadata
    void native_init() -> native_init
    void native_finalize() -> native_finalize
    io.vov.vitamio.MediaPlayer$TrackInfo[] getTrackInfo(java.lang.String) -> getTrackInfo
    io.vov.vitamio.MediaPlayer$TrackInfo[] getInbandTrackInfo(java.lang.String) -> getInbandTrackInfo
    io.vov.vitamio.MediaPlayer$TrackInfo[] getTrackInfo() -> getTrackInfo
    android.util.SparseArray parseTrackInfo(byte[],java.lang.String) -> parseTrackInfo
    android.util.SparseArray findTrackFromTrackInfo(int,io.vov.vitamio.MediaPlayer$TrackInfo[]) -> findTrackFromTrackInfo
    void addTimedTextSource(java.lang.String) -> addTimedTextSource
    void selectTrack(int) -> selectTrack
    void deselectTrack(int) -> deselectTrack
    void selectOrDeselectBandTrack(int,boolean) -> selectOrDeselectBandTrack
    void selectOrDeselectTrack(int,boolean) -> selectOrDeselectTrack
    void finalize() -> finalize
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    void setOnCachingUpdateListener(io.vov.vitamio.MediaPlayer$OnCachingUpdateListener) -> setOnCachingUpdateListener
    void updateCacheStatus(int,int,long[]) -> updateCacheStatus
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    void setOnVideoSizeChangedListener(io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener) -> setOnVideoSizeChangedListener
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> setOnErrorListener
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> setOnInfoListener
    void setOnTimedTextListener(io.vov.vitamio.MediaPlayer$OnTimedTextListener) -> setOnTimedTextListener
    void updateSub(int,byte[],java.lang.String,int,int) -> updateSub
    void _releaseVideoSurface() -> _releaseVideoSurface
    void releaseDisplay() -> releaseDisplay
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoQuality(int) -> setVideoQuality
    void setVideoChroma(int) -> setVideoChroma
    void setDeinterlace(boolean) -> setDeinterlace
    void setBufferSize(long) -> setBufferSize
    void setPlaybackSpeed(float) -> setPlaybackSpeed
    boolean isBuffering() -> isBuffering
    int getBufferProgress() -> getBufferProgress
    java.lang.String getMetaEncoding() -> getMetaEncoding
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    int getAudioTrack() -> getAudioTrack
    int getVideoTrack() -> getVideoTrack
    void setTimedTextShown(boolean) -> setTimedTextShown
    void setTimedTextEncoding(java.lang.String) -> setTimedTextEncoding
    int getTimedTextLocation() -> getTimedTextLocation
    java.lang.String getTimedTextPath() -> getTimedTextPath
    int getTimedTextTrack() -> getTimedTextTrack
    int audioTrackInit(int,int) -> audioTrackInit
    void audioTrackSetVolume(float,float) -> audioTrackSetVolume
    void audioTrackWrite(byte[],int,int) -> audioTrackWrite
    void audioTrackStart() -> audioTrackStart
    void audioTrackPause() -> audioTrackPause
    void audioTrackRelease() -> audioTrackRelease
    java.nio.ByteBuffer surfaceInit() -> surfaceInit
    void surfaceRender() -> surfaceRender
    void surfaceRelease() -> surfaceRelease
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$0(io.vov.vitamio.MediaPlayer) -> access$0
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$1(io.vov.vitamio.MediaPlayer) -> access$1
    void access$2(io.vov.vitamio.MediaPlayer,boolean) -> access$2
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$3(io.vov.vitamio.MediaPlayer) -> access$3
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$4(io.vov.vitamio.MediaPlayer) -> access$4
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener access$5(io.vov.vitamio.MediaPlayer) -> access$5
    io.vov.vitamio.MediaPlayer$OnErrorListener access$6(io.vov.vitamio.MediaPlayer) -> access$6
    io.vov.vitamio.MediaPlayer$OnInfoListener access$7(io.vov.vitamio.MediaPlayer) -> access$7
    io.vov.vitamio.MediaPlayer$OnTimedTextListener access$8(io.vov.vitamio.MediaPlayer) -> access$8
    io.vov.vitamio.MediaPlayer$OnCachingUpdateListener access$9(io.vov.vitamio.MediaPlayer) -> access$9
    io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener access$10(io.vov.vitamio.MediaPlayer) -> access$10
io.vov.vitamio.MediaPlayer$EventHandler -> io.vov.vitamio.MediaPlayer$EventHandler:
    io.vov.vitamio.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.os.Bundle mData -> mData
    io.vov.vitamio.MediaPlayer this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener -> io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener:
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener -> io.vov.vitamio.MediaPlayer$OnCachingUpdateListener:
    void onCachingUpdate(io.vov.vitamio.MediaPlayer,long[]) -> onCachingUpdate
    void onCachingSpeed(io.vov.vitamio.MediaPlayer,int) -> onCachingSpeed
    void onCachingStart(io.vov.vitamio.MediaPlayer) -> onCachingStart
    void onCachingComplete(io.vov.vitamio.MediaPlayer) -> onCachingComplete
    void onCachingNotAvailable(io.vov.vitamio.MediaPlayer,int) -> onCachingNotAvailable
io.vov.vitamio.MediaPlayer$OnCompletionListener -> io.vov.vitamio.MediaPlayer$OnCompletionListener:
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
io.vov.vitamio.MediaPlayer$OnErrorListener -> io.vov.vitamio.MediaPlayer$OnErrorListener:
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener -> io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener:
    void onFailed() -> onFailed
io.vov.vitamio.MediaPlayer$OnInfoListener -> io.vov.vitamio.MediaPlayer$OnInfoListener:
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
io.vov.vitamio.MediaPlayer$OnPreparedListener -> io.vov.vitamio.MediaPlayer$OnPreparedListener:
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
io.vov.vitamio.MediaPlayer$OnSeekCompleteListener -> io.vov.vitamio.MediaPlayer$OnSeekCompleteListener:
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> onSeekComplete
io.vov.vitamio.MediaPlayer$OnTimedTextListener -> io.vov.vitamio.MediaPlayer$OnTimedTextListener:
    void onTimedText(java.lang.String) -> onTimedText
    void onTimedTextUpdate(byte[],int,int) -> onTimedTextUpdate
io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener -> io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener:
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> onVideoSizeChanged
io.vov.vitamio.MediaPlayer$TrackInfo -> io.vov.vitamio.MediaPlayer$TrackInfo:
    int MEDIA_TRACK_TYPE_UNKNOWN -> MEDIA_TRACK_TYPE_UNKNOWN
    int MEDIA_TRACK_TYPE_VIDEO -> MEDIA_TRACK_TYPE_VIDEO
    int MEDIA_TRACK_TYPE_AUDIO -> MEDIA_TRACK_TYPE_AUDIO
    int MEDIA_TRACK_TYPE_TIMEDTEXT -> MEDIA_TRACK_TYPE_TIMEDTEXT
    int MEDIA_TRACK_TYPE_SUBTITLE -> MEDIA_TRACK_TYPE_SUBTITLE
    int mTrackType -> mTrackType
    android.util.SparseArray mTrackInfoArray -> mTrackInfoArray
    int getTrackType() -> getTrackType
    android.util.SparseArray getTrackInfoArray() -> getTrackInfoArray
io.vov.vitamio.MediaScanner -> io.vov.vitamio.MediaScanner:
    java.lang.String[] VIDEO_PROJECTION -> VIDEO_PROJECTION
    int ID_VIDEO_COLUMN_INDEX -> ID_VIDEO_COLUMN_INDEX
    int PATH_VIDEO_COLUMN_INDEX -> PATH_VIDEO_COLUMN_INDEX
    int DATE_MODIFIED_VIDEO_COLUMN_INDEX -> DATE_MODIFIED_VIDEO_COLUMN_INDEX
    android.content.Context mContext -> mContext
    android.content.ContentProviderClient mProvider -> mProvider
    boolean mCaseInsensitivePaths -> mCaseInsensitivePaths
    java.util.HashMap mFileCache -> mFileCache
    io.vov.vitamio.MediaScanner$MyMediaScannerClient mClient -> mClient
    boolean loadFFmpeg_native(java.lang.String) -> loadFFmpeg_native
    void initialize() -> initialize
    void prescan(java.lang.String) -> prescan
    void postscan(java.lang.String[]) -> postscan
    boolean inScanDirectory(java.lang.String,java.lang.String[]) -> inScanDirectory
    void scanDirectories(java.lang.String[]) -> scanDirectories
    android.net.Uri scanSingleFile(java.lang.String,java.lang.String) -> scanSingleFile
    void processDirectory(java.lang.String,java.lang.String) -> processDirectory
    boolean processFile(java.lang.String,java.lang.String) -> processFile
    void native_init(io.vov.vitamio.MediaScannerClient) -> native_init
    void release() -> release
    void native_finalize() -> native_finalize
    void finalize() -> finalize
    boolean access$0(io.vov.vitamio.MediaScanner) -> access$0
    java.util.HashMap access$1(io.vov.vitamio.MediaScanner) -> access$1
    boolean access$2(io.vov.vitamio.MediaScanner,java.lang.String,java.lang.String) -> access$2
    android.content.ContentProviderClient access$3(io.vov.vitamio.MediaScanner) -> access$3
io.vov.vitamio.MediaScanner$FileCacheEntry -> io.vov.vitamio.MediaScanner$FileCacheEntry:
    android.net.Uri mTableUri -> mTableUri
    long mRowId -> mRowId
    java.lang.String mPath -> mPath
    long mLastModified -> mLastModified
    boolean mLastModifiedChanged -> mLastModifiedChanged
    boolean mSeenInFileSystem -> mSeenInFileSystem
    java.lang.String toString() -> toString
io.vov.vitamio.MediaScanner$MyMediaScannerClient -> io.vov.vitamio.MediaScanner$MyMediaScannerClient:
    java.lang.String mMimeType -> mMimeType
    int mFileType -> mFileType
    java.lang.String mPath -> mPath
    long mLastModified -> mLastModified
    long mFileSize -> mFileSize
    java.lang.String mTitle -> mTitle
    java.lang.String mArtist -> mArtist
    java.lang.String mAlbum -> mAlbum
    java.lang.String mLanguage -> mLanguage
    long mDuration -> mDuration
    int mWidth -> mWidth
    int mHeight -> mHeight
    io.vov.vitamio.MediaScanner this$0 -> this$0
    io.vov.vitamio.MediaScanner$FileCacheEntry beginFile(java.lang.String,long,long) -> beginFile
    void scanFile(java.lang.String,long,long) -> scanFile
    android.net.Uri doScanFile(java.lang.String,long,long,boolean) -> doScanFile
    int parseSubstring(java.lang.String,int,int) -> parseSubstring
    void handleStringTag(java.lang.String,byte[],java.lang.String) -> handleStringTag
    void setMimeType(java.lang.String) -> setMimeType
    android.content.ContentValues toValues() -> toValues
    android.net.Uri endFile(io.vov.vitamio.MediaScanner$FileCacheEntry) -> endFile
    void addNoMediaFolder(java.lang.String) -> addNoMediaFolder
io.vov.vitamio.MediaScannerClient -> io.vov.vitamio.MediaScannerClient:
    void scanFile(java.lang.String,long,long) -> scanFile
    void addNoMediaFolder(java.lang.String) -> addNoMediaFolder
    void handleStringTag(java.lang.String,byte[],java.lang.String) -> handleStringTag
    void setMimeType(java.lang.String) -> setMimeType
io.vov.vitamio.Metadata -> io.vov.vitamio.Metadata:
    int ANY -> ANY
    int TITLE -> TITLE
    int COMMENT -> COMMENT
    int COPYRIGHT -> COPYRIGHT
    int ALBUM -> ALBUM
    int ARTIST -> ARTIST
    int AUTHOR -> AUTHOR
    int COMPOSER -> COMPOSER
    int GENRE -> GENRE
    int DATE -> DATE
    int DURATION -> DURATION
    int CD_TRACK_NUM -> CD_TRACK_NUM
    int CD_TRACK_MAX -> CD_TRACK_MAX
    int RATING -> RATING
    int ALBUM_ART -> ALBUM_ART
    int VIDEO_FRAME -> VIDEO_FRAME
    int LENGTH -> LENGTH
    int BIT_RATE -> BIT_RATE
    int AUDIO_BIT_RATE -> AUDIO_BIT_RATE
    int VIDEO_BIT_RATE -> VIDEO_BIT_RATE
    int AUDIO_SAMPLE_RATE -> AUDIO_SAMPLE_RATE
    int VIDEO_FRAME_RATE -> VIDEO_FRAME_RATE
    int MIME_TYPE -> MIME_TYPE
    int AUDIO_CODEC -> AUDIO_CODEC
    int VIDEO_CODEC -> VIDEO_CODEC
    int VIDEO_HEIGHT -> VIDEO_HEIGHT
    int VIDEO_WIDTH -> VIDEO_WIDTH
    int NUM_TRACKS -> NUM_TRACKS
    int DRM_CRIPPLED -> DRM_CRIPPLED
    int PAUSE_AVAILABLE -> PAUSE_AVAILABLE
    int SEEK_BACKWARD_AVAILABLE -> SEEK_BACKWARD_AVAILABLE
    int SEEK_FORWARD_AVAILABLE -> SEEK_FORWARD_AVAILABLE
    int SEEK_AVAILABLE -> SEEK_AVAILABLE
    int LAST_SYSTEM -> LAST_SYSTEM
    int FIRST_CUSTOM -> FIRST_CUSTOM
    android.util.SparseArray mMeta -> mMeta
    java.lang.String mEncoding -> mEncoding
    boolean parse(java.util.Map,java.lang.String) -> parse
    boolean has(int) -> has
    java.lang.String getString(int) -> getString
    int getInt(int) -> getInt
    boolean getBoolean(int) -> getBoolean
    long getLong(int) -> getLong
    double getDouble(int) -> getDouble
    byte[] getByteArray(int) -> getByteArray
    boolean checkMetadataId(int) -> checkMetadataId
io.vov.vitamio.R -> io.vov.vitamio.R:
io.vov.vitamio.R$color -> io.vov.vitamio.R$color:
    int mediacontroller_bg -> mediacontroller_bg
    int mediacontroller_bg_pressed -> mediacontroller_bg_pressed
    int transparent -> transparent
io.vov.vitamio.R$drawable -> io.vov.vitamio.R$drawable:
    int ic_launcher -> ic_launcher
    int mediacontroller_button -> mediacontroller_button
    int mediacontroller_pause -> mediacontroller_pause
    int mediacontroller_play -> mediacontroller_play
    int scrubber_control_disabled_holo -> scrubber_control_disabled_holo
    int scrubber_control_focused_holo -> scrubber_control_focused_holo
    int scrubber_control_normal_holo -> scrubber_control_normal_holo
    int scrubber_control_pressed_holo -> scrubber_control_pressed_holo
    int scrubber_control_selector_holo -> scrubber_control_selector_holo
    int scrubber_primary_holo -> scrubber_primary_holo
    int scrubber_progress_horizontal_holo_dark -> scrubber_progress_horizontal_holo_dark
    int scrubber_secondary_holo -> scrubber_secondary_holo
    int scrubber_track_holo_dark -> scrubber_track_holo_dark
io.vov.vitamio.R$id -> io.vov.vitamio.R$id:
    int mediacontroller_file_name -> mediacontroller_file_name
    int mediacontroller_play_pause -> mediacontroller_play_pause
    int mediacontroller_seekbar -> mediacontroller_seekbar
    int mediacontroller_time_current -> mediacontroller_time_current
    int mediacontroller_time_total -> mediacontroller_time_total
io.vov.vitamio.R$layout -> io.vov.vitamio.R$layout:
    int mediacontroller -> mediacontroller
io.vov.vitamio.R$raw -> io.vov.vitamio.R$raw:
    int libarm -> libarm
io.vov.vitamio.R$string -> io.vov.vitamio.R$string:
    int VideoView_error_button -> VideoView_error_button
    int VideoView_error_text_invalid_progressive_playback -> VideoView_error_text_invalid_progressive_playback
    int VideoView_error_text_unknown -> VideoView_error_text_unknown
    int VideoView_error_title -> VideoView_error_title
    int mediacontroller_play_pause -> mediacontroller_play_pause
    int permission_group_tools_description -> permission_group_tools_description
    int permission_group_tools_label -> permission_group_tools_label
    int permission_receive_messages_description -> permission_receive_messages_description
    int permission_receive_messages_label -> permission_receive_messages_label
    int permission_write_providers_description -> permission_write_providers_description
    int permission_write_providers_label -> permission_write_providers_label
    int vitamio_init_decoders -> vitamio_init_decoders
    int vitamio_library_app_name -> vitamio_library_app_name
io.vov.vitamio.R$style -> io.vov.vitamio.R$style:
    int MediaController_SeekBar -> MediaController_SeekBar
    int MediaController_Text -> MediaController_Text
io.vov.vitamio.ThumbnailUtils -> io.vov.vitamio.ThumbnailUtils:
    int OPTIONS_NONE -> OPTIONS_NONE
    int OPTIONS_SCALE_UP -> OPTIONS_SCALE_UP
    int OPTIONS_RECYCLE_INPUT -> OPTIONS_RECYCLE_INPUT
    int TARGET_SIZE_MINI_THUMBNAIL_WIDTH -> TARGET_SIZE_MINI_THUMBNAIL_WIDTH
    int TARGET_SIZE_MINI_THUMBNAIL_HEIGHT -> TARGET_SIZE_MINI_THUMBNAIL_HEIGHT
    int TARGET_SIZE_MICRO_THUMBNAIL_WIDTH -> TARGET_SIZE_MICRO_THUMBNAIL_WIDTH
    int TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT -> TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT
    android.graphics.Bitmap createVideoThumbnail(android.content.Context,java.lang.String,int) -> createVideoThumbnail
    android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int) -> extractThumbnail
    android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int) -> extractThumbnail
    android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int) -> transform
io.vov.vitamio.VIntent -> io.vov.vitamio.VIntent:
    java.lang.String ACTION_MEDIA_SCANNER_SCAN_DIRECTORY -> ACTION_MEDIA_SCANNER_SCAN_DIRECTORY
    java.lang.String ACTION_MEDIA_SCANNER_SCAN_FILE -> ACTION_MEDIA_SCANNER_SCAN_FILE
    java.lang.String ACTION_MEDIA_SCANNER_STARTED -> ACTION_MEDIA_SCANNER_STARTED
    java.lang.String ACTION_MEDIA_SCANNER_FINISHED -> ACTION_MEDIA_SCANNER_FINISHED
io.vov.vitamio.Vitamio -> io.vov.vitamio.Vitamio:
    java.lang.String[] LIBS_ARM_CODECS -> LIBS_ARM_CODECS
    java.lang.String[] LIBS_X86_CODECS -> LIBS_X86_CODECS
    java.lang.String[] LIBS_MIPS_CODECS -> LIBS_MIPS_CODECS
    java.lang.String[] LIBS_PLAYER -> LIBS_PLAYER
    java.lang.String[] LIBS_SCANNER -> LIBS_SCANNER
    java.lang.String[] LIBS_AV -> LIBS_AV
    java.lang.String LIBS_LOCK -> LIBS_LOCK
    int VITAMIO_NOT_SUPPORTED -> VITAMIO_NOT_SUPPORTED
    int VITAMIO_MIPS -> VITAMIO_MIPS
    int VITAMIO_X86 -> VITAMIO_X86
    int VITAMIO_ARMV6 -> VITAMIO_ARMV6
    int VITAMIO_ARMV6_VFP -> VITAMIO_ARMV6_VFP
    int VITAMIO_ARMV7_VFPV3 -> VITAMIO_ARMV7_VFPV3
    int VITAMIO_ARMV7_NEON -> VITAMIO_ARMV7_NEON
    int vitamioType -> vitamioType
    java.lang.String vitamioPackage -> vitamioPackage
    java.lang.String vitamioLibraryPath -> vitamioLibraryPath
    boolean initialize(android.content.Context) -> initialize
    boolean initialize(android.content.Context,int) -> initialize
    boolean isInitialized(android.content.Context) -> isInitialized
    java.lang.String getVitamioPackage() -> getVitamioPackage
    int getVitamioType() -> getVitamioType
    java.lang.String getLibraryPath() -> getLibraryPath
    java.util.List getRequiredLibs() -> getRequiredLibs
    boolean extractLibs(android.content.Context,int) -> extractLibs
    java.lang.String copyCompressedLib(android.content.Context,int,java.lang.String) -> copyCompressedLib
    boolean native_initializeLibs(java.lang.String,java.lang.String,java.lang.String) -> native_initializeLibs
io.vov.vitamio.VitamioLicense -> io.vov.vitamio.VitamioLicense:
    java.lang.String LICENSE -> LICENSE
io.vov.vitamio.activity.InitActivity -> io.vov.vitamio.activity.InitActivity:
    java.lang.String FROM_ME -> FROM_ME
    android.app.ProgressDialog mPD -> mPD
    io.vov.vitamio.activity.InitActivity$UIHandler uiHandler -> uiHandler
    void onCreate(android.os.Bundle) -> onCreate
    android.app.ProgressDialog access$0(io.vov.vitamio.activity.InitActivity) -> access$0
    void access$1(io.vov.vitamio.activity.InitActivity,android.app.ProgressDialog) -> access$1
    io.vov.vitamio.activity.InitActivity$UIHandler access$2(io.vov.vitamio.activity.InitActivity) -> access$2
io.vov.vitamio.activity.InitActivity$1 -> io.vov.vitamio.activity.InitActivity$1:
    io.vov.vitamio.activity.InitActivity this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.vov.vitamio.activity.InitActivity$UIHandler -> io.vov.vitamio.activity.InitActivity$UIHandler:
    java.lang.ref.WeakReference mContext -> mContext
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.provider.MediaStore -> io.vov.vitamio.provider.MediaStore:
    java.lang.String AUTHORITY -> AUTHORITY
    java.lang.String MEDIA_SCANNER_VOLUME -> MEDIA_SCANNER_VOLUME
    java.lang.String CONTENT_AUTHORITY_SLASH -> CONTENT_AUTHORITY_SLASH
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String BASE_SQL_FIELDS -> BASE_SQL_FIELDS
    android.net.Uri getMediaScannerUri() -> getMediaScannerUri
    android.net.Uri getVolumeUri() -> getVolumeUri
io.vov.vitamio.provider.MediaStore$Audio -> io.vov.vitamio.provider.MediaStore$Audio:
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns -> io.vov.vitamio.provider.MediaStore$Audio$AudioColumns:
    java.lang.String DURATION -> DURATION
    java.lang.String BOOKMARK -> BOOKMARK
    java.lang.String ARTIST -> ARTIST
    java.lang.String COMPOSER -> COMPOSER
    java.lang.String ALBUM -> ALBUM
    java.lang.String TRACK -> TRACK
    java.lang.String YEAR -> YEAR
io.vov.vitamio.provider.MediaStore$Audio$Media -> io.vov.vitamio.provider.MediaStore$Audio$Media:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
io.vov.vitamio.provider.MediaStore$InternalThumbnails -> io.vov.vitamio.provider.MediaStore$InternalThumbnails:
    int DEFAULT_GROUP_ID -> DEFAULT_GROUP_ID
    int MINI_KIND -> MINI_KIND
    int MICRO_KIND -> MICRO_KIND
    java.lang.String[] PROJECTION -> PROJECTION
    java.lang.Object sThumbBufLock -> sThumbBufLock
    byte[] sThumbBuf -> sThumbBuf
    android.graphics.Bitmap getMiniThumbFromFile(android.database.Cursor,android.net.Uri,android.content.ContentResolver,android.graphics.BitmapFactory$Options) -> getMiniThumbFromFile
    void cancelThumbnailRequest(android.content.ContentResolver,long,android.net.Uri,long) -> cancelThumbnailRequest
    java.lang.String getThumbnailPath(android.content.Context,android.content.ContentResolver,long,android.net.Uri) -> getThumbnailPath
    android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri) -> getThumbnail
io.vov.vitamio.provider.MediaStore$MediaColumns -> io.vov.vitamio.provider.MediaStore$MediaColumns:
    java.lang.String DATA -> DATA
    java.lang.String DIRECTORY -> DIRECTORY
    java.lang.String DIRECTORY_NAME -> DIRECTORY_NAME
    java.lang.String SIZE -> SIZE
    java.lang.String DISPLAY_NAME -> DISPLAY_NAME
    java.lang.String TITLE -> TITLE
    java.lang.String TITLE_KEY -> TITLE_KEY
    java.lang.String DATE_ADDED -> DATE_ADDED
    java.lang.String DATE_MODIFIED -> DATE_MODIFIED
    java.lang.String MIME_TYPE -> MIME_TYPE
    java.lang.String AVAILABLE_SIZE -> AVAILABLE_SIZE
    java.lang.String PLAY_STATUS -> PLAY_STATUS
io.vov.vitamio.provider.MediaStore$Video -> io.vov.vitamio.provider.MediaStore$Video:
io.vov.vitamio.provider.MediaStore$Video$Media -> io.vov.vitamio.provider.MediaStore$Video$Media:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SQL_FIELDS -> SQL_FIELDS
    java.lang.String SQL_TRIGGER_VIDEO_CLEANUP -> SQL_TRIGGER_VIDEO_CLEANUP
    java.lang.String SQL_TRIGGER_VIDEO_UPDATE -> SQL_TRIGGER_VIDEO_UPDATE
io.vov.vitamio.provider.MediaStore$Video$Thumbnails -> io.vov.vitamio.provider.MediaStore$Video$Thumbnails:
    int MINI_KIND -> MINI_KIND
    int MICRO_KIND -> MICRO_KIND
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String THUMBNAILS_DIRECTORY -> THUMBNAILS_DIRECTORY
    java.lang.String DATA -> DATA
    java.lang.String VIDEO_ID -> VIDEO_ID
    java.lang.String KIND -> KIND
    java.lang.String WIDTH -> WIDTH
    java.lang.String HEIGHT -> HEIGHT
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SQL_FIELDS -> SQL_FIELDS
    java.lang.String SQL_INDEX_VIDEO_ID -> SQL_INDEX_VIDEO_ID
    java.lang.String SQL_TRIGGER_VIDEO_THUMBNAILS_CLEANUP -> SQL_TRIGGER_VIDEO_THUMBNAILS_CLEANUP
    void cancelThumbnailRequest(android.content.ContentResolver,long) -> cancelThumbnailRequest
    android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options) -> getThumbnail
    android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options) -> getThumbnail
    java.lang.String getThumbnailPath(android.content.Context,android.content.ContentResolver,long) -> getThumbnailPath
    void cancelThumbnailRequest(android.content.ContentResolver,long,long) -> cancelThumbnailRequest
io.vov.vitamio.provider.MediaStore$Video$VideoColumns -> io.vov.vitamio.provider.MediaStore$Video$VideoColumns:
    java.lang.String DURATION -> DURATION
    java.lang.String ARTIST -> ARTIST
    java.lang.String ALBUM -> ALBUM
    java.lang.String WIDTH -> WIDTH
    java.lang.String HEIGHT -> HEIGHT
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String DATE_TAKEN -> DATE_TAKEN
    java.lang.String BOOKMARK -> BOOKMARK
    java.lang.String MINI_THUMB_MAGIC -> MINI_THUMB_MAGIC
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String SUBTRACK -> SUBTRACK
    java.lang.String AUDIO_TRACK -> AUDIO_TRACK
io.vov.vitamio.provider.MiniThumbFile -> io.vov.vitamio.provider.MiniThumbFile:
    int BYTES_PER_MINTHUMB -> BYTES_PER_MINTHUMB
    int MINI_THUMB_DATA_FILE_VERSION -> MINI_THUMB_DATA_FILE_VERSION
    int HEADER_SIZE -> HEADER_SIZE
    java.util.Hashtable sThumbFiles -> sThumbFiles
    android.net.Uri mUri -> mUri
    java.io.RandomAccessFile mMiniThumbFile -> mMiniThumbFile
    java.nio.channels.FileChannel mChannel -> mChannel
    java.nio.ByteBuffer mBuffer -> mBuffer
    void reset() -> reset
    io.vov.vitamio.provider.MiniThumbFile instance(android.net.Uri) -> instance
    java.lang.String randomAccessFilePath(int) -> randomAccessFilePath
    void removeOldFile() -> removeOldFile
    java.io.RandomAccessFile miniThumbDataFile() -> miniThumbDataFile
    void deactivate() -> deactivate
    long getMagic(long) -> getMagic
    void saveMiniThumbToFile(byte[],long,long) -> saveMiniThumbToFile
    byte[] getMiniThumbFromFile(long,byte[]) -> getMiniThumbFromFile
io.vov.vitamio.utils.Base64 -> io.vov.vitamio.utils.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
io.vov.vitamio.utils.Base64$Coder -> io.vov.vitamio.utils.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
io.vov.vitamio.utils.Base64$Decoder -> io.vov.vitamio.utils.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
io.vov.vitamio.utils.Base64$Encoder -> io.vov.vitamio.utils.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    boolean $assertionsDisabled -> $assertionsDisabled
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
io.vov.vitamio.utils.CPU -> io.vov.vitamio.utils.CPU:
    java.util.Map cpuinfo -> cpuinfo
    int cachedFeature -> cachedFeature
    java.lang.String cachedFeatureString -> cachedFeatureString
    int FEATURE_ARM_V5TE -> FEATURE_ARM_V5TE
    int FEATURE_ARM_V6 -> FEATURE_ARM_V6
    int FEATURE_ARM_VFP -> FEATURE_ARM_VFP
    int FEATURE_ARM_V7A -> FEATURE_ARM_V7A
    int FEATURE_ARM_VFPV3 -> FEATURE_ARM_VFPV3
    int FEATURE_ARM_NEON -> FEATURE_ARM_NEON
    int FEATURE_X86 -> FEATURE_X86
    int FEATURE_MIPS -> FEATURE_MIPS
    java.lang.String getFeatureString() -> getFeatureString
    int getFeature() -> getFeature
    int getCachedFeature() -> getCachedFeature
    boolean isDroidXDroid2() -> isDroidXDroid2
io.vov.vitamio.utils.ContextUtils -> io.vov.vitamio.utils.ContextUtils:
    int getVersionCode(android.content.Context) -> getVersionCode
    java.lang.String getDataDir(android.content.Context) -> getDataDir
    java.lang.String fixLastSlash(java.lang.String) -> fixLastSlash
io.vov.vitamio.utils.Crypto -> io.vov.vitamio.utils.Crypto:
    javax.crypto.Cipher ecipher -> ecipher
    void setupCrypto(javax.crypto.SecretKey) -> setupCrypto
    java.lang.String encrypt(java.lang.String) -> encrypt
    java.lang.String md5(java.lang.String) -> md5
    byte[] generateKey(java.lang.String) -> generateKey
    java.security.PublicKey readKeyFromStream(java.io.InputStream) -> readKeyFromStream
    java.lang.String rsaEncrypt(java.io.InputStream,java.lang.String) -> rsaEncrypt
    java.lang.String rsaEncrypt(java.io.InputStream,byte[]) -> rsaEncrypt
io.vov.vitamio.utils.Device -> io.vov.vitamio.utils.Device:
    java.lang.String getLocale() -> getLocale
    java.lang.String getDeviceFeatures(android.content.Context) -> getDeviceFeatures
    java.lang.String getIdentifiers(android.content.Context) -> getIdentifiers
    java.lang.String getSystemFeatures() -> getSystemFeatures
    java.lang.String getScreenFeatures(android.content.Context) -> getScreenFeatures
    java.lang.String getPair(java.lang.String,java.lang.String) -> getPair
io.vov.vitamio.utils.FileUtils -> io.vov.vitamio.utils.FileUtils:
    java.lang.String FILE_NAME_RESERVED -> FILE_NAME_RESERVED
    java.lang.String getUniqueFileName(java.lang.String,java.lang.String) -> getUniqueFileName
    java.lang.String getCanonical(java.io.File) -> getCanonical
    java.lang.String getPath(java.lang.String) -> getPath
    java.lang.String getName(java.lang.String) -> getName
    void deleteDir(java.io.File) -> deleteDir
io.vov.vitamio.utils.IOUtils -> io.vov.vitamio.utils.IOUtils:
    java.lang.String TAG -> TAG
    void closeSilently(java.io.Closeable) -> closeSilently
    void closeSilently(android.os.ParcelFileDescriptor) -> closeSilently
    void closeSilently(android.database.Cursor) -> closeSilently
io.vov.vitamio.utils.Log -> io.vov.vitamio.utils.Log:
    java.lang.String TAG -> TAG
    void i(java.lang.String,java.lang.Object[]) -> i
    void d(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
io.vov.vitamio.utils.StringUtils -> io.vov.vitamio.utils.StringUtils:
    java.lang.String join(java.lang.Object[],java.lang.CharSequence) -> join
    java.lang.String join(java.lang.Iterable,java.lang.CharSequence) -> join
    java.lang.String fixLastSlash(java.lang.String) -> fixLastSlash
    int convertToInt(java.lang.String) -> convertToInt
    java.lang.String generateTime(long) -> generateTime
io.vov.vitamio.widget.CenterLayout -> io.vov.vitamio.widget.CenterLayout:
    int mPaddingLeft -> mPaddingLeft
    int mPaddingRight -> mPaddingRight
    int mPaddingTop -> mPaddingTop
    int mPaddingBottom -> mPaddingBottom
    int mWidth -> mWidth
    int mHeight -> mHeight
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
io.vov.vitamio.widget.CenterLayout$LayoutParams -> io.vov.vitamio.widget.CenterLayout$LayoutParams:
    int x -> x
    int y -> y
io.vov.vitamio.widget.MediaController -> io.vov.vitamio.widget.MediaController:
    int sDefaultTimeout -> sDefaultTimeout
    int FADE_OUT -> FADE_OUT
    int SHOW_PROGRESS -> SHOW_PROGRESS
    io.vov.vitamio.widget.MediaController$MediaPlayerControl mPlayer -> mPlayer
    android.content.Context mContext -> mContext
    android.widget.PopupWindow mWindow -> mWindow
    int mAnimStyle -> mAnimStyle
    android.view.View mAnchor -> mAnchor
    android.view.View mRoot -> mRoot
    android.widget.SeekBar mProgress -> mProgress
    android.widget.TextView mEndTime -> mEndTime
    android.widget.TextView mCurrentTime -> mCurrentTime
    android.widget.TextView mFileName -> mFileName
    io.vov.vitamio.widget.OutlineTextView mInfoView -> mInfoView
    java.lang.String mTitle -> mTitle
    long mDuration -> mDuration
    boolean mShowing -> mShowing
    boolean mDragging -> mDragging
    boolean mInstantSeeking -> mInstantSeeking
    boolean mFromXml -> mFromXml
    android.widget.ImageButton mPauseButton -> mPauseButton
    android.media.AudioManager mAM -> mAM
    io.vov.vitamio.widget.MediaController$OnShownListener mShownListener -> mShownListener
    io.vov.vitamio.widget.MediaController$OnHiddenListener mHiddenListener -> mHiddenListener
    android.os.Handler mHandler -> mHandler
    android.view.View$OnClickListener mPauseListener -> mPauseListener
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> mSeekListener
    boolean initController(android.content.Context) -> initController
    void onFinishInflate() -> onFinishInflate
    void initFloatingWindow() -> initFloatingWindow
    void setWindowLayoutType() -> setWindowLayoutType
    void setAnchorView(android.view.View) -> setAnchorView
    android.view.View makeControllerView() -> makeControllerView
    void initControllerView(android.view.View) -> initControllerView
    void setMediaPlayer(io.vov.vitamio.widget.MediaController$MediaPlayerControl) -> setMediaPlayer
    void setInstantSeeking(boolean) -> setInstantSeeking
    void show() -> show
    void setFileName(java.lang.String) -> setFileName
    void setInfoView(io.vov.vitamio.widget.OutlineTextView) -> setInfoView
    void setAnimationStyle(int) -> setAnimationStyle
    void show(int) -> show
    boolean isShowing() -> isShowing
    void hide() -> hide
    void setOnShownListener(io.vov.vitamio.widget.MediaController$OnShownListener) -> setOnShownListener
    void setOnHiddenListener(io.vov.vitamio.widget.MediaController$OnHiddenListener) -> setOnHiddenListener
    long setProgress() -> setProgress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void updatePausePlay() -> updatePausePlay
    void doPauseResume() -> doPauseResume
    void setEnabled(boolean) -> setEnabled
    long access$0(io.vov.vitamio.widget.MediaController) -> access$0
    boolean access$1(io.vov.vitamio.widget.MediaController) -> access$1
    boolean access$2(io.vov.vitamio.widget.MediaController) -> access$2
    void access$3(io.vov.vitamio.widget.MediaController) -> access$3
    void access$4(io.vov.vitamio.widget.MediaController) -> access$4
    void access$5(io.vov.vitamio.widget.MediaController,boolean) -> access$5
    android.os.Handler access$6(io.vov.vitamio.widget.MediaController) -> access$6
    boolean access$7(io.vov.vitamio.widget.MediaController) -> access$7
    android.media.AudioManager access$8(io.vov.vitamio.widget.MediaController) -> access$8
    io.vov.vitamio.widget.OutlineTextView access$9(io.vov.vitamio.widget.MediaController) -> access$9
    long access$10(io.vov.vitamio.widget.MediaController) -> access$10
    io.vov.vitamio.widget.MediaController$MediaPlayerControl access$11(io.vov.vitamio.widget.MediaController) -> access$11
    android.widget.TextView access$12(io.vov.vitamio.widget.MediaController) -> access$12
io.vov.vitamio.widget.MediaController$1 -> io.vov.vitamio.widget.MediaController$1:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.vov.vitamio.widget.MediaController$2 -> io.vov.vitamio.widget.MediaController$2:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.vov.vitamio.widget.MediaController$3 -> io.vov.vitamio.widget.MediaController$3:
    io.vov.vitamio.widget.MediaController this$0 -> this$0
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
io.vov.vitamio.widget.MediaController$MediaPlayerControl -> io.vov.vitamio.widget.MediaController$MediaPlayerControl:
    void start() -> start
    void pause() -> pause
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
io.vov.vitamio.widget.MediaController$OnHiddenListener -> io.vov.vitamio.widget.MediaController$OnHiddenListener:
    void onHidden() -> onHidden
io.vov.vitamio.widget.MediaController$OnShownListener -> io.vov.vitamio.widget.MediaController$OnShownListener:
    void onShown() -> onShown
io.vov.vitamio.widget.OutlineTextView -> io.vov.vitamio.widget.OutlineTextView:
    android.text.TextPaint mTextPaint -> mTextPaint
    android.text.TextPaint mTextPaintOutline -> mTextPaintOutline
    java.lang.String mText -> mText
    int mAscent -> mAscent
    float mBorderSize -> mBorderSize
    int mBorderColor -> mBorderColor
    int mColor -> mColor
    float mSpacingMult -> mSpacingMult
    float mSpacingAdd -> mSpacingAdd
    boolean mIncludePad -> mIncludePad
    void initPaint() -> initPaint
    void setText(java.lang.String) -> setText
    void setTextSize(float) -> setTextSize
    void setTextColor(int) -> setTextColor
    void setShadowLayer(float,float,float,int) -> setShadowLayer
    void setTypeface(android.graphics.Typeface,int) -> setTypeface
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
io.vov.vitamio.widget.VideoView -> io.vov.vitamio.widget.VideoView:
    int VIDEO_LAYOUT_ORIGIN -> VIDEO_LAYOUT_ORIGIN
    int VIDEO_LAYOUT_SCALE -> VIDEO_LAYOUT_SCALE
    int VIDEO_LAYOUT_STRETCH -> VIDEO_LAYOUT_STRETCH
    int VIDEO_LAYOUT_ZOOM -> VIDEO_LAYOUT_ZOOM
    int STATE_ERROR -> STATE_ERROR
    int STATE_IDLE -> STATE_IDLE
    int STATE_PREPARING -> STATE_PREPARING
    int STATE_PREPARED -> STATE_PREPARED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYBACK_COMPLETED -> STATE_PLAYBACK_COMPLETED
    int STATE_SUSPEND -> STATE_SUSPEND
    int STATE_RESUME -> STATE_RESUME
    int STATE_SUSPEND_UNSUPPORTED -> STATE_SUSPEND_UNSUPPORTED
    io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener -> mSizeChangedListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mPreparedListener -> mPreparedListener
    android.view.SurfaceHolder$Callback mSHCallback -> mSHCallback
    android.net.Uri mUri -> mUri
    long mDuration -> mDuration
    int mCurrentState -> mCurrentState
    int mTargetState -> mTargetState
    float mAspectRatio -> mAspectRatio
    int mVideoLayout -> mVideoLayout
    android.view.SurfaceHolder mSurfaceHolder -> mSurfaceHolder
    io.vov.vitamio.MediaPlayer mMediaPlayer -> mMediaPlayer
    int mVideoWidth -> mVideoWidth
    int mVideoHeight -> mVideoHeight
    float mVideoAspectRatio -> mVideoAspectRatio
    int mVideoChroma -> mVideoChroma
    boolean mHardwareDecoder -> mHardwareDecoder
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    io.vov.vitamio.widget.MediaController mMediaController -> mMediaController
    android.view.View mMediaBufferingIndicator -> mMediaBufferingIndicator
    io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener -> mOnCompletionListener
    io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener -> mOnPreparedListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener -> mOnErrorListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener -> mOnSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnTimedTextListener mOnTimedTextListener -> mOnTimedTextListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener -> mOnInfoListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener -> mOnBufferingUpdateListener
    int mCurrentBufferPercentage -> mCurrentBufferPercentage
    long mSeekWhenPrepared -> mSeekWhenPrepared
    android.content.Context mContext -> mContext
    java.util.Map mHeaders -> mHeaders
    int mBufSize -> mBufSize
    io.vov.vitamio.MediaPlayer$OnCompletionListener mCompletionListener -> mCompletionListener
    io.vov.vitamio.MediaPlayer$OnErrorListener mErrorListener -> mErrorListener
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener -> mBufferingUpdateListener
    io.vov.vitamio.MediaPlayer$OnInfoListener mInfoListener -> mInfoListener
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mSeekCompleteListener -> mSeekCompleteListener
    io.vov.vitamio.MediaPlayer$OnTimedTextListener mTimedTextListener -> mTimedTextListener
    void onMeasure(int,int) -> onMeasure
    void setVideoLayout(int,float) -> setVideoLayout
    void initVideoView(android.content.Context) -> initVideoView
    boolean isValid() -> isValid
    void setVideoPath(java.lang.String) -> setVideoPath
    void setVideoURI(android.net.Uri) -> setVideoURI
    void setVideoURI(android.net.Uri,java.util.Map) -> setVideoURI
    void stopPlayback() -> stopPlayback
    void openVideo() -> openVideo
    void setMediaController(io.vov.vitamio.widget.MediaController) -> setMediaController
    void setMediaBufferingIndicator(android.view.View) -> setMediaBufferingIndicator
    void attachMediaController() -> attachMediaController
    void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener) -> setOnErrorListener
    void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener) -> setOnBufferingUpdateListener
    void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener) -> setOnSeekCompleteListener
    void setOnTimedTextListener(io.vov.vitamio.MediaPlayer$OnTimedTextListener) -> setOnTimedTextListener
    void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener) -> setOnInfoListener
    void release(boolean) -> release
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void toggleMediaControlsVisiblity() -> toggleMediaControlsVisiblity
    void start() -> start
    void pause() -> pause
    void suspend() -> suspend
    void resume() -> resume
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    void setVolume(float,float) -> setVolume
    int getVideoWidth() -> getVideoWidth
    int getVideoHeight() -> getVideoHeight
    float getVideoAspectRatio() -> getVideoAspectRatio
    void setVideoChroma(int) -> setVideoChroma
    void setHardwareDecoder(boolean) -> setHardwareDecoder
    void setVideoQuality(int) -> setVideoQuality
    void setBufferSize(int) -> setBufferSize
    boolean isBuffering() -> isBuffering
    java.lang.String getMetaEncoding() -> getMetaEncoding
    void setMetaEncoding(java.lang.String) -> setMetaEncoding
    android.util.SparseArray getAudioTrackMap(java.lang.String) -> getAudioTrackMap
    int getAudioTrack() -> getAudioTrack
    void setAudioTrack(int) -> setAudioTrack
    void setTimedTextShown(boolean) -> setTimedTextShown
    void setTimedTextEncoding(java.lang.String) -> setTimedTextEncoding
    int getTimedTextLocation() -> getTimedTextLocation
    void addTimedTextSource(java.lang.String) -> addTimedTextSource
    java.lang.String getTimedTextPath() -> getTimedTextPath
    void setSubTrack(int) -> setSubTrack
    int getTimedTextTrack() -> getTimedTextTrack
    android.util.SparseArray getSubTrackMap(java.lang.String) -> getSubTrackMap
    boolean isInPlaybackState() -> isInPlaybackState
    void access$0(io.vov.vitamio.widget.VideoView,int) -> access$0
    void access$1(io.vov.vitamio.widget.VideoView,int) -> access$1
    void access$2(io.vov.vitamio.widget.VideoView,float) -> access$2
    int access$3(io.vov.vitamio.widget.VideoView) -> access$3
    int access$4(io.vov.vitamio.widget.VideoView) -> access$4
    int access$5(io.vov.vitamio.widget.VideoView) -> access$5
    float access$6(io.vov.vitamio.widget.VideoView) -> access$6
    void access$7(io.vov.vitamio.widget.VideoView,int) -> access$7
    io.vov.vitamio.MediaPlayer$OnPreparedListener access$8(io.vov.vitamio.widget.VideoView) -> access$8
    io.vov.vitamio.MediaPlayer access$9(io.vov.vitamio.widget.VideoView) -> access$9
    io.vov.vitamio.widget.MediaController access$10(io.vov.vitamio.widget.VideoView) -> access$10
    long access$11(io.vov.vitamio.widget.VideoView) -> access$11
    int access$12(io.vov.vitamio.widget.VideoView) -> access$12
    int access$13(io.vov.vitamio.widget.VideoView) -> access$13
    int access$14(io.vov.vitamio.widget.VideoView) -> access$14
    void access$15(io.vov.vitamio.widget.VideoView,int) -> access$15
    void access$16(io.vov.vitamio.widget.VideoView,int) -> access$16
    void access$17(io.vov.vitamio.widget.VideoView,android.view.SurfaceHolder) -> access$17
    int access$18(io.vov.vitamio.widget.VideoView) -> access$18
    android.view.SurfaceHolder access$19(io.vov.vitamio.widget.VideoView) -> access$19
    void access$20(io.vov.vitamio.widget.VideoView) -> access$20
    void access$21(io.vov.vitamio.widget.VideoView,boolean) -> access$21
    void access$22(io.vov.vitamio.widget.VideoView,int) -> access$22
    io.vov.vitamio.MediaPlayer$OnCompletionListener access$23(io.vov.vitamio.widget.VideoView) -> access$23
    io.vov.vitamio.MediaPlayer$OnErrorListener access$24(io.vov.vitamio.widget.VideoView) -> access$24
    android.content.Context access$25(io.vov.vitamio.widget.VideoView) -> access$25
    void access$26(io.vov.vitamio.widget.VideoView,int) -> access$26
    io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$27(io.vov.vitamio.widget.VideoView) -> access$27
    io.vov.vitamio.MediaPlayer$OnInfoListener access$28(io.vov.vitamio.widget.VideoView) -> access$28
    android.view.View access$29(io.vov.vitamio.widget.VideoView) -> access$29
    io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$30(io.vov.vitamio.widget.VideoView) -> access$30
    io.vov.vitamio.MediaPlayer$OnTimedTextListener access$31(io.vov.vitamio.widget.VideoView) -> access$31
io.vov.vitamio.widget.VideoView$1 -> io.vov.vitamio.widget.VideoView$1:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int) -> onVideoSizeChanged
io.vov.vitamio.widget.VideoView$2 -> io.vov.vitamio.widget.VideoView$2:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onPrepared(io.vov.vitamio.MediaPlayer) -> onPrepared
io.vov.vitamio.widget.VideoView$3 -> io.vov.vitamio.widget.VideoView$3:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
io.vov.vitamio.widget.VideoView$4 -> io.vov.vitamio.widget.VideoView$4:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onCompletion(io.vov.vitamio.MediaPlayer) -> onCompletion
io.vov.vitamio.widget.VideoView$5 -> io.vov.vitamio.widget.VideoView$5:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    boolean onError(io.vov.vitamio.MediaPlayer,int,int) -> onError
    io.vov.vitamio.widget.VideoView access$0(io.vov.vitamio.widget.VideoView$5) -> access$0
io.vov.vitamio.widget.VideoView$5$1 -> io.vov.vitamio.widget.VideoView$5$1:
    io.vov.vitamio.widget.VideoView$5 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.vov.vitamio.widget.VideoView$6 -> io.vov.vitamio.widget.VideoView$6:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int) -> onBufferingUpdate
io.vov.vitamio.widget.VideoView$7 -> io.vov.vitamio.widget.VideoView$7:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    boolean onInfo(io.vov.vitamio.MediaPlayer,int,int) -> onInfo
io.vov.vitamio.widget.VideoView$8 -> io.vov.vitamio.widget.VideoView$8:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onSeekComplete(io.vov.vitamio.MediaPlayer) -> onSeekComplete
io.vov.vitamio.widget.VideoView$9 -> io.vov.vitamio.widget.VideoView$9:
    io.vov.vitamio.widget.VideoView this$0 -> this$0
    void onTimedTextUpdate(byte[],int,int) -> onTimedTextUpdate
    void onTimedText(java.lang.String) -> onTimedText
