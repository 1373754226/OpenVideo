android.support.v4.app.BackStackState
android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentActivity: java.lang.String TAG
android.support.v4.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
android.support.v4.app.FragmentActivity: int HONEYCOMB
android.support.v4.app.FragmentActivity: int MSG_REALLY_STOPPED
android.support.v4.app.FragmentActivity: int MSG_RESUME_PENDING
android.support.v4.app.FragmentActivity: android.os.Handler mHandler
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManagerImpl mFragments
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentContainer mContainer
android.support.v4.app.FragmentActivity: boolean mCreated
android.support.v4.app.FragmentActivity: boolean mResumed
android.support.v4.app.FragmentActivity: boolean mStopped
android.support.v4.app.FragmentActivity: boolean mReallyStopped
android.support.v4.app.FragmentActivity: boolean mRetaining
android.support.v4.app.FragmentActivity: boolean mOptionsMenuInvalidated
android.support.v4.app.FragmentActivity: boolean mCheckedForLoaderManager
android.support.v4.app.FragmentActivity: boolean mLoadersStarted
android.support.v4.app.FragmentActivity: android.support.v4.util.SimpleArrayMap mAllLoaderManagers
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl mLoaderManager
android.support.v4.app.FragmentActivity: FragmentActivity()
android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
android.support.v4.app.FragmentActivity: void onBackPressed()
android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)
android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
android.support.v4.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
android.support.v4.app.FragmentActivity: void onDestroy()
android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)
android.support.v4.app.FragmentActivity: void onLowMemory()
android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
android.support.v4.app.FragmentActivity: void onPause()
android.support.v4.app.FragmentActivity: void onNewIntent(android.content.Intent)
android.support.v4.app.FragmentActivity: void onResume()
android.support.v4.app.FragmentActivity: void onPostResume()
android.support.v4.app.FragmentActivity: void onResumeFragments()
android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
android.support.v4.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()
android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
android.support.v4.app.FragmentActivity: void onStart()
android.support.v4.app.FragmentActivity: void onStop()
android.support.v4.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
android.support.v4.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()
android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.FragmentActivity: java.lang.String viewToString(android.view.View)
android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)
android.support.v4.app.FragmentActivity: void doReallyStop(boolean)
android.support.v4.app.FragmentActivity: void onReallyStop()
android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)
android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()
android.support.v4.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
android.support.v4.app.FragmentActivity: void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
android.support.v4.app.FragmentActivity: void invalidateSupportFragment(java.lang.String)
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()
android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
android.support.v4.app.FragmentTabHost$SavedState
android.support.v4.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColor(int)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColorResource(int)
android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()
android.support.v4.view.PagerTabStrip: void setTextSpacing(int)
android.support.v4.view.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.PagerTabStrip: void setBackgroundColor(int)
android.support.v4.view.PagerTabStrip: void setBackgroundResource(int)
android.support.v4.view.PagerTabStrip: void setDrawFullUnderline(boolean)
android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()
android.support.v4.view.PagerTabStrip: int getMinHeight()
android.support.v4.view.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip: void setTextSpacing(int)
android.support.v4.view.PagerTitleStrip: int getTextSpacing()
android.support.v4.view.PagerTitleStrip: void setNonPrimaryAlpha(float)
android.support.v4.view.PagerTitleStrip: void setTextColor(int)
android.support.v4.view.PagerTitleStrip: void setGravity(int)
android.support.v4.view.PagerTitleStrip: int getMinHeight()
android.support.v4.view.ViewPager
android.support.v4.view.ViewPager: ViewPager(android.content.Context)
android.support.v4.view.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager: void setScrollState(int)
android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()
android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
android.support.v4.view.ViewPager: int getClientWidth()
android.support.v4.view.ViewPager: void setCurrentItem(int)
android.support.v4.view.ViewPager: int getCurrentItem()
android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
android.support.v4.view.ViewPager: void setChildrenDrawingOrderEnabledCompat(boolean)
android.support.v4.view.ViewPager: int getOffscreenPageLimit()
android.support.v4.view.ViewPager: void setOffscreenPageLimit(int)
android.support.v4.view.ViewPager: void setPageMargin(int)
android.support.v4.view.ViewPager: int getPageMargin()
android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.ViewPager: void setPageMarginDrawable(int)
android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.DrawerLayout: void setScrimColor(int)
android.support.v4.widget.DrawerLayout: void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int)
android.support.v4.widget.DrawerLayout$SavedState
android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SlidingPaneLayout: void setParallaxDistance(int)
android.support.v4.widget.SlidingPaneLayout: int getParallaxDistance()
android.support.v4.widget.SlidingPaneLayout: void setSliderFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getSliderFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getCoveredFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowResource(int)
android.support.v4.widget.SlidingPaneLayout$SavedState
android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context)
android.support.v4.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.SwipeRefreshLayout: void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
android.support.v4.widget.SwipeRefreshLayout: void setTriggerPercentage(float)
android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean)
android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.android.volley.AuthFailureError
com.android.volley.AuthFailureError: android.content.Intent mResolutionIntent
com.android.volley.AuthFailureError: AuthFailureError()
com.android.volley.AuthFailureError: AuthFailureError(android.content.Intent)
com.android.volley.AuthFailureError: AuthFailureError(com.android.volley.NetworkResponse)
com.android.volley.AuthFailureError: AuthFailureError(java.lang.String)
com.android.volley.AuthFailureError: AuthFailureError(java.lang.String,java.lang.Exception)
com.android.volley.AuthFailureError: android.content.Intent getResolutionIntent()
com.android.volley.AuthFailureError: java.lang.String getMessage()
com.android.volley.Cache
com.android.volley.Cache: com.android.volley.Cache$Entry get(java.lang.String)
com.android.volley.Cache: void put(java.lang.String,com.android.volley.Cache$Entry)
com.android.volley.Cache: void initialize()
com.android.volley.Cache: void invalidate(java.lang.String,boolean)
com.android.volley.Cache: void remove(java.lang.String)
com.android.volley.Cache: void clear()
com.android.volley.Cache$Entry
com.android.volley.Cache$Entry: byte[] data
com.android.volley.Cache$Entry: java.lang.String etag
com.android.volley.Cache$Entry: long serverDate
com.android.volley.Cache$Entry: long ttl
com.android.volley.Cache$Entry: long softTtl
com.android.volley.Cache$Entry: java.util.Map responseHeaders
com.android.volley.Cache$Entry: Cache$Entry()
com.android.volley.Cache$Entry: boolean isExpired()
com.android.volley.Cache$Entry: boolean refreshNeeded()
com.android.volley.CacheDispatcher
com.android.volley.CacheDispatcher: boolean DEBUG
com.android.volley.CacheDispatcher: java.util.concurrent.BlockingQueue mCacheQueue
com.android.volley.CacheDispatcher: java.util.concurrent.BlockingQueue mNetworkQueue
com.android.volley.CacheDispatcher: com.android.volley.Cache mCache
com.android.volley.CacheDispatcher: com.android.volley.ResponseDelivery mDelivery
com.android.volley.CacheDispatcher: boolean mQuit
com.android.volley.CacheDispatcher: void <clinit>()
com.android.volley.CacheDispatcher: CacheDispatcher(java.util.concurrent.BlockingQueue,java.util.concurrent.BlockingQueue,com.android.volley.Cache,com.android.volley.ResponseDelivery)
com.android.volley.CacheDispatcher: void quit()
com.android.volley.CacheDispatcher: void run()
com.android.volley.CacheDispatcher: java.util.concurrent.BlockingQueue access$0(com.android.volley.CacheDispatcher)
com.android.volley.CacheDispatcher$1
com.android.volley.CacheDispatcher$1: com.android.volley.CacheDispatcher this$0
com.android.volley.CacheDispatcher$1: com.android.volley.Request val$request
com.android.volley.CacheDispatcher$1: CacheDispatcher$1(com.android.volley.CacheDispatcher,com.android.volley.Request)
com.android.volley.CacheDispatcher$1: void run()
com.android.volley.DefaultRetryPolicy
com.android.volley.DefaultRetryPolicy: int mCurrentTimeoutMs
com.android.volley.DefaultRetryPolicy: int mCurrentRetryCount
com.android.volley.DefaultRetryPolicy: int mMaxNumRetries
com.android.volley.DefaultRetryPolicy: float mBackoffMultiplier
com.android.volley.DefaultRetryPolicy: int DEFAULT_TIMEOUT_MS
com.android.volley.DefaultRetryPolicy: int DEFAULT_MAX_RETRIES
com.android.volley.DefaultRetryPolicy: float DEFAULT_BACKOFF_MULT
com.android.volley.DefaultRetryPolicy: DefaultRetryPolicy()
com.android.volley.DefaultRetryPolicy: DefaultRetryPolicy(int,int,float)
com.android.volley.DefaultRetryPolicy: int getCurrentTimeout()
com.android.volley.DefaultRetryPolicy: int getCurrentRetryCount()
com.android.volley.DefaultRetryPolicy: void retry(com.android.volley.VolleyError)
com.android.volley.DefaultRetryPolicy: boolean hasAttemptRemaining()
com.android.volley.ExecutorDelivery
com.android.volley.ExecutorDelivery: java.util.concurrent.Executor mResponsePoster
com.android.volley.ExecutorDelivery: ExecutorDelivery(android.os.Handler)
com.android.volley.ExecutorDelivery: ExecutorDelivery(java.util.concurrent.Executor)
com.android.volley.ExecutorDelivery: void postResponse(com.android.volley.Request,com.android.volley.Response)
com.android.volley.ExecutorDelivery: void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable)
com.android.volley.ExecutorDelivery: void postError(com.android.volley.Request,com.android.volley.VolleyError)
com.android.volley.ExecutorDelivery$1
com.android.volley.ExecutorDelivery$1: com.android.volley.ExecutorDelivery this$0
com.android.volley.ExecutorDelivery$1: android.os.Handler val$handler
com.android.volley.ExecutorDelivery$1: ExecutorDelivery$1(com.android.volley.ExecutorDelivery,android.os.Handler)
com.android.volley.ExecutorDelivery$1: void execute(java.lang.Runnable)
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable: com.android.volley.Request mRequest
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable: com.android.volley.Response mResponse
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable: java.lang.Runnable mRunnable
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable: com.android.volley.ExecutorDelivery this$0
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable: ExecutorDelivery$ResponseDeliveryRunnable(com.android.volley.ExecutorDelivery,com.android.volley.Request,com.android.volley.Response,java.lang.Runnable)
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable: void run()
com.android.volley.Network
com.android.volley.Network: com.android.volley.NetworkResponse performRequest(com.android.volley.Request)
com.android.volley.NetworkDispatcher
com.android.volley.NetworkDispatcher: java.util.concurrent.BlockingQueue mQueue
com.android.volley.NetworkDispatcher: com.android.volley.Network mNetwork
com.android.volley.NetworkDispatcher: com.android.volley.Cache mCache
com.android.volley.NetworkDispatcher: com.android.volley.ResponseDelivery mDelivery
com.android.volley.NetworkDispatcher: boolean mQuit
com.android.volley.NetworkDispatcher: NetworkDispatcher(java.util.concurrent.BlockingQueue,com.android.volley.Network,com.android.volley.Cache,com.android.volley.ResponseDelivery)
com.android.volley.NetworkDispatcher: void quit()
com.android.volley.NetworkDispatcher: void addTrafficStatsTag(com.android.volley.Request)
com.android.volley.NetworkDispatcher: void run()
com.android.volley.NetworkDispatcher: void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError)
com.android.volley.NetworkError
com.android.volley.NetworkError: NetworkError()
com.android.volley.NetworkError: NetworkError(java.lang.Throwable)
com.android.volley.NetworkError: NetworkError(com.android.volley.NetworkResponse)
com.android.volley.NetworkResponse
com.android.volley.NetworkResponse: int statusCode
com.android.volley.NetworkResponse: byte[] data
com.android.volley.NetworkResponse: java.util.Map headers
com.android.volley.NetworkResponse: boolean notModified
com.android.volley.NetworkResponse: NetworkResponse(int,byte[],java.util.Map,boolean)
com.android.volley.NetworkResponse: NetworkResponse(byte[])
com.android.volley.NetworkResponse: NetworkResponse(byte[],java.util.Map)
com.android.volley.NoConnectionError
com.android.volley.NoConnectionError: NoConnectionError()
com.android.volley.NoConnectionError: NoConnectionError(java.lang.Throwable)
com.android.volley.ParseError
com.android.volley.ParseError: ParseError()
com.android.volley.ParseError: ParseError(com.android.volley.NetworkResponse)
com.android.volley.ParseError: ParseError(java.lang.Throwable)
com.android.volley.R
com.android.volley.R: R()
com.android.volley.R$drawable
com.android.volley.R$drawable: int ic_launcher
com.android.volley.R$drawable: R$drawable()
com.android.volley.R$string
com.android.volley.R$string: int app_name
com.android.volley.R$string: R$string()
com.android.volley.R$style
com.android.volley.R$style: int AppBaseTheme
com.android.volley.R$style: int AppTheme
com.android.volley.R$style: R$style()
com.android.volley.Request
com.android.volley.Request: java.lang.String DEFAULT_PARAMS_ENCODING
com.android.volley.Request: com.android.volley.VolleyLog$MarkerLog mEventLog
com.android.volley.Request: int mMethod
com.android.volley.Request: java.lang.String mUrl
com.android.volley.Request: int mDefaultTrafficStatsTag
com.android.volley.Request: com.android.volley.Response$ErrorListener mErrorListener
com.android.volley.Request: java.lang.Integer mSequence
com.android.volley.Request: com.android.volley.RequestQueue mRequestQueue
com.android.volley.Request: boolean mShouldCache
com.android.volley.Request: boolean mCanceled
com.android.volley.Request: boolean mResponseDelivered
com.android.volley.Request: long mRequestBirthTime
com.android.volley.Request: long SLOW_REQUEST_THRESHOLD_MS
com.android.volley.Request: com.android.volley.RetryPolicy mRetryPolicy
com.android.volley.Request: com.android.volley.Cache$Entry mCacheEntry
com.android.volley.Request: java.lang.Object mTag
com.android.volley.Request: Request(java.lang.String,com.android.volley.Response$ErrorListener)
com.android.volley.Request: Request(int,java.lang.String,com.android.volley.Response$ErrorListener)
com.android.volley.Request: int getMethod()
com.android.volley.Request: com.android.volley.Request setTag(java.lang.Object)
com.android.volley.Request: java.lang.Object getTag()
com.android.volley.Request: int getTrafficStatsTag()
com.android.volley.Request: com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy)
com.android.volley.Request: void addMarker(java.lang.String)
com.android.volley.Request: void finish(java.lang.String)
com.android.volley.Request: com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue)
com.android.volley.Request: com.android.volley.Request setSequence(int)
com.android.volley.Request: int getSequence()
com.android.volley.Request: java.lang.String getUrl()
com.android.volley.Request: java.lang.String getCacheKey()
com.android.volley.Request: com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry)
com.android.volley.Request: com.android.volley.Cache$Entry getCacheEntry()
com.android.volley.Request: void cancel()
com.android.volley.Request: boolean isCanceled()
com.android.volley.Request: java.util.Map getHeaders()
com.android.volley.Request: java.util.Map getPostParams()
com.android.volley.Request: java.lang.String getPostParamsEncoding()
com.android.volley.Request: java.lang.String getPostBodyContentType()
com.android.volley.Request: byte[] getPostBody()
com.android.volley.Request: java.util.Map getParams()
com.android.volley.Request: java.lang.String getParamsEncoding()
com.android.volley.Request: java.lang.String getBodyContentType()
com.android.volley.Request: byte[] getBody()
com.android.volley.Request: byte[] encodeParameters(java.util.Map,java.lang.String)
com.android.volley.Request: com.android.volley.Request setShouldCache(boolean)
com.android.volley.Request: boolean shouldCache()
com.android.volley.Request: com.android.volley.Request$Priority getPriority()
com.android.volley.Request: int getTimeoutMs()
com.android.volley.Request: com.android.volley.RetryPolicy getRetryPolicy()
com.android.volley.Request: void markDelivered()
com.android.volley.Request: boolean hasHadResponseDelivered()
com.android.volley.Request: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
com.android.volley.Request: com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError)
com.android.volley.Request: void deliverResponse(java.lang.Object)
com.android.volley.Request: void deliverError(com.android.volley.VolleyError)
com.android.volley.Request: int compareTo(com.android.volley.Request)
com.android.volley.Request: java.lang.String toString()
com.android.volley.Request: int compareTo(java.lang.Object)
com.android.volley.Request: com.android.volley.VolleyLog$MarkerLog access$1(com.android.volley.Request)
com.android.volley.Request$1
com.android.volley.Request$1: com.android.volley.Request this$0
com.android.volley.Request$1: java.lang.String val$tag
com.android.volley.Request$1: long val$threadId
com.android.volley.Request$1: Request$1(com.android.volley.Request,java.lang.String,long)
com.android.volley.Request$1: void run()
com.android.volley.Request$Method
com.android.volley.Request$Method: int DEPRECATED_GET_OR_POST
com.android.volley.Request$Method: int GET
com.android.volley.Request$Method: int POST
com.android.volley.Request$Method: int PUT
com.android.volley.Request$Method: int DELETE
com.android.volley.Request$Method: int HEAD
com.android.volley.Request$Method: int OPTIONS
com.android.volley.Request$Method: int TRACE
com.android.volley.Request$Method: int PATCH
com.android.volley.Request$Priority
com.android.volley.Request$Priority: com.android.volley.Request$Priority LOW
com.android.volley.Request$Priority: com.android.volley.Request$Priority NORMAL
com.android.volley.Request$Priority: com.android.volley.Request$Priority HIGH
com.android.volley.Request$Priority: com.android.volley.Request$Priority IMMEDIATE
com.android.volley.Request$Priority: com.android.volley.Request$Priority[] ENUM$VALUES
com.android.volley.Request$Priority: void <clinit>()
com.android.volley.Request$Priority: Request$Priority(java.lang.String,int)
com.android.volley.Request$Priority: com.android.volley.Request$Priority[] values()
com.android.volley.Request$Priority: com.android.volley.Request$Priority valueOf(java.lang.String)
com.android.volley.RequestQueue
com.android.volley.RequestQueue: java.util.concurrent.atomic.AtomicInteger mSequenceGenerator
com.android.volley.RequestQueue: java.util.Map mWaitingRequests
com.android.volley.RequestQueue: java.util.Set mCurrentRequests
com.android.volley.RequestQueue: java.util.concurrent.PriorityBlockingQueue mCacheQueue
com.android.volley.RequestQueue: java.util.concurrent.PriorityBlockingQueue mNetworkQueue
com.android.volley.RequestQueue: int DEFAULT_NETWORK_THREAD_POOL_SIZE
com.android.volley.RequestQueue: com.android.volley.Cache mCache
com.android.volley.RequestQueue: com.android.volley.Network mNetwork
com.android.volley.RequestQueue: com.android.volley.ResponseDelivery mDelivery
com.android.volley.RequestQueue: com.android.volley.NetworkDispatcher[] mDispatchers
com.android.volley.RequestQueue: com.android.volley.CacheDispatcher mCacheDispatcher
com.android.volley.RequestQueue: RequestQueue(com.android.volley.Cache,com.android.volley.Network,int,com.android.volley.ResponseDelivery)
com.android.volley.RequestQueue: RequestQueue(com.android.volley.Cache,com.android.volley.Network,int)
com.android.volley.RequestQueue: RequestQueue(com.android.volley.Cache,com.android.volley.Network)
com.android.volley.RequestQueue: void start()
com.android.volley.RequestQueue: void stop()
com.android.volley.RequestQueue: int getSequenceNumber()
com.android.volley.RequestQueue: com.android.volley.Cache getCache()
com.android.volley.RequestQueue: void cancelAll(com.android.volley.RequestQueue$RequestFilter)
com.android.volley.RequestQueue: void cancelAll(java.lang.Object)
com.android.volley.RequestQueue: com.android.volley.Request add(com.android.volley.Request)
com.android.volley.RequestQueue: void finish(com.android.volley.Request)
com.android.volley.RequestQueue$1
com.android.volley.RequestQueue$1: com.android.volley.RequestQueue this$0
com.android.volley.RequestQueue$1: java.lang.Object val$tag
com.android.volley.RequestQueue$1: RequestQueue$1(com.android.volley.RequestQueue,java.lang.Object)
com.android.volley.RequestQueue$1: boolean apply(com.android.volley.Request)
com.android.volley.RequestQueue$RequestFilter
com.android.volley.RequestQueue$RequestFilter: boolean apply(com.android.volley.Request)
com.android.volley.Response
com.android.volley.Response: java.lang.Object result
com.android.volley.Response: com.android.volley.Cache$Entry cacheEntry
com.android.volley.Response: com.android.volley.VolleyError error
com.android.volley.Response: boolean intermediate
com.android.volley.Response: com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry)
com.android.volley.Response: com.android.volley.Response error(com.android.volley.VolleyError)
com.android.volley.Response: boolean isSuccess()
com.android.volley.Response: Response(java.lang.Object,com.android.volley.Cache$Entry)
com.android.volley.Response: Response(com.android.volley.VolleyError)
com.android.volley.Response$ErrorListener
com.android.volley.Response$ErrorListener: void onErrorResponse(com.android.volley.VolleyError)
com.android.volley.Response$Listener
com.android.volley.Response$Listener: void onResponse(java.lang.Object)
com.android.volley.ResponseDelivery
com.android.volley.ResponseDelivery: void postResponse(com.android.volley.Request,com.android.volley.Response)
com.android.volley.ResponseDelivery: void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable)
com.android.volley.ResponseDelivery: void postError(com.android.volley.Request,com.android.volley.VolleyError)
com.android.volley.RetryPolicy
com.android.volley.RetryPolicy: int getCurrentTimeout()
com.android.volley.RetryPolicy: int getCurrentRetryCount()
com.android.volley.RetryPolicy: void retry(com.android.volley.VolleyError)
com.android.volley.ServerError
com.android.volley.ServerError: ServerError(com.android.volley.NetworkResponse)
com.android.volley.ServerError: ServerError()
com.android.volley.TimeoutError
com.android.volley.TimeoutError: TimeoutError()
com.android.volley.VolleyError
com.android.volley.VolleyError: com.android.volley.NetworkResponse networkResponse
com.android.volley.VolleyError: VolleyError()
com.android.volley.VolleyError: VolleyError(com.android.volley.NetworkResponse)
com.android.volley.VolleyError: VolleyError(java.lang.String)
com.android.volley.VolleyError: VolleyError(java.lang.String,java.lang.Throwable)
com.android.volley.VolleyError: VolleyError(java.lang.Throwable)
com.android.volley.VolleyLog
com.android.volley.VolleyLog: java.lang.String TAG
com.android.volley.VolleyLog: boolean DEBUG
com.android.volley.VolleyLog: void <clinit>()
com.android.volley.VolleyLog: VolleyLog()
com.android.volley.VolleyLog: void setTag(java.lang.String)
com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])
com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])
com.android.volley.VolleyLog: void e(java.lang.String,java.lang.Object[])
com.android.volley.VolleyLog: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.android.volley.VolleyLog: void wtf(java.lang.String,java.lang.Object[])
com.android.volley.VolleyLog: void wtf(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.android.volley.VolleyLog: java.lang.String buildMessage(java.lang.String,java.lang.Object[])
com.android.volley.VolleyLog$MarkerLog
com.android.volley.VolleyLog$MarkerLog: boolean ENABLED
com.android.volley.VolleyLog$MarkerLog: long MIN_DURATION_FOR_LOGGING_MS
com.android.volley.VolleyLog$MarkerLog: java.util.List mMarkers
com.android.volley.VolleyLog$MarkerLog: boolean mFinished
com.android.volley.VolleyLog$MarkerLog: void <clinit>()
com.android.volley.VolleyLog$MarkerLog: VolleyLog$MarkerLog()
com.android.volley.VolleyLog$MarkerLog: void add(java.lang.String,long)
com.android.volley.VolleyLog$MarkerLog: void finish(java.lang.String)
com.android.volley.VolleyLog$MarkerLog: void finalize()
com.android.volley.VolleyLog$MarkerLog: long getTotalDuration()
com.android.volley.VolleyLog$MarkerLog$Marker
com.android.volley.VolleyLog$MarkerLog$Marker: java.lang.String name
com.android.volley.VolleyLog$MarkerLog$Marker: long thread
com.android.volley.VolleyLog$MarkerLog$Marker: long time
com.android.volley.VolleyLog$MarkerLog$Marker: VolleyLog$MarkerLog$Marker(java.lang.String,long,long)
com.android.volley.toolbox.AndroidAuthenticator
com.android.volley.toolbox.AndroidAuthenticator: android.content.Context mContext
com.android.volley.toolbox.AndroidAuthenticator: android.accounts.Account mAccount
com.android.volley.toolbox.AndroidAuthenticator: java.lang.String mAuthTokenType
com.android.volley.toolbox.AndroidAuthenticator: boolean mNotifyAuthFailure
com.android.volley.toolbox.AndroidAuthenticator: AndroidAuthenticator(android.content.Context,android.accounts.Account,java.lang.String)
com.android.volley.toolbox.AndroidAuthenticator: AndroidAuthenticator(android.content.Context,android.accounts.Account,java.lang.String,boolean)
com.android.volley.toolbox.AndroidAuthenticator: android.accounts.Account getAccount()
com.android.volley.toolbox.AndroidAuthenticator: java.lang.String getAuthToken()
com.android.volley.toolbox.AndroidAuthenticator: void invalidateAuthToken(java.lang.String)
com.android.volley.toolbox.Authenticator
com.android.volley.toolbox.Authenticator: java.lang.String getAuthToken()
com.android.volley.toolbox.Authenticator: void invalidateAuthToken(java.lang.String)
com.android.volley.toolbox.BasicNetwork
com.android.volley.toolbox.BasicNetwork: boolean DEBUG
com.android.volley.toolbox.BasicNetwork: int SLOW_REQUEST_THRESHOLD_MS
com.android.volley.toolbox.BasicNetwork: int DEFAULT_POOL_SIZE
com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.HttpStack mHttpStack
com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.ByteArrayPool mPool
com.android.volley.toolbox.BasicNetwork: void <clinit>()
com.android.volley.toolbox.BasicNetwork: BasicNetwork(com.android.volley.toolbox.HttpStack)
com.android.volley.toolbox.BasicNetwork: BasicNetwork(com.android.volley.toolbox.HttpStack,com.android.volley.toolbox.ByteArrayPool)
com.android.volley.toolbox.BasicNetwork: com.android.volley.NetworkResponse performRequest(com.android.volley.Request)
com.android.volley.toolbox.BasicNetwork: void logSlowRequests(long,com.android.volley.Request,byte[],org.apache.http.StatusLine)
com.android.volley.toolbox.BasicNetwork: void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError)
com.android.volley.toolbox.BasicNetwork: void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry)
com.android.volley.toolbox.BasicNetwork: void logError(java.lang.String,java.lang.String,long)
com.android.volley.toolbox.BasicNetwork: byte[] entityToBytes(org.apache.http.HttpEntity)
com.android.volley.toolbox.BasicNetwork: java.util.Map convertHeaders(org.apache.http.Header[])
com.android.volley.toolbox.ByteArrayPool
com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersByLastUse
com.android.volley.toolbox.ByteArrayPool: java.util.List mBuffersBySize
com.android.volley.toolbox.ByteArrayPool: int mCurrentSize
com.android.volley.toolbox.ByteArrayPool: int mSizeLimit
com.android.volley.toolbox.ByteArrayPool: java.util.Comparator BUF_COMPARATOR
com.android.volley.toolbox.ByteArrayPool: void <clinit>()
com.android.volley.toolbox.ByteArrayPool: ByteArrayPool(int)
com.android.volley.toolbox.ByteArrayPool: byte[] getBuf(int)
com.android.volley.toolbox.ByteArrayPool: void returnBuf(byte[])
com.android.volley.toolbox.ByteArrayPool: void trim()
com.android.volley.toolbox.ByteArrayPool$1
com.android.volley.toolbox.ByteArrayPool$1: ByteArrayPool$1()
com.android.volley.toolbox.ByteArrayPool$1: int compare(byte[],byte[])
com.android.volley.toolbox.ByteArrayPool$1: int compare(java.lang.Object,java.lang.Object)
com.android.volley.toolbox.ClearCacheRequest
com.android.volley.toolbox.ClearCacheRequest: com.android.volley.Cache mCache
com.android.volley.toolbox.ClearCacheRequest: java.lang.Runnable mCallback
com.android.volley.toolbox.ClearCacheRequest: ClearCacheRequest(com.android.volley.Cache,java.lang.Runnable)
com.android.volley.toolbox.ClearCacheRequest: boolean isCanceled()
com.android.volley.toolbox.ClearCacheRequest: com.android.volley.Request$Priority getPriority()
com.android.volley.toolbox.ClearCacheRequest: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
com.android.volley.toolbox.ClearCacheRequest: void deliverResponse(java.lang.Object)
com.android.volley.toolbox.DiskBasedCache
com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries
com.android.volley.toolbox.DiskBasedCache: long mTotalSize
com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory
com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes
com.android.volley.toolbox.DiskBasedCache: int DEFAULT_DISK_USAGE_BYTES
com.android.volley.toolbox.DiskBasedCache: float HYSTERESIS_FACTOR
com.android.volley.toolbox.DiskBasedCache: int CACHE_MAGIC
com.android.volley.toolbox.DiskBasedCache: DiskBasedCache(java.io.File,int)
com.android.volley.toolbox.DiskBasedCache: DiskBasedCache(java.io.File)
com.android.volley.toolbox.DiskBasedCache: void clear()
com.android.volley.toolbox.DiskBasedCache: com.android.volley.Cache$Entry get(java.lang.String)
com.android.volley.toolbox.DiskBasedCache: void initialize()
com.android.volley.toolbox.DiskBasedCache: void invalidate(java.lang.String,boolean)
com.android.volley.toolbox.DiskBasedCache: void put(java.lang.String,com.android.volley.Cache$Entry)
com.android.volley.toolbox.DiskBasedCache: void remove(java.lang.String)
com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)
com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)
com.android.volley.toolbox.DiskBasedCache: void pruneIfNeeded(int)
com.android.volley.toolbox.DiskBasedCache: void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader)
com.android.volley.toolbox.DiskBasedCache: void removeEntry(java.lang.String)
com.android.volley.toolbox.DiskBasedCache: byte[] streamToBytes(java.io.InputStream,int)
com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)
com.android.volley.toolbox.DiskBasedCache: void writeInt(java.io.OutputStream,int)
com.android.volley.toolbox.DiskBasedCache: int readInt(java.io.InputStream)
com.android.volley.toolbox.DiskBasedCache: void writeLong(java.io.OutputStream,long)
com.android.volley.toolbox.DiskBasedCache: long readLong(java.io.InputStream)
com.android.volley.toolbox.DiskBasedCache: void writeString(java.io.OutputStream,java.lang.String)
com.android.volley.toolbox.DiskBasedCache: java.lang.String readString(java.io.InputStream)
com.android.volley.toolbox.DiskBasedCache: void writeStringStringMap(java.util.Map,java.io.OutputStream)
com.android.volley.toolbox.DiskBasedCache: java.util.Map readStringStringMap(java.io.InputStream)
com.android.volley.toolbox.DiskBasedCache$CacheHeader
com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size
com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key
com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String etag
com.android.volley.toolbox.DiskBasedCache$CacheHeader: long serverDate
com.android.volley.toolbox.DiskBasedCache$CacheHeader: long ttl
com.android.volley.toolbox.DiskBasedCache$CacheHeader: long softTtl
com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.util.Map responseHeaders
com.android.volley.toolbox.DiskBasedCache$CacheHeader: DiskBasedCache$CacheHeader()
com.android.volley.toolbox.DiskBasedCache$CacheHeader: DiskBasedCache$CacheHeader(java.lang.String,com.android.volley.Cache$Entry)
com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream)
com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.Cache$Entry toCacheEntry(byte[])
com.android.volley.toolbox.DiskBasedCache$CacheHeader: boolean writeHeader(java.io.OutputStream)
com.android.volley.toolbox.DiskBasedCache$CountingInputStream
com.android.volley.toolbox.DiskBasedCache$CountingInputStream: int bytesRead
com.android.volley.toolbox.DiskBasedCache$CountingInputStream: DiskBasedCache$CountingInputStream(java.io.InputStream)
com.android.volley.toolbox.DiskBasedCache$CountingInputStream: int read()
com.android.volley.toolbox.DiskBasedCache$CountingInputStream: int read(byte[],int,int)
com.android.volley.toolbox.DiskBasedCache$CountingInputStream: DiskBasedCache$CountingInputStream(java.io.InputStream,com.android.volley.toolbox.DiskBasedCache$CountingInputStream)
com.android.volley.toolbox.DiskBasedCache$CountingInputStream: int access$1(com.android.volley.toolbox.DiskBasedCache$CountingInputStream)
com.android.volley.toolbox.HttpClientStack
com.android.volley.toolbox.HttpClientStack: org.apache.http.client.HttpClient mClient
com.android.volley.toolbox.HttpClientStack: java.lang.String HEADER_CONTENT_TYPE
com.android.volley.toolbox.HttpClientStack: HttpClientStack(org.apache.http.client.HttpClient)
com.android.volley.toolbox.HttpClientStack: void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map)
com.android.volley.toolbox.HttpClientStack: java.util.List getPostParameterPairs(java.util.Map)
com.android.volley.toolbox.HttpClientStack: org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map)
com.android.volley.toolbox.HttpClientStack: org.apache.http.client.methods.HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map)
com.android.volley.toolbox.HttpClientStack: void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request)
com.android.volley.toolbox.HttpClientStack: void onPrepareRequest(org.apache.http.client.methods.HttpUriRequest)
com.android.volley.toolbox.HttpClientStack$HttpPatch
com.android.volley.toolbox.HttpClientStack$HttpPatch: java.lang.String METHOD_NAME
com.android.volley.toolbox.HttpClientStack$HttpPatch: HttpClientStack$HttpPatch()
com.android.volley.toolbox.HttpClientStack$HttpPatch: HttpClientStack$HttpPatch(java.net.URI)
com.android.volley.toolbox.HttpClientStack$HttpPatch: HttpClientStack$HttpPatch(java.lang.String)
com.android.volley.toolbox.HttpClientStack$HttpPatch: java.lang.String getMethod()
com.android.volley.toolbox.HttpHeaderParser
com.android.volley.toolbox.HttpHeaderParser: HttpHeaderParser()
com.android.volley.toolbox.HttpHeaderParser: com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse)
com.android.volley.toolbox.HttpHeaderParser: long parseDateAsEpoch(java.lang.String)
com.android.volley.toolbox.HttpHeaderParser: java.lang.String parseCharset(java.util.Map)
com.android.volley.toolbox.HttpStack
com.android.volley.toolbox.HttpStack: org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map)
com.android.volley.toolbox.HurlStack
com.android.volley.toolbox.HurlStack: java.lang.String HEADER_CONTENT_TYPE
com.android.volley.toolbox.HurlStack: com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter
com.android.volley.toolbox.HurlStack: javax.net.ssl.SSLSocketFactory mSslSocketFactory
com.android.volley.toolbox.HurlStack: HurlStack()
com.android.volley.toolbox.HurlStack: HurlStack(com.android.volley.toolbox.HurlStack$UrlRewriter)
com.android.volley.toolbox.HurlStack: HurlStack(com.android.volley.toolbox.HurlStack$UrlRewriter,javax.net.ssl.SSLSocketFactory)
com.android.volley.toolbox.HurlStack: org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map)
com.android.volley.toolbox.HurlStack: org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection)
com.android.volley.toolbox.HurlStack: java.net.HttpURLConnection createConnection(java.net.URL)
com.android.volley.toolbox.HurlStack: java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request)
com.android.volley.toolbox.HurlStack: void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request)
com.android.volley.toolbox.HurlStack: void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request)
com.android.volley.toolbox.HurlStack$UrlRewriter
com.android.volley.toolbox.HurlStack$UrlRewriter: java.lang.String rewriteUrl(java.lang.String)
com.android.volley.toolbox.ImageLoader
com.android.volley.toolbox.ImageLoader: com.android.volley.RequestQueue mRequestQueue
com.android.volley.toolbox.ImageLoader: int mBatchResponseDelayMs
com.android.volley.toolbox.ImageLoader: com.android.volley.toolbox.ImageLoader$ImageCache mCache
com.android.volley.toolbox.ImageLoader: java.util.HashMap mInFlightRequests
com.android.volley.toolbox.ImageLoader: java.util.HashMap mBatchedResponses
com.android.volley.toolbox.ImageLoader: android.os.Handler mHandler
com.android.volley.toolbox.ImageLoader: java.lang.Runnable mRunnable
com.android.volley.toolbox.ImageLoader: ImageLoader(com.android.volley.RequestQueue,com.android.volley.toolbox.ImageLoader$ImageCache)
com.android.volley.toolbox.ImageLoader: com.android.volley.toolbox.ImageLoader$ImageListener getImageListener(android.widget.ImageView,int,int)
com.android.volley.toolbox.ImageLoader: boolean isCached(java.lang.String,int,int)
com.android.volley.toolbox.ImageLoader: com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener)
com.android.volley.toolbox.ImageLoader: com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener,int,int)
com.android.volley.toolbox.ImageLoader: void setBatchedResponseDelay(int)
com.android.volley.toolbox.ImageLoader: void onGetImageSuccess(java.lang.String,android.graphics.Bitmap)
com.android.volley.toolbox.ImageLoader: void onGetImageError(java.lang.String,com.android.volley.VolleyError)
com.android.volley.toolbox.ImageLoader: void batchResponse(java.lang.String,com.android.volley.toolbox.ImageLoader$BatchedImageRequest)
com.android.volley.toolbox.ImageLoader: void throwIfNotOnMainThread()
com.android.volley.toolbox.ImageLoader: java.lang.String getCacheKey(java.lang.String,int,int)
com.android.volley.toolbox.ImageLoader: java.util.HashMap access$0(com.android.volley.toolbox.ImageLoader)
com.android.volley.toolbox.ImageLoader: java.util.HashMap access$1(com.android.volley.toolbox.ImageLoader)
com.android.volley.toolbox.ImageLoader: void access$2(com.android.volley.toolbox.ImageLoader,java.lang.String,android.graphics.Bitmap)
com.android.volley.toolbox.ImageLoader: void access$3(com.android.volley.toolbox.ImageLoader,java.lang.String,com.android.volley.VolleyError)
com.android.volley.toolbox.ImageLoader: void access$4(com.android.volley.toolbox.ImageLoader,java.lang.Runnable)
com.android.volley.toolbox.ImageLoader$1
com.android.volley.toolbox.ImageLoader$1: int val$errorImageResId
com.android.volley.toolbox.ImageLoader$1: android.widget.ImageView val$view
com.android.volley.toolbox.ImageLoader$1: int val$defaultImageResId
com.android.volley.toolbox.ImageLoader$1: ImageLoader$1(int,android.widget.ImageView,int)
com.android.volley.toolbox.ImageLoader$1: void onErrorResponse(com.android.volley.VolleyError)
com.android.volley.toolbox.ImageLoader$1: void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean)
com.android.volley.toolbox.ImageLoader$2
com.android.volley.toolbox.ImageLoader$2: com.android.volley.toolbox.ImageLoader this$0
com.android.volley.toolbox.ImageLoader$2: java.lang.String val$cacheKey
com.android.volley.toolbox.ImageLoader$2: ImageLoader$2(com.android.volley.toolbox.ImageLoader,java.lang.String)
com.android.volley.toolbox.ImageLoader$2: void onResponse(android.graphics.Bitmap)
com.android.volley.toolbox.ImageLoader$2: void onResponse(java.lang.Object)
com.android.volley.toolbox.ImageLoader$3
com.android.volley.toolbox.ImageLoader$3: com.android.volley.toolbox.ImageLoader this$0
com.android.volley.toolbox.ImageLoader$3: java.lang.String val$cacheKey
com.android.volley.toolbox.ImageLoader$3: ImageLoader$3(com.android.volley.toolbox.ImageLoader,java.lang.String)
com.android.volley.toolbox.ImageLoader$3: void onErrorResponse(com.android.volley.VolleyError)
com.android.volley.toolbox.ImageLoader$4
com.android.volley.toolbox.ImageLoader$4: com.android.volley.toolbox.ImageLoader this$0
com.android.volley.toolbox.ImageLoader$4: ImageLoader$4(com.android.volley.toolbox.ImageLoader)
com.android.volley.toolbox.ImageLoader$4: void run()
com.android.volley.toolbox.ImageLoader$BatchedImageRequest
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: com.android.volley.Request mRequest
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: android.graphics.Bitmap mResponseBitmap
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: com.android.volley.VolleyError mError
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: java.util.LinkedList mContainers
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: com.android.volley.toolbox.ImageLoader this$0
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: ImageLoader$BatchedImageRequest(com.android.volley.toolbox.ImageLoader,com.android.volley.Request,com.android.volley.toolbox.ImageLoader$ImageContainer)
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: void setError(com.android.volley.VolleyError)
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: com.android.volley.VolleyError getError()
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: void addContainer(com.android.volley.toolbox.ImageLoader$ImageContainer)
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: boolean removeContainerAndCancelIfNecessary(com.android.volley.toolbox.ImageLoader$ImageContainer)
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: java.util.LinkedList access$0(com.android.volley.toolbox.ImageLoader$BatchedImageRequest)
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: void access$1(com.android.volley.toolbox.ImageLoader$BatchedImageRequest,android.graphics.Bitmap)
com.android.volley.toolbox.ImageLoader$BatchedImageRequest: android.graphics.Bitmap access$2(com.android.volley.toolbox.ImageLoader$BatchedImageRequest)
com.android.volley.toolbox.ImageLoader$ImageCache
com.android.volley.toolbox.ImageLoader$ImageCache: android.graphics.Bitmap getBitmap(java.lang.String)
com.android.volley.toolbox.ImageLoader$ImageCache: void putBitmap(java.lang.String,android.graphics.Bitmap)
com.android.volley.toolbox.ImageLoader$ImageContainer
com.android.volley.toolbox.ImageLoader$ImageContainer: android.graphics.Bitmap mBitmap
com.android.volley.toolbox.ImageLoader$ImageContainer: com.android.volley.toolbox.ImageLoader$ImageListener mListener
com.android.volley.toolbox.ImageLoader$ImageContainer: java.lang.String mCacheKey
com.android.volley.toolbox.ImageLoader$ImageContainer: java.lang.String mRequestUrl
com.android.volley.toolbox.ImageLoader$ImageContainer: com.android.volley.toolbox.ImageLoader this$0
com.android.volley.toolbox.ImageLoader$ImageContainer: ImageLoader$ImageContainer(com.android.volley.toolbox.ImageLoader,android.graphics.Bitmap,java.lang.String,java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener)
com.android.volley.toolbox.ImageLoader$ImageContainer: void cancelRequest()
com.android.volley.toolbox.ImageLoader$ImageContainer: android.graphics.Bitmap getBitmap()
com.android.volley.toolbox.ImageLoader$ImageContainer: java.lang.String getRequestUrl()
com.android.volley.toolbox.ImageLoader$ImageContainer: com.android.volley.toolbox.ImageLoader$ImageListener access$0(com.android.volley.toolbox.ImageLoader$ImageContainer)
com.android.volley.toolbox.ImageLoader$ImageContainer: void access$1(com.android.volley.toolbox.ImageLoader$ImageContainer,android.graphics.Bitmap)
com.android.volley.toolbox.ImageLoader$ImageListener
com.android.volley.toolbox.ImageLoader$ImageListener: void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean)
com.android.volley.toolbox.ImageRequest
com.android.volley.toolbox.ImageRequest: int IMAGE_TIMEOUT_MS
com.android.volley.toolbox.ImageRequest: int IMAGE_MAX_RETRIES
com.android.volley.toolbox.ImageRequest: float IMAGE_BACKOFF_MULT
com.android.volley.toolbox.ImageRequest: com.android.volley.Response$Listener mListener
com.android.volley.toolbox.ImageRequest: android.graphics.Bitmap$Config mDecodeConfig
com.android.volley.toolbox.ImageRequest: int mMaxWidth
com.android.volley.toolbox.ImageRequest: int mMaxHeight
com.android.volley.toolbox.ImageRequest: java.lang.Object sDecodeLock
com.android.volley.toolbox.ImageRequest: void <clinit>()
com.android.volley.toolbox.ImageRequest: ImageRequest(java.lang.String,com.android.volley.Response$Listener,int,int,android.graphics.Bitmap$Config,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.ImageRequest: com.android.volley.Request$Priority getPriority()
com.android.volley.toolbox.ImageRequest: int getResizedDimension(int,int,int,int)
com.android.volley.toolbox.ImageRequest: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
com.android.volley.toolbox.ImageRequest: com.android.volley.Response doParse(com.android.volley.NetworkResponse)
com.android.volley.toolbox.ImageRequest: void deliverResponse(android.graphics.Bitmap)
com.android.volley.toolbox.ImageRequest: int findBestSampleSize(int,int,int,int)
com.android.volley.toolbox.ImageRequest: void deliverResponse(java.lang.Object)
com.android.volley.toolbox.JsonArrayRequest
com.android.volley.toolbox.JsonArrayRequest: JsonArrayRequest(java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.JsonArrayRequest: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
com.android.volley.toolbox.JsonObjectRequest
com.android.volley.toolbox.JsonObjectRequest: JsonObjectRequest(int,java.lang.String,org.json.JSONObject,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.JsonObjectRequest: JsonObjectRequest(java.lang.String,org.json.JSONObject,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.JsonObjectRequest: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
com.android.volley.toolbox.JsonRequest
com.android.volley.toolbox.JsonRequest: java.lang.String PROTOCOL_CHARSET
com.android.volley.toolbox.JsonRequest: java.lang.String PROTOCOL_CONTENT_TYPE
com.android.volley.toolbox.JsonRequest: com.android.volley.Response$Listener mListener
com.android.volley.toolbox.JsonRequest: java.lang.String mRequestBody
com.android.volley.toolbox.JsonRequest: void <clinit>()
com.android.volley.toolbox.JsonRequest: JsonRequest(java.lang.String,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.JsonRequest: JsonRequest(int,java.lang.String,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.JsonRequest: void deliverResponse(java.lang.Object)
com.android.volley.toolbox.JsonRequest: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
com.android.volley.toolbox.JsonRequest: java.lang.String getPostBodyContentType()
com.android.volley.toolbox.JsonRequest: byte[] getPostBody()
com.android.volley.toolbox.JsonRequest: java.lang.String getBodyContentType()
com.android.volley.toolbox.JsonRequest: byte[] getBody()
com.android.volley.toolbox.NetworkImageView
com.android.volley.toolbox.NetworkImageView: java.lang.String mUrl
com.android.volley.toolbox.NetworkImageView: int mDefaultImageId
com.android.volley.toolbox.NetworkImageView: int mErrorImageId
com.android.volley.toolbox.NetworkImageView: com.android.volley.toolbox.ImageLoader mImageLoader
com.android.volley.toolbox.NetworkImageView: com.android.volley.toolbox.ImageLoader$ImageContainer mImageContainer
com.android.volley.toolbox.NetworkImageView: NetworkImageView(android.content.Context)
com.android.volley.toolbox.NetworkImageView: NetworkImageView(android.content.Context,android.util.AttributeSet)
com.android.volley.toolbox.NetworkImageView: NetworkImageView(android.content.Context,android.util.AttributeSet,int)
com.android.volley.toolbox.NetworkImageView: void setImageUrl(java.lang.String,com.android.volley.toolbox.ImageLoader)
com.android.volley.toolbox.NetworkImageView: void setDefaultImageResId(int)
com.android.volley.toolbox.NetworkImageView: void setErrorImageResId(int)
com.android.volley.toolbox.NetworkImageView: void loadImageIfNecessary(boolean)
com.android.volley.toolbox.NetworkImageView: void setDefaultImageOrNull()
com.android.volley.toolbox.NetworkImageView: void onLayout(boolean,int,int,int,int)
com.android.volley.toolbox.NetworkImageView: void onDetachedFromWindow()
com.android.volley.toolbox.NetworkImageView: void drawableStateChanged()
com.android.volley.toolbox.NetworkImageView: int access$0(com.android.volley.toolbox.NetworkImageView)
com.android.volley.toolbox.NetworkImageView: int access$1(com.android.volley.toolbox.NetworkImageView)
com.android.volley.toolbox.NetworkImageView$1
com.android.volley.toolbox.NetworkImageView$1: com.android.volley.toolbox.NetworkImageView this$0
com.android.volley.toolbox.NetworkImageView$1: boolean val$isInLayoutPass
com.android.volley.toolbox.NetworkImageView$1: NetworkImageView$1(com.android.volley.toolbox.NetworkImageView,boolean)
com.android.volley.toolbox.NetworkImageView$1: void onErrorResponse(com.android.volley.VolleyError)
com.android.volley.toolbox.NetworkImageView$1: void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean)
com.android.volley.toolbox.NetworkImageView$1$1
com.android.volley.toolbox.NetworkImageView$1$1: com.android.volley.toolbox.NetworkImageView$1 this$1
com.android.volley.toolbox.NetworkImageView$1$1: com.android.volley.toolbox.ImageLoader$ImageContainer val$response
com.android.volley.toolbox.NetworkImageView$1$1: NetworkImageView$1$1(com.android.volley.toolbox.NetworkImageView$1,com.android.volley.toolbox.ImageLoader$ImageContainer)
com.android.volley.toolbox.NetworkImageView$1$1: void run()
com.android.volley.toolbox.NoCache
com.android.volley.toolbox.NoCache: NoCache()
com.android.volley.toolbox.NoCache: void clear()
com.android.volley.toolbox.NoCache: com.android.volley.Cache$Entry get(java.lang.String)
com.android.volley.toolbox.NoCache: void put(java.lang.String,com.android.volley.Cache$Entry)
com.android.volley.toolbox.NoCache: void invalidate(java.lang.String,boolean)
com.android.volley.toolbox.NoCache: void remove(java.lang.String)
com.android.volley.toolbox.NoCache: void initialize()
com.android.volley.toolbox.PoolingByteArrayOutputStream
com.android.volley.toolbox.PoolingByteArrayOutputStream: int DEFAULT_SIZE
com.android.volley.toolbox.PoolingByteArrayOutputStream: com.android.volley.toolbox.ByteArrayPool mPool
com.android.volley.toolbox.PoolingByteArrayOutputStream: PoolingByteArrayOutputStream(com.android.volley.toolbox.ByteArrayPool)
com.android.volley.toolbox.PoolingByteArrayOutputStream: PoolingByteArrayOutputStream(com.android.volley.toolbox.ByteArrayPool,int)
com.android.volley.toolbox.PoolingByteArrayOutputStream: void close()
com.android.volley.toolbox.PoolingByteArrayOutputStream: void finalize()
com.android.volley.toolbox.PoolingByteArrayOutputStream: void expand(int)
com.android.volley.toolbox.PoolingByteArrayOutputStream: void write(byte[],int,int)
com.android.volley.toolbox.PoolingByteArrayOutputStream: void write(int)
com.android.volley.toolbox.RequestFuture
com.android.volley.toolbox.RequestFuture: com.android.volley.Request mRequest
com.android.volley.toolbox.RequestFuture: boolean mResultReceived
com.android.volley.toolbox.RequestFuture: java.lang.Object mResult
com.android.volley.toolbox.RequestFuture: com.android.volley.VolleyError mException
com.android.volley.toolbox.RequestFuture: com.android.volley.toolbox.RequestFuture newFuture()
com.android.volley.toolbox.RequestFuture: RequestFuture()
com.android.volley.toolbox.RequestFuture: void setRequest(com.android.volley.Request)
com.android.volley.toolbox.RequestFuture: boolean cancel(boolean)
com.android.volley.toolbox.RequestFuture: java.lang.Object get()
com.android.volley.toolbox.RequestFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
com.android.volley.toolbox.RequestFuture: java.lang.Object doGet(java.lang.Long)
com.android.volley.toolbox.RequestFuture: boolean isCancelled()
com.android.volley.toolbox.RequestFuture: boolean isDone()
com.android.volley.toolbox.RequestFuture: void onResponse(java.lang.Object)
com.android.volley.toolbox.RequestFuture: void onErrorResponse(com.android.volley.VolleyError)
com.android.volley.toolbox.StringRequest
com.android.volley.toolbox.StringRequest: com.android.volley.Response$Listener mListener
com.android.volley.toolbox.StringRequest: StringRequest(int,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.StringRequest: StringRequest(java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
com.android.volley.toolbox.StringRequest: void deliverResponse(java.lang.String)
com.android.volley.toolbox.StringRequest: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
com.android.volley.toolbox.StringRequest: void deliverResponse(java.lang.Object)
com.android.volley.toolbox.Volley
com.android.volley.toolbox.Volley: java.lang.String DEFAULT_CACHE_DIR
com.android.volley.toolbox.Volley: Volley()
com.android.volley.toolbox.Volley: com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack)
com.android.volley.toolbox.Volley: com.android.volley.RequestQueue newRequestQueue(android.content.Context)
com.devil.openvideo.DetailActivity
com.devil.openvideo.DetailActivity: DetailActivity()
com.devil.openvideo.MediaPlayerActivity
com.devil.openvideo.MediaPlayerActivity: MediaPlayerActivity()
com.devil.openvideo.OpenApplication
com.devil.openvideo.OpenApplication: OpenApplication()
com.devil.openvideo.R$anim: int loading_anim
com.devil.openvideo.R$array: int categorry_value
com.devil.openvideo.R$array: int category_img
com.devil.openvideo.R$array: int category_title
com.devil.openvideo.R$attr: int behindOffset
com.devil.openvideo.R$attr: int behindScrollScale
com.devil.openvideo.R$attr: int behindWidth
com.devil.openvideo.R$attr: int centered
com.devil.openvideo.R$attr: int clipPadding
com.devil.openvideo.R$attr: int fadeDegree
com.devil.openvideo.R$attr: int fadeDelay
com.devil.openvideo.R$attr: int fadeEnabled
com.devil.openvideo.R$attr: int fadeLength
com.devil.openvideo.R$attr: int fades
com.devil.openvideo.R$attr: int fillColor
com.devil.openvideo.R$attr: int footerColor
com.devil.openvideo.R$attr: int footerIndicatorHeight
com.devil.openvideo.R$attr: int footerIndicatorStyle
com.devil.openvideo.R$attr: int footerIndicatorUnderlinePadding
com.devil.openvideo.R$attr: int footerLineHeight
com.devil.openvideo.R$attr: int footerPadding
com.devil.openvideo.R$attr: int gapWidth
com.devil.openvideo.R$attr: int linePosition
com.devil.openvideo.R$attr: int lineWidth
com.devil.openvideo.R$attr: int mode
com.devil.openvideo.R$attr: int pageColor
com.devil.openvideo.R$attr: int radius
com.devil.openvideo.R$attr: int selectedBold
com.devil.openvideo.R$attr: int selectedColor
com.devil.openvideo.R$attr: int selectorDrawable
com.devil.openvideo.R$attr: int selectorEnabled
com.devil.openvideo.R$attr: int shadowDrawable
com.devil.openvideo.R$attr: int shadowWidth
com.devil.openvideo.R$attr: int snap
com.devil.openvideo.R$attr: int strokeColor
com.devil.openvideo.R$attr: int strokeWidth
com.devil.openvideo.R$attr: int titlePadding
com.devil.openvideo.R$attr: int topPadding
com.devil.openvideo.R$attr: int touchModeAbove
com.devil.openvideo.R$attr: int touchModeBehind
com.devil.openvideo.R$attr: int unselectedColor
com.devil.openvideo.R$attr: int viewAbove
com.devil.openvideo.R$attr: int viewBehind
com.devil.openvideo.R$attr: int vpiCirclePageIndicatorStyle
com.devil.openvideo.R$attr: int vpiIconPageIndicatorStyle
com.devil.openvideo.R$attr: int vpiLinePageIndicatorStyle
com.devil.openvideo.R$attr: int vpiTabPageIndicatorStyle
com.devil.openvideo.R$attr: int vpiTitlePageIndicatorStyle
com.devil.openvideo.R$attr: int vpiUnderlinePageIndicatorStyle
com.devil.openvideo.R$bool: int default_circle_indicator_centered
com.devil.openvideo.R$bool: int default_circle_indicator_snap
com.devil.openvideo.R$bool: int default_line_indicator_centered
com.devil.openvideo.R$bool: int default_title_indicator_selected_bold
com.devil.openvideo.R$bool: int default_underline_indicator_fades
com.devil.openvideo.R$color: int default_circle_indicator_fill_color
com.devil.openvideo.R$color: int default_circle_indicator_page_color
com.devil.openvideo.R$color: int default_circle_indicator_stroke_color
com.devil.openvideo.R$color: int default_line_indicator_selected_color
com.devil.openvideo.R$color: int default_line_indicator_unselected_color
com.devil.openvideo.R$color: int default_title_indicator_footer_color
com.devil.openvideo.R$color: int default_title_indicator_selected_color
com.devil.openvideo.R$color: int default_title_indicator_text_color
com.devil.openvideo.R$color: int default_underline_indicator_selected_color
com.devil.openvideo.R$color: int mediacontroller_bg
com.devil.openvideo.R$color: int mediacontroller_bg_pressed
com.devil.openvideo.R$color: int swipe_color_1
com.devil.openvideo.R$color: int swipe_color_2
com.devil.openvideo.R$color: int swipe_color_3
com.devil.openvideo.R$color: int swipe_color_4
com.devil.openvideo.R$color: int transparent
com.devil.openvideo.R$color: int vpi__background_holo_dark
com.devil.openvideo.R$color: int vpi__background_holo_light
com.devil.openvideo.R$color: int vpi__bright_foreground_disabled_holo_dark
com.devil.openvideo.R$color: int vpi__bright_foreground_disabled_holo_light
com.devil.openvideo.R$color: int vpi__bright_foreground_holo_dark
com.devil.openvideo.R$color: int vpi__bright_foreground_holo_light
com.devil.openvideo.R$color: int vpi__bright_foreground_inverse_holo_dark
com.devil.openvideo.R$color: int vpi__bright_foreground_inverse_holo_light
com.devil.openvideo.R$dimen: int activity_horizontal_margin
com.devil.openvideo.R$dimen: int activity_vertical_margin
com.devil.openvideo.R$dimen: int default_circle_indicator_radius
com.devil.openvideo.R$dimen: int default_circle_indicator_stroke_width
com.devil.openvideo.R$dimen: int default_line_indicator_gap_width
com.devil.openvideo.R$dimen: int default_line_indicator_line_width
com.devil.openvideo.R$dimen: int default_line_indicator_stroke_width
com.devil.openvideo.R$dimen: int default_title_indicator_clip_padding
com.devil.openvideo.R$dimen: int default_title_indicator_footer_indicator_height
com.devil.openvideo.R$dimen: int default_title_indicator_footer_indicator_underline_padding
com.devil.openvideo.R$dimen: int default_title_indicator_footer_line_height
com.devil.openvideo.R$dimen: int default_title_indicator_footer_padding
com.devil.openvideo.R$dimen: int default_title_indicator_text_size
com.devil.openvideo.R$dimen: int default_title_indicator_title_padding
com.devil.openvideo.R$dimen: int default_title_indicator_top_padding
com.devil.openvideo.R$dimen: int list_padding
com.devil.openvideo.R$dimen: int popwindow_h_1
com.devil.openvideo.R$dimen: int popwindow_h_2
com.devil.openvideo.R$dimen: int popwindow_w
com.devil.openvideo.R$dimen: int slidind_shadow_width
com.devil.openvideo.R$dimen: int slidingmenu_offset
com.devil.openvideo.R$drawable: int back_behind_list
com.devil.openvideo.R$drawable: int back_behind_listitem_style
com.devil.openvideo.R$drawable: int custom_tab_indicator
com.devil.openvideo.R$drawable: int custom_tab_indicator_divider
com.devil.openvideo.R$drawable: int custom_tab_indicator_focused
com.devil.openvideo.R$drawable: int custom_tab_indicator_selected
com.devil.openvideo.R$drawable: int custom_tab_indicator_selected_focused
com.devil.openvideo.R$drawable: int custom_tab_indicator_selected_pressed
com.devil.openvideo.R$drawable: int custom_tab_indicator_unselected
com.devil.openvideo.R$drawable: int custom_tab_indicator_unselected_focused
com.devil.openvideo.R$drawable: int custom_tab_indicator_unselected_pressed
com.devil.openvideo.R$drawable: int default_poster
com.devil.openvideo.R$drawable: int default_poster_port
com.devil.openvideo.R$drawable: int detai_item_selector
com.devil.openvideo.R$drawable: int detail_btn_bg
com.devil.openvideo.R$drawable: int details_bg_mode
com.devil.openvideo.R$drawable: int dis_menu_handpick
com.devil.openvideo.R$drawable: int headline_divider
com.devil.openvideo.R$drawable: int headline_divider_focus
com.devil.openvideo.R$drawable: int ic_launcher
com.devil.openvideo.R$drawable: int keke_account_list_divide
com.devil.openvideo.R$drawable: int line
com.devil.openvideo.R$drawable: int line_list
com.devil.openvideo.R$drawable: int logo
com.devil.openvideo.R$drawable: int logo_512x512
com.devil.openvideo.R$drawable: int mediacontroller_button
com.devil.openvideo.R$drawable: int mediacontroller_pause
com.devil.openvideo.R$drawable: int mediacontroller_play
com.devil.openvideo.R$drawable: int mediacontroller_screen_fit
com.devil.openvideo.R$drawable: int mediacontroller_screen_size
com.devil.openvideo.R$drawable: int mediacontroller_sreen_size_100
com.devil.openvideo.R$drawable: int mediacontroller_sreen_size_crop
com.devil.openvideo.R$drawable: int phone_top_filter_ad_bg
com.devil.openvideo.R$drawable: int phone_top_filter_car_bg
com.devil.openvideo.R$drawable: int phone_top_filter_child_bg
com.devil.openvideo.R$drawable: int phone_top_filter_comic_bg
com.devil.openvideo.R$drawable: int phone_top_filter_documentary_bg
com.devil.openvideo.R$drawable: int phone_top_filter_economic_bg
com.devil.openvideo.R$drawable: int phone_top_filter_edu_bg
com.devil.openvideo.R$drawable: int phone_top_filter_ent_bg
com.devil.openvideo.R$drawable: int phone_top_filter_fashion_bg
com.devil.openvideo.R$drawable: int phone_top_filter_funny_bg
com.devil.openvideo.R$drawable: int phone_top_filter_game_bg
com.devil.openvideo.R$drawable: int phone_top_filter_information_bg
com.devil.openvideo.R$drawable: int phone_top_filter_life_bg
com.devil.openvideo.R$drawable: int phone_top_filter_microfilm_bg
com.devil.openvideo.R$drawable: int phone_top_filter_movie_bg
com.devil.openvideo.R$drawable: int phone_top_filter_music_bg
com.devil.openvideo.R$drawable: int phone_top_filter_new_bg
com.devil.openvideo.R$drawable: int phone_top_filter_opencourses_bg
com.devil.openvideo.R$drawable: int phone_top_filter_original_bg
com.devil.openvideo.R$drawable: int phone_top_filter_qiyi_bg
com.devil.openvideo.R$drawable: int phone_top_filter_sport_bg
com.devil.openvideo.R$drawable: int phone_top_filter_trailers_bg
com.devil.openvideo.R$drawable: int phone_top_filter_travel_bg
com.devil.openvideo.R$drawable: int scrubber_control_disabled_holo
com.devil.openvideo.R$drawable: int scrubber_control_focused_holo
com.devil.openvideo.R$drawable: int scrubber_control_normal_holo
com.devil.openvideo.R$drawable: int scrubber_control_pressed_holo
com.devil.openvideo.R$drawable: int scrubber_control_selector_holo
com.devil.openvideo.R$drawable: int scrubber_primary_holo
com.devil.openvideo.R$drawable: int scrubber_progress_horizontal_holo_dark
com.devil.openvideo.R$drawable: int scrubber_secondary_holo
com.devil.openvideo.R$drawable: int scrubber_track_holo_dark
com.devil.openvideo.R$drawable: int slidingmenu_shadow
com.devil.openvideo.R$drawable: int tab_home_selected
com.devil.openvideo.R$drawable: int transparent
com.devil.openvideo.R$drawable: int vpi__dark_theme
com.devil.openvideo.R$drawable: int vpi__light_theme
com.devil.openvideo.R$drawable: int vpi__tab_indicator
com.devil.openvideo.R$drawable: int vpi__tab_selected_focused_holo
com.devil.openvideo.R$drawable: int vpi__tab_selected_holo
com.devil.openvideo.R$drawable: int vpi__tab_selected_pressed_holo
com.devil.openvideo.R$drawable: int vpi__tab_unselected_focused_holo
com.devil.openvideo.R$drawable: int vpi__tab_unselected_holo
com.devil.openvideo.R$drawable: int vpi__tab_unselected_pressed_holo
com.devil.openvideo.R$id: int action_add
com.devil.openvideo.R$id: int action_search
com.devil.openvideo.R$id: int action_settings
com.devil.openvideo.R$id: int action_share
com.devil.openvideo.R$id: int action_sort
com.devil.openvideo.R$id: int action_sort_alpha
com.devil.openvideo.R$id: int action_sort_size
com.devil.openvideo.R$id: int behind_silding_list
com.devil.openvideo.R$id: int bottom
com.devil.openvideo.R$id: int buffering_layout
com.devil.openvideo.R$id: int container_id
com.devil.openvideo.R$id: int cur_channel
com.devil.openvideo.R$id: int current_fenbianlv
com.devil.openvideo.R$id: int detai_player
com.devil.openvideo.R$id: int detail_btn
com.devil.openvideo.R$id: int detail_content
com.devil.openvideo.R$id: int detail_des
com.devil.openvideo.R$id: int detail_douban_rating
com.devil.openvideo.R$id: int detail_episode_total
com.devil.openvideo.R$id: int detail_indicator
com.devil.openvideo.R$id: int detail_layout
com.devil.openvideo.R$id: int detail_loading_progress
com.devil.openvideo.R$id: int detail_showDate
com.devil.openvideo.R$id: int detail_total_vv
com.devil.openvideo.R$id: int detail_update_to
com.devil.openvideo.R$id: int devider
com.devil.openvideo.R$id: int director
com.devil.openvideo.R$id: int director_layout
com.devil.openvideo.R$id: int display_mode_btn
com.devil.openvideo.R$id: int download_rate
com.devil.openvideo.R$id: int episode_grid
com.devil.openvideo.R$id: int eposide_btn
com.devil.openvideo.R$id: int esposide_des
com.devil.openvideo.R$id: int esposide_poster_id
com.devil.openvideo.R$id: int esposide_title
com.devil.openvideo.R$id: int fullscreen
com.devil.openvideo.R$id: int imageview_behind_icon
com.devil.openvideo.R$id: int indicator
com.devil.openvideo.R$id: int left
com.devil.openvideo.R$id: int load_more_progress
com.devil.openvideo.R$id: int load_progress
com.devil.openvideo.R$id: int load_rate
com.devil.openvideo.R$id: int loading_progress
com.devil.openvideo.R$id: int main_grid
com.devil.openvideo.R$id: int margin
com.devil.openvideo.R$id: int media_controller_top
com.devil.openvideo.R$id: int media_progress_layout
com.devil.openvideo.R$id: int mediacontroller_file_name
com.devil.openvideo.R$id: int mediacontroller_play_pause
com.devil.openvideo.R$id: int mediacontroller_seekbar
com.devil.openvideo.R$id: int mediacontroller_time_current
com.devil.openvideo.R$id: int mediacontroller_time_total
com.devil.openvideo.R$id: int menu_btn
com.devil.openvideo.R$id: int movie_title
com.devil.openvideo.R$id: int net_error_tips
com.devil.openvideo.R$id: int none
com.devil.openvideo.R$id: int pager
com.devil.openvideo.R$id: int performance
com.devil.openvideo.R$id: int performance_layout
com.devil.openvideo.R$id: int play_currentSystem_time
com.devil.openvideo.R$id: int play_current_time
com.devil.openvideo.R$id: int play_title
com.devil.openvideo.R$id: int played_episode
com.devil.openvideo.R$id: int played_time
com.devil.openvideo.R$id: int pop_item
com.devil.openvideo.R$id: int pop_listview
com.devil.openvideo.R$id: int poster_id
com.devil.openvideo.R$id: int poster_img
com.devil.openvideo.R$id: int probar
com.devil.openvideo.R$id: int right
com.devil.openvideo.R$id: int selected_view
com.devil.openvideo.R$id: int slidingmenumain
com.devil.openvideo.R$id: int surface
com.devil.openvideo.R$id: int swiperefresh
com.devil.openvideo.R$id: int textview_behind_title
com.devil.openvideo.R$id: int top
com.devil.openvideo.R$id: int triangle
com.devil.openvideo.R$id: int underline
com.devil.openvideo.R$id: int update_tips
com.devil.openvideo.R$id: int videoView
com.devil.openvideo.R$integer: int default_circle_indicator_orientation
com.devil.openvideo.R$integer: int default_title_indicator_footer_indicator_style
com.devil.openvideo.R$integer: int default_title_indicator_line_position
com.devil.openvideo.R$integer: int default_underline_indicator_fade_delay
com.devil.openvideo.R$integer: int default_underline_indicator_fade_length
com.devil.openvideo.R$layout: int activity_video_main
com.devil.openvideo.R$layout: int behind_list_item
com.devil.openvideo.R$layout: int behind_sliding_menu
com.devil.openvideo.R$layout: int cat_fragment
com.devil.openvideo.R$layout: int details_layout
com.devil.openvideo.R$layout: int episode_item
com.devil.openvideo.R$layout: int fragment_video_main
com.devil.openvideo.R$layout: int grid_item
com.devil.openvideo.R$layout: int grid_page
com.devil.openvideo.R$layout: int home
com.devil.openvideo.R$layout: int main_grid
com.devil.openvideo.R$layout: int media_progress
com.devil.openvideo.R$layout: int mediacontroller
com.devil.openvideo.R$layout: int mediaplayer
com.devil.openvideo.R$layout: int more_data
com.devil.openvideo.R$layout: int pop_list_item
com.devil.openvideo.R$layout: int popwindown_layout
com.devil.openvideo.R$layout: int slidingmenumain
com.devil.openvideo.R$layout: int top_bar
com.devil.openvideo.R$layout: int video_view
com.devil.openvideo.R$menu: int actions
com.devil.openvideo.R$menu: int details
com.devil.openvideo.R$menu: int video_main
com.devil.openvideo.R$raw: int libarm
com.devil.openvideo.R$string: int VideoView_error_button
com.devil.openvideo.R$string: int VideoView_error_text_invalid_progressive_playback
com.devil.openvideo.R$string: int VideoView_error_text_unknown
com.devil.openvideo.R$string: int VideoView_error_title
com.devil.openvideo.R$string: int action_bar_add
com.devil.openvideo.R$string: int action_bar_edit
com.devil.openvideo.R$string: int action_bar_search
com.devil.openvideo.R$string: int action_bar_settings
com.devil.openvideo.R$string: int action_bar_share
com.devil.openvideo.R$string: int action_bar_share_with
com.devil.openvideo.R$string: int action_bar_sort
com.devil.openvideo.R$string: int action_bar_sort_alpha
com.devil.openvideo.R$string: int action_bar_sort_size
com.devil.openvideo.R$string: int action_settings
com.devil.openvideo.R$string: int app_name
com.devil.openvideo.R$string: int hello_world
com.devil.openvideo.R$string: int mediacontroller_play_pause
com.devil.openvideo.R$string: int permission_group_tools_description
com.devil.openvideo.R$string: int permission_group_tools_label
com.devil.openvideo.R$string: int permission_receive_messages_description
com.devil.openvideo.R$string: int permission_receive_messages_label
com.devil.openvideo.R$string: int permission_write_providers_description
com.devil.openvideo.R$string: int permission_write_providers_label
com.devil.openvideo.R$string: int vitamio_init_decoders
com.devil.openvideo.R$string: int vitamio_library_app_name
com.devil.openvideo.R$style: int AppBaseTheme
com.devil.openvideo.R$style: int AppTheme
com.devil.openvideo.R$style: int CustomCirclePageIndicator
com.devil.openvideo.R$style: int CustomLinePageIndicator
com.devil.openvideo.R$style: int CustomTabPageIndicator
com.devil.openvideo.R$style: int CustomTabPageIndicator_Text
com.devil.openvideo.R$style: int CustomTitlePageIndicator
com.devil.openvideo.R$style: int CustomUnderlinePageIndicator
com.devil.openvideo.R$style: int MediaController_SeekBar
com.devil.openvideo.R$style: int MediaController_Text
com.devil.openvideo.R$style: int StyledIndicators
com.devil.openvideo.R$style: int TextAppearance_TabPageIndicator
com.devil.openvideo.R$style: int Theme_PageIndicatorDefaults
com.devil.openvideo.R$style: int Widget
com.devil.openvideo.R$style: int Widget_IconPageIndicator
com.devil.openvideo.R$style: int Widget_TabPageIndicator
com.devil.openvideo.R$styleable: int[] CirclePageIndicator
com.devil.openvideo.R$styleable: int CirclePageIndicator_android_background
com.devil.openvideo.R$styleable: int CirclePageIndicator_android_orientation
com.devil.openvideo.R$styleable: int CirclePageIndicator_centered
com.devil.openvideo.R$styleable: int CirclePageIndicator_fillColor
com.devil.openvideo.R$styleable: int CirclePageIndicator_pageColor
com.devil.openvideo.R$styleable: int CirclePageIndicator_radius
com.devil.openvideo.R$styleable: int CirclePageIndicator_snap
com.devil.openvideo.R$styleable: int CirclePageIndicator_strokeColor
com.devil.openvideo.R$styleable: int CirclePageIndicator_strokeWidth
com.devil.openvideo.R$styleable: int[] LinePageIndicator
com.devil.openvideo.R$styleable: int LinePageIndicator_android_background
com.devil.openvideo.R$styleable: int LinePageIndicator_centered
com.devil.openvideo.R$styleable: int LinePageIndicator_gapWidth
com.devil.openvideo.R$styleable: int LinePageIndicator_lineWidth
com.devil.openvideo.R$styleable: int LinePageIndicator_selectedColor
com.devil.openvideo.R$styleable: int LinePageIndicator_strokeWidth
com.devil.openvideo.R$styleable: int LinePageIndicator_unselectedColor
com.devil.openvideo.R$styleable: int[] SlidingMenu
com.devil.openvideo.R$styleable: int SlidingMenu_behindOffset
com.devil.openvideo.R$styleable: int SlidingMenu_behindScrollScale
com.devil.openvideo.R$styleable: int SlidingMenu_behindWidth
com.devil.openvideo.R$styleable: int SlidingMenu_fadeDegree
com.devil.openvideo.R$styleable: int SlidingMenu_fadeEnabled
com.devil.openvideo.R$styleable: int SlidingMenu_mode
com.devil.openvideo.R$styleable: int SlidingMenu_selectorDrawable
com.devil.openvideo.R$styleable: int SlidingMenu_selectorEnabled
com.devil.openvideo.R$styleable: int SlidingMenu_shadowDrawable
com.devil.openvideo.R$styleable: int SlidingMenu_shadowWidth
com.devil.openvideo.R$styleable: int SlidingMenu_touchModeAbove
com.devil.openvideo.R$styleable: int SlidingMenu_touchModeBehind
com.devil.openvideo.R$styleable: int SlidingMenu_viewAbove
com.devil.openvideo.R$styleable: int SlidingMenu_viewBehind
com.devil.openvideo.R$styleable: int[] TitlePageIndicator
com.devil.openvideo.R$styleable: int TitlePageIndicator_android_background
com.devil.openvideo.R$styleable: int TitlePageIndicator_android_textColor
com.devil.openvideo.R$styleable: int TitlePageIndicator_android_textSize
com.devil.openvideo.R$styleable: int TitlePageIndicator_clipPadding
com.devil.openvideo.R$styleable: int TitlePageIndicator_footerColor
com.devil.openvideo.R$styleable: int TitlePageIndicator_footerIndicatorHeight
com.devil.openvideo.R$styleable: int TitlePageIndicator_footerIndicatorStyle
com.devil.openvideo.R$styleable: int TitlePageIndicator_footerIndicatorUnderlinePadding
com.devil.openvideo.R$styleable: int TitlePageIndicator_footerLineHeight
com.devil.openvideo.R$styleable: int TitlePageIndicator_footerPadding
com.devil.openvideo.R$styleable: int TitlePageIndicator_linePosition
com.devil.openvideo.R$styleable: int TitlePageIndicator_selectedBold
com.devil.openvideo.R$styleable: int TitlePageIndicator_selectedColor
com.devil.openvideo.R$styleable: int TitlePageIndicator_titlePadding
com.devil.openvideo.R$styleable: int TitlePageIndicator_topPadding
com.devil.openvideo.R$styleable: int[] UnderlinePageIndicator
com.devil.openvideo.R$styleable: int UnderlinePageIndicator_android_background
com.devil.openvideo.R$styleable: int UnderlinePageIndicator_fadeDelay
com.devil.openvideo.R$styleable: int UnderlinePageIndicator_fadeLength
com.devil.openvideo.R$styleable: int UnderlinePageIndicator_fades
com.devil.openvideo.R$styleable: int UnderlinePageIndicator_selectedColor
com.devil.openvideo.R$styleable: int[] ViewPagerIndicator
com.devil.openvideo.R$styleable: int ViewPagerIndicator_vpiCirclePageIndicatorStyle
com.devil.openvideo.R$styleable: int ViewPagerIndicator_vpiIconPageIndicatorStyle
com.devil.openvideo.R$styleable: int ViewPagerIndicator_vpiLinePageIndicatorStyle
com.devil.openvideo.R$styleable: int ViewPagerIndicator_vpiTabPageIndicatorStyle
com.devil.openvideo.R$styleable: int ViewPagerIndicator_vpiTitlePageIndicatorStyle
com.devil.openvideo.R$styleable: int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
com.devil.openvideo.VideoMainActivity
com.devil.openvideo.VideoMainActivity: VideoMainActivity()
com.devil.openvideo.VideoViewPlayerActivity
com.devil.openvideo.VideoViewPlayerActivity: VideoViewPlayerActivity()
com.devil.openvideo.VideoViewPlayerActivity: void changeLayout(android.view.View)
com.devil.openvideo.indicator.CirclePageIndicator
com.devil.openvideo.indicator.CirclePageIndicator: int INVALID_POINTER
com.devil.openvideo.indicator.CirclePageIndicator: float mRadius
com.devil.openvideo.indicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill
com.devil.openvideo.indicator.CirclePageIndicator: android.graphics.Paint mPaintStroke
com.devil.openvideo.indicator.CirclePageIndicator: android.graphics.Paint mPaintFill
com.devil.openvideo.indicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager
com.devil.openvideo.indicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener
com.devil.openvideo.indicator.CirclePageIndicator: int mCurrentPage
com.devil.openvideo.indicator.CirclePageIndicator: int mSnapPage
com.devil.openvideo.indicator.CirclePageIndicator: float mPageOffset
com.devil.openvideo.indicator.CirclePageIndicator: int mScrollState
com.devil.openvideo.indicator.CirclePageIndicator: int mOrientation
com.devil.openvideo.indicator.CirclePageIndicator: boolean mCentered
com.devil.openvideo.indicator.CirclePageIndicator: boolean mSnap
com.devil.openvideo.indicator.CirclePageIndicator: int mTouchSlop
com.devil.openvideo.indicator.CirclePageIndicator: float mLastMotionX
com.devil.openvideo.indicator.CirclePageIndicator: int mActivePointerId
com.devil.openvideo.indicator.CirclePageIndicator: boolean mIsDragging
com.devil.openvideo.indicator.CirclePageIndicator: CirclePageIndicator(android.content.Context)
com.devil.openvideo.indicator.CirclePageIndicator: CirclePageIndicator(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.indicator.CirclePageIndicator: CirclePageIndicator(android.content.Context,android.util.AttributeSet,int)
com.devil.openvideo.indicator.CirclePageIndicator: void setCentered(boolean)
com.devil.openvideo.indicator.CirclePageIndicator: boolean isCentered()
com.devil.openvideo.indicator.CirclePageIndicator: void setPageColor(int)
com.devil.openvideo.indicator.CirclePageIndicator: int getPageColor()
com.devil.openvideo.indicator.CirclePageIndicator: void setFillColor(int)
com.devil.openvideo.indicator.CirclePageIndicator: int getFillColor()
com.devil.openvideo.indicator.CirclePageIndicator: void setOrientation(int)
com.devil.openvideo.indicator.CirclePageIndicator: int getOrientation()
com.devil.openvideo.indicator.CirclePageIndicator: void setStrokeColor(int)
com.devil.openvideo.indicator.CirclePageIndicator: int getStrokeColor()
com.devil.openvideo.indicator.CirclePageIndicator: void setStrokeWidth(float)
com.devil.openvideo.indicator.CirclePageIndicator: float getStrokeWidth()
com.devil.openvideo.indicator.CirclePageIndicator: void setRadius(float)
com.devil.openvideo.indicator.CirclePageIndicator: float getRadius()
com.devil.openvideo.indicator.CirclePageIndicator: void setSnap(boolean)
com.devil.openvideo.indicator.CirclePageIndicator: boolean isSnap()
com.devil.openvideo.indicator.CirclePageIndicator: void onDraw(android.graphics.Canvas)
com.devil.openvideo.indicator.CirclePageIndicator: boolean onTouchEvent(android.view.MotionEvent)
com.devil.openvideo.indicator.CirclePageIndicator: void setViewPager(android.support.v4.view.ViewPager)
com.devil.openvideo.indicator.CirclePageIndicator: void setViewPager(android.support.v4.view.ViewPager,int)
com.devil.openvideo.indicator.CirclePageIndicator: void setCurrentItem(int)
com.devil.openvideo.indicator.CirclePageIndicator: void notifyDataSetChanged()
com.devil.openvideo.indicator.CirclePageIndicator: void onPageScrollStateChanged(int)
com.devil.openvideo.indicator.CirclePageIndicator: void onPageScrolled(int,float,int)
com.devil.openvideo.indicator.CirclePageIndicator: void onPageSelected(int)
com.devil.openvideo.indicator.CirclePageIndicator: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
com.devil.openvideo.indicator.CirclePageIndicator: void onMeasure(int,int)
com.devil.openvideo.indicator.CirclePageIndicator: int measureLong(int)
com.devil.openvideo.indicator.CirclePageIndicator: int measureShort(int)
com.devil.openvideo.indicator.CirclePageIndicator: void onRestoreInstanceState(android.os.Parcelable)
com.devil.openvideo.indicator.CirclePageIndicator: android.os.Parcelable onSaveInstanceState()
com.devil.openvideo.indicator.CirclePageIndicator$SavedState
com.devil.openvideo.indicator.CirclePageIndicator$SavedState: int currentPage
com.devil.openvideo.indicator.CirclePageIndicator$SavedState: android.os.Parcelable$Creator CREATOR
com.devil.openvideo.indicator.CirclePageIndicator$SavedState: void <clinit>()
com.devil.openvideo.indicator.CirclePageIndicator$SavedState: CirclePageIndicator$SavedState(android.os.Parcelable)
com.devil.openvideo.indicator.CirclePageIndicator$SavedState: CirclePageIndicator$SavedState(android.os.Parcel)
com.devil.openvideo.indicator.CirclePageIndicator$SavedState: void writeToParcel(android.os.Parcel,int)
com.devil.openvideo.indicator.CirclePageIndicator$SavedState: CirclePageIndicator$SavedState(android.os.Parcel,com.devil.openvideo.indicator.CirclePageIndicator$SavedState)
com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1
com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1: CirclePageIndicator$SavedState$1()
com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1: com.devil.openvideo.indicator.CirclePageIndicator$SavedState createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1: com.devil.openvideo.indicator.CirclePageIndicator$SavedState[] newArray(int)
com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.CirclePageIndicator$SavedState$1: java.lang.Object[] newArray(int)
com.devil.openvideo.indicator.IconPageIndicator
com.devil.openvideo.indicator.IconPageIndicator: com.devil.openvideo.indicator.IcsLinearLayout mIconsLayout
com.devil.openvideo.indicator.IconPageIndicator: android.support.v4.view.ViewPager mViewPager
com.devil.openvideo.indicator.IconPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener
com.devil.openvideo.indicator.IconPageIndicator: java.lang.Runnable mIconSelector
com.devil.openvideo.indicator.IconPageIndicator: int mSelectedIndex
com.devil.openvideo.indicator.IconPageIndicator: IconPageIndicator(android.content.Context)
com.devil.openvideo.indicator.IconPageIndicator: IconPageIndicator(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.indicator.IconPageIndicator: void animateToIcon(int)
com.devil.openvideo.indicator.IconPageIndicator: void onAttachedToWindow()
com.devil.openvideo.indicator.IconPageIndicator: void onDetachedFromWindow()
com.devil.openvideo.indicator.IconPageIndicator: void onPageScrollStateChanged(int)
com.devil.openvideo.indicator.IconPageIndicator: void onPageScrolled(int,float,int)
com.devil.openvideo.indicator.IconPageIndicator: void onPageSelected(int)
com.devil.openvideo.indicator.IconPageIndicator: void setViewPager(android.support.v4.view.ViewPager)
com.devil.openvideo.indicator.IconPageIndicator: void notifyDataSetChanged()
com.devil.openvideo.indicator.IconPageIndicator: void setViewPager(android.support.v4.view.ViewPager,int)
com.devil.openvideo.indicator.IconPageIndicator: void setCurrentItem(int)
com.devil.openvideo.indicator.IconPageIndicator: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
com.devil.openvideo.indicator.IconPageIndicator: void access$0(com.devil.openvideo.indicator.IconPageIndicator,java.lang.Runnable)
com.devil.openvideo.indicator.IconPageIndicator$1
com.devil.openvideo.indicator.IconPageIndicator$1: com.devil.openvideo.indicator.IconPageIndicator this$0
com.devil.openvideo.indicator.IconPageIndicator$1: android.view.View val$iconView
com.devil.openvideo.indicator.IconPageIndicator$1: IconPageIndicator$1(com.devil.openvideo.indicator.IconPageIndicator,android.view.View)
com.devil.openvideo.indicator.IconPageIndicator$1: void run()
com.devil.openvideo.indicator.IconPagerAdapter
com.devil.openvideo.indicator.IconPagerAdapter: int getIconResId(int)
com.devil.openvideo.indicator.IconPagerAdapter: int getCount()
com.devil.openvideo.indicator.IcsLinearLayout
com.devil.openvideo.indicator.IcsLinearLayout: int[] LL
com.devil.openvideo.indicator.IcsLinearLayout: int LL_DIVIDER
com.devil.openvideo.indicator.IcsLinearLayout: int LL_SHOW_DIVIDER
com.devil.openvideo.indicator.IcsLinearLayout: int LL_DIVIDER_PADDING
com.devil.openvideo.indicator.IcsLinearLayout: android.graphics.drawable.Drawable mDivider
com.devil.openvideo.indicator.IcsLinearLayout: int mDividerWidth
com.devil.openvideo.indicator.IcsLinearLayout: int mDividerHeight
com.devil.openvideo.indicator.IcsLinearLayout: int mShowDividers
com.devil.openvideo.indicator.IcsLinearLayout: int mDividerPadding
com.devil.openvideo.indicator.IcsLinearLayout: void <clinit>()
com.devil.openvideo.indicator.IcsLinearLayout: IcsLinearLayout(android.content.Context,int)
com.devil.openvideo.indicator.IcsLinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)
com.devil.openvideo.indicator.IcsLinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)
com.devil.openvideo.indicator.IcsLinearLayout: void onDraw(android.graphics.Canvas)
com.devil.openvideo.indicator.IcsLinearLayout: void drawDividersVertical(android.graphics.Canvas)
com.devil.openvideo.indicator.IcsLinearLayout: void drawDividersHorizontal(android.graphics.Canvas)
com.devil.openvideo.indicator.IcsLinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)
com.devil.openvideo.indicator.IcsLinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)
com.devil.openvideo.indicator.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)
com.devil.openvideo.indicator.LinePageIndicator
com.devil.openvideo.indicator.LinePageIndicator: int INVALID_POINTER
com.devil.openvideo.indicator.LinePageIndicator: android.graphics.Paint mPaintUnselected
com.devil.openvideo.indicator.LinePageIndicator: android.graphics.Paint mPaintSelected
com.devil.openvideo.indicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager
com.devil.openvideo.indicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener
com.devil.openvideo.indicator.LinePageIndicator: int mCurrentPage
com.devil.openvideo.indicator.LinePageIndicator: boolean mCentered
com.devil.openvideo.indicator.LinePageIndicator: float mLineWidth
com.devil.openvideo.indicator.LinePageIndicator: float mGapWidth
com.devil.openvideo.indicator.LinePageIndicator: int mTouchSlop
com.devil.openvideo.indicator.LinePageIndicator: float mLastMotionX
com.devil.openvideo.indicator.LinePageIndicator: int mActivePointerId
com.devil.openvideo.indicator.LinePageIndicator: boolean mIsDragging
com.devil.openvideo.indicator.LinePageIndicator: LinePageIndicator(android.content.Context)
com.devil.openvideo.indicator.LinePageIndicator: LinePageIndicator(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.indicator.LinePageIndicator: LinePageIndicator(android.content.Context,android.util.AttributeSet,int)
com.devil.openvideo.indicator.LinePageIndicator: void setCentered(boolean)
com.devil.openvideo.indicator.LinePageIndicator: boolean isCentered()
com.devil.openvideo.indicator.LinePageIndicator: void setUnselectedColor(int)
com.devil.openvideo.indicator.LinePageIndicator: int getUnselectedColor()
com.devil.openvideo.indicator.LinePageIndicator: void setSelectedColor(int)
com.devil.openvideo.indicator.LinePageIndicator: int getSelectedColor()
com.devil.openvideo.indicator.LinePageIndicator: void setLineWidth(float)
com.devil.openvideo.indicator.LinePageIndicator: float getLineWidth()
com.devil.openvideo.indicator.LinePageIndicator: void setStrokeWidth(float)
com.devil.openvideo.indicator.LinePageIndicator: float getStrokeWidth()
com.devil.openvideo.indicator.LinePageIndicator: void setGapWidth(float)
com.devil.openvideo.indicator.LinePageIndicator: float getGapWidth()
com.devil.openvideo.indicator.LinePageIndicator: void onDraw(android.graphics.Canvas)
com.devil.openvideo.indicator.LinePageIndicator: boolean onTouchEvent(android.view.MotionEvent)
com.devil.openvideo.indicator.LinePageIndicator: void setViewPager(android.support.v4.view.ViewPager)
com.devil.openvideo.indicator.LinePageIndicator: void setViewPager(android.support.v4.view.ViewPager,int)
com.devil.openvideo.indicator.LinePageIndicator: void setCurrentItem(int)
com.devil.openvideo.indicator.LinePageIndicator: void notifyDataSetChanged()
com.devil.openvideo.indicator.LinePageIndicator: void onPageScrollStateChanged(int)
com.devil.openvideo.indicator.LinePageIndicator: void onPageScrolled(int,float,int)
com.devil.openvideo.indicator.LinePageIndicator: void onPageSelected(int)
com.devil.openvideo.indicator.LinePageIndicator: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
com.devil.openvideo.indicator.LinePageIndicator: void onMeasure(int,int)
com.devil.openvideo.indicator.LinePageIndicator: int measureWidth(int)
com.devil.openvideo.indicator.LinePageIndicator: int measureHeight(int)
com.devil.openvideo.indicator.LinePageIndicator: void onRestoreInstanceState(android.os.Parcelable)
com.devil.openvideo.indicator.LinePageIndicator: android.os.Parcelable onSaveInstanceState()
com.devil.openvideo.indicator.LinePageIndicator$SavedState
com.devil.openvideo.indicator.LinePageIndicator$SavedState: int currentPage
com.devil.openvideo.indicator.LinePageIndicator$SavedState: android.os.Parcelable$Creator CREATOR
com.devil.openvideo.indicator.LinePageIndicator$SavedState: void <clinit>()
com.devil.openvideo.indicator.LinePageIndicator$SavedState: LinePageIndicator$SavedState(android.os.Parcelable)
com.devil.openvideo.indicator.LinePageIndicator$SavedState: LinePageIndicator$SavedState(android.os.Parcel)
com.devil.openvideo.indicator.LinePageIndicator$SavedState: void writeToParcel(android.os.Parcel,int)
com.devil.openvideo.indicator.LinePageIndicator$SavedState: LinePageIndicator$SavedState(android.os.Parcel,com.devil.openvideo.indicator.LinePageIndicator$SavedState)
com.devil.openvideo.indicator.LinePageIndicator$SavedState$1
com.devil.openvideo.indicator.LinePageIndicator$SavedState$1: LinePageIndicator$SavedState$1()
com.devil.openvideo.indicator.LinePageIndicator$SavedState$1: com.devil.openvideo.indicator.LinePageIndicator$SavedState createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.LinePageIndicator$SavedState$1: com.devil.openvideo.indicator.LinePageIndicator$SavedState[] newArray(int)
com.devil.openvideo.indicator.LinePageIndicator$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.LinePageIndicator$SavedState$1: java.lang.Object[] newArray(int)
com.devil.openvideo.indicator.PageIndicator
com.devil.openvideo.indicator.PageIndicator: void setViewPager(android.support.v4.view.ViewPager)
com.devil.openvideo.indicator.PageIndicator: void setViewPager(android.support.v4.view.ViewPager,int)
com.devil.openvideo.indicator.PageIndicator: void setCurrentItem(int)
com.devil.openvideo.indicator.PageIndicator: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
com.devil.openvideo.indicator.PageIndicator: void notifyDataSetChanged()
com.devil.openvideo.indicator.TabPageIndicator
com.devil.openvideo.indicator.TabPageIndicator: java.lang.CharSequence EMPTY_TITLE
com.devil.openvideo.indicator.TabPageIndicator: java.lang.Runnable mTabSelector
com.devil.openvideo.indicator.TabPageIndicator: android.view.View$OnClickListener mTabClickListener
com.devil.openvideo.indicator.TabPageIndicator: com.devil.openvideo.indicator.IcsLinearLayout mTabLayout
com.devil.openvideo.indicator.TabPageIndicator: android.support.v4.view.ViewPager mViewPager
com.devil.openvideo.indicator.TabPageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener
com.devil.openvideo.indicator.TabPageIndicator: int mMaxTabWidth
com.devil.openvideo.indicator.TabPageIndicator: int mSelectedTabIndex
com.devil.openvideo.indicator.TabPageIndicator: com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener mTabReselectedListener
com.devil.openvideo.indicator.TabPageIndicator: void <clinit>()
com.devil.openvideo.indicator.TabPageIndicator: TabPageIndicator(android.content.Context)
com.devil.openvideo.indicator.TabPageIndicator: TabPageIndicator(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.indicator.TabPageIndicator: void setOnTabReselectedListener(com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener)
com.devil.openvideo.indicator.TabPageIndicator: void onMeasure(int,int)
com.devil.openvideo.indicator.TabPageIndicator: void animateToTab(int)
com.devil.openvideo.indicator.TabPageIndicator: void onAttachedToWindow()
com.devil.openvideo.indicator.TabPageIndicator: void onDetachedFromWindow()
com.devil.openvideo.indicator.TabPageIndicator: void addTab(int,java.lang.CharSequence,int)
com.devil.openvideo.indicator.TabPageIndicator: void onPageScrollStateChanged(int)
com.devil.openvideo.indicator.TabPageIndicator: void onPageScrolled(int,float,int)
com.devil.openvideo.indicator.TabPageIndicator: void onPageSelected(int)
com.devil.openvideo.indicator.TabPageIndicator: void setViewPager(android.support.v4.view.ViewPager)
com.devil.openvideo.indicator.TabPageIndicator: void notifyDataSetChanged()
com.devil.openvideo.indicator.TabPageIndicator: void setViewPager(android.support.v4.view.ViewPager,int)
com.devil.openvideo.indicator.TabPageIndicator: void setCurrentItem(int)
com.devil.openvideo.indicator.TabPageIndicator: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
com.devil.openvideo.indicator.TabPageIndicator: android.support.v4.view.ViewPager access$0(com.devil.openvideo.indicator.TabPageIndicator)
com.devil.openvideo.indicator.TabPageIndicator: com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener access$1(com.devil.openvideo.indicator.TabPageIndicator)
com.devil.openvideo.indicator.TabPageIndicator: int access$2(com.devil.openvideo.indicator.TabPageIndicator)
com.devil.openvideo.indicator.TabPageIndicator: void access$3(com.devil.openvideo.indicator.TabPageIndicator,java.lang.Runnable)
com.devil.openvideo.indicator.TabPageIndicator$1
com.devil.openvideo.indicator.TabPageIndicator$1: com.devil.openvideo.indicator.TabPageIndicator this$0
com.devil.openvideo.indicator.TabPageIndicator$1: TabPageIndicator$1(com.devil.openvideo.indicator.TabPageIndicator)
com.devil.openvideo.indicator.TabPageIndicator$1: void onClick(android.view.View)
com.devil.openvideo.indicator.TabPageIndicator$2
com.devil.openvideo.indicator.TabPageIndicator$2: com.devil.openvideo.indicator.TabPageIndicator this$0
com.devil.openvideo.indicator.TabPageIndicator$2: android.view.View val$tabView
com.devil.openvideo.indicator.TabPageIndicator$2: TabPageIndicator$2(com.devil.openvideo.indicator.TabPageIndicator,android.view.View)
com.devil.openvideo.indicator.TabPageIndicator$2: void run()
com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener
com.devil.openvideo.indicator.TabPageIndicator$OnTabReselectedListener: void onTabReselected(int)
com.devil.openvideo.indicator.TabPageIndicator$TabView
com.devil.openvideo.indicator.TabPageIndicator$TabView: int mIndex
com.devil.openvideo.indicator.TabPageIndicator$TabView: com.devil.openvideo.indicator.TabPageIndicator this$0
com.devil.openvideo.indicator.TabPageIndicator$TabView: TabPageIndicator$TabView(com.devil.openvideo.indicator.TabPageIndicator,android.content.Context)
com.devil.openvideo.indicator.TabPageIndicator$TabView: void onMeasure(int,int)
com.devil.openvideo.indicator.TabPageIndicator$TabView: int getIndex()
com.devil.openvideo.indicator.TabPageIndicator$TabView: void access$0(com.devil.openvideo.indicator.TabPageIndicator$TabView,int)
com.devil.openvideo.indicator.TitlePageIndicator
com.devil.openvideo.indicator.TitlePageIndicator: float SELECTION_FADE_PERCENTAGE
com.devil.openvideo.indicator.TitlePageIndicator: float BOLD_FADE_PERCENTAGE
com.devil.openvideo.indicator.TitlePageIndicator: java.lang.String EMPTY_TITLE
com.devil.openvideo.indicator.TitlePageIndicator: android.support.v4.view.ViewPager mViewPager
com.devil.openvideo.indicator.TitlePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener
com.devil.openvideo.indicator.TitlePageIndicator: int mCurrentPage
com.devil.openvideo.indicator.TitlePageIndicator: float mPageOffset
com.devil.openvideo.indicator.TitlePageIndicator: int mScrollState
com.devil.openvideo.indicator.TitlePageIndicator: android.graphics.Paint mPaintText
com.devil.openvideo.indicator.TitlePageIndicator: boolean mBoldText
com.devil.openvideo.indicator.TitlePageIndicator: int mColorText
com.devil.openvideo.indicator.TitlePageIndicator: int mColorSelected
com.devil.openvideo.indicator.TitlePageIndicator: android.graphics.Path mPath
com.devil.openvideo.indicator.TitlePageIndicator: android.graphics.Rect mBounds
com.devil.openvideo.indicator.TitlePageIndicator: android.graphics.Paint mPaintFooterLine
com.devil.openvideo.indicator.TitlePageIndicator: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle
com.devil.openvideo.indicator.TitlePageIndicator: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition mLinePosition
com.devil.openvideo.indicator.TitlePageIndicator: android.graphics.Paint mPaintFooterIndicator
com.devil.openvideo.indicator.TitlePageIndicator: float mFooterIndicatorHeight
com.devil.openvideo.indicator.TitlePageIndicator: float mFooterIndicatorUnderlinePadding
com.devil.openvideo.indicator.TitlePageIndicator: float mFooterPadding
com.devil.openvideo.indicator.TitlePageIndicator: float mTitlePadding
com.devil.openvideo.indicator.TitlePageIndicator: float mTopPadding
com.devil.openvideo.indicator.TitlePageIndicator: float mClipPadding
com.devil.openvideo.indicator.TitlePageIndicator: float mFooterLineHeight
com.devil.openvideo.indicator.TitlePageIndicator: int INVALID_POINTER
com.devil.openvideo.indicator.TitlePageIndicator: int mTouchSlop
com.devil.openvideo.indicator.TitlePageIndicator: float mLastMotionX
com.devil.openvideo.indicator.TitlePageIndicator: int mActivePointerId
com.devil.openvideo.indicator.TitlePageIndicator: boolean mIsDragging
com.devil.openvideo.indicator.TitlePageIndicator: com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener
com.devil.openvideo.indicator.TitlePageIndicator: int[] $SWITCH_TABLE$com$devil$openvideo$indicator$TitlePageIndicator$IndicatorStyle
com.devil.openvideo.indicator.TitlePageIndicator: TitlePageIndicator(android.content.Context)
com.devil.openvideo.indicator.TitlePageIndicator: TitlePageIndicator(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.indicator.TitlePageIndicator: TitlePageIndicator(android.content.Context,android.util.AttributeSet,int)
com.devil.openvideo.indicator.TitlePageIndicator: int getFooterColor()
com.devil.openvideo.indicator.TitlePageIndicator: void setFooterColor(int)
com.devil.openvideo.indicator.TitlePageIndicator: float getFooterLineHeight()
com.devil.openvideo.indicator.TitlePageIndicator: void setFooterLineHeight(float)
com.devil.openvideo.indicator.TitlePageIndicator: float getFooterIndicatorHeight()
com.devil.openvideo.indicator.TitlePageIndicator: void setFooterIndicatorHeight(float)
com.devil.openvideo.indicator.TitlePageIndicator: float getFooterIndicatorPadding()
com.devil.openvideo.indicator.TitlePageIndicator: void setFooterIndicatorPadding(float)
com.devil.openvideo.indicator.TitlePageIndicator: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle getFooterIndicatorStyle()
com.devil.openvideo.indicator.TitlePageIndicator: void setFooterIndicatorStyle(com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle)
com.devil.openvideo.indicator.TitlePageIndicator: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition getLinePosition()
com.devil.openvideo.indicator.TitlePageIndicator: void setLinePosition(com.devil.openvideo.indicator.TitlePageIndicator$LinePosition)
com.devil.openvideo.indicator.TitlePageIndicator: int getSelectedColor()
com.devil.openvideo.indicator.TitlePageIndicator: void setSelectedColor(int)
com.devil.openvideo.indicator.TitlePageIndicator: boolean isSelectedBold()
com.devil.openvideo.indicator.TitlePageIndicator: void setSelectedBold(boolean)
com.devil.openvideo.indicator.TitlePageIndicator: int getTextColor()
com.devil.openvideo.indicator.TitlePageIndicator: void setTextColor(int)
com.devil.openvideo.indicator.TitlePageIndicator: float getTextSize()
com.devil.openvideo.indicator.TitlePageIndicator: void setTextSize(float)
com.devil.openvideo.indicator.TitlePageIndicator: float getTitlePadding()
com.devil.openvideo.indicator.TitlePageIndicator: void setTitlePadding(float)
com.devil.openvideo.indicator.TitlePageIndicator: float getTopPadding()
com.devil.openvideo.indicator.TitlePageIndicator: void setTopPadding(float)
com.devil.openvideo.indicator.TitlePageIndicator: float getClipPadding()
com.devil.openvideo.indicator.TitlePageIndicator: void setClipPadding(float)
com.devil.openvideo.indicator.TitlePageIndicator: void setTypeface(android.graphics.Typeface)
com.devil.openvideo.indicator.TitlePageIndicator: android.graphics.Typeface getTypeface()
com.devil.openvideo.indicator.TitlePageIndicator: void onDraw(android.graphics.Canvas)
com.devil.openvideo.indicator.TitlePageIndicator: boolean onTouchEvent(android.view.MotionEvent)
com.devil.openvideo.indicator.TitlePageIndicator: void clipViewOnTheRight(android.graphics.Rect,float,int)
com.devil.openvideo.indicator.TitlePageIndicator: void clipViewOnTheLeft(android.graphics.Rect,float,int)
com.devil.openvideo.indicator.TitlePageIndicator: java.util.ArrayList calculateAllBounds(android.graphics.Paint)
com.devil.openvideo.indicator.TitlePageIndicator: android.graphics.Rect calcBounds(int,android.graphics.Paint)
com.devil.openvideo.indicator.TitlePageIndicator: void setViewPager(android.support.v4.view.ViewPager)
com.devil.openvideo.indicator.TitlePageIndicator: void setViewPager(android.support.v4.view.ViewPager,int)
com.devil.openvideo.indicator.TitlePageIndicator: void notifyDataSetChanged()
com.devil.openvideo.indicator.TitlePageIndicator: void setOnCenterItemClickListener(com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener)
com.devil.openvideo.indicator.TitlePageIndicator: void setCurrentItem(int)
com.devil.openvideo.indicator.TitlePageIndicator: void onPageScrollStateChanged(int)
com.devil.openvideo.indicator.TitlePageIndicator: void onPageScrolled(int,float,int)
com.devil.openvideo.indicator.TitlePageIndicator: void onPageSelected(int)
com.devil.openvideo.indicator.TitlePageIndicator: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
com.devil.openvideo.indicator.TitlePageIndicator: void onMeasure(int,int)
com.devil.openvideo.indicator.TitlePageIndicator: void onRestoreInstanceState(android.os.Parcelable)
com.devil.openvideo.indicator.TitlePageIndicator: android.os.Parcelable onSaveInstanceState()
com.devil.openvideo.indicator.TitlePageIndicator: java.lang.CharSequence getTitle(int)
com.devil.openvideo.indicator.TitlePageIndicator: int[] $SWITCH_TABLE$com$devil$openvideo$indicator$TitlePageIndicator$IndicatorStyle()
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle None
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle Triangle
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle Underline
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: int value
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: void <clinit>()
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: TitlePageIndicator$IndicatorStyle(java.lang.String,int,int)
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle fromValue(int)
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle[] values()
com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle: com.devil.openvideo.indicator.TitlePageIndicator$IndicatorStyle valueOf(java.lang.String)
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition Bottom
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition Top
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: int value
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition[] ENUM$VALUES
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: void <clinit>()
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: TitlePageIndicator$LinePosition(java.lang.String,int,int)
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition fromValue(int)
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition[] values()
com.devil.openvideo.indicator.TitlePageIndicator$LinePosition: com.devil.openvideo.indicator.TitlePageIndicator$LinePosition valueOf(java.lang.String)
com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener
com.devil.openvideo.indicator.TitlePageIndicator$OnCenterItemClickListener: void onCenterItemClick(int)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState
com.devil.openvideo.indicator.TitlePageIndicator$SavedState: int currentPage
com.devil.openvideo.indicator.TitlePageIndicator$SavedState: android.os.Parcelable$Creator CREATOR
com.devil.openvideo.indicator.TitlePageIndicator$SavedState: void <clinit>()
com.devil.openvideo.indicator.TitlePageIndicator$SavedState: TitlePageIndicator$SavedState(android.os.Parcelable)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState: TitlePageIndicator$SavedState(android.os.Parcel)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState: void writeToParcel(android.os.Parcel,int)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState: TitlePageIndicator$SavedState(android.os.Parcel,com.devil.openvideo.indicator.TitlePageIndicator$SavedState)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1
com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1: TitlePageIndicator$SavedState$1()
com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1: com.devil.openvideo.indicator.TitlePageIndicator$SavedState createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1: com.devil.openvideo.indicator.TitlePageIndicator$SavedState[] newArray(int)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.TitlePageIndicator$SavedState$1: java.lang.Object[] newArray(int)
com.devil.openvideo.indicator.UnderlinePageIndicator
com.devil.openvideo.indicator.UnderlinePageIndicator: int INVALID_POINTER
com.devil.openvideo.indicator.UnderlinePageIndicator: int FADE_FRAME_MS
com.devil.openvideo.indicator.UnderlinePageIndicator: android.graphics.Paint mPaint
com.devil.openvideo.indicator.UnderlinePageIndicator: boolean mFades
com.devil.openvideo.indicator.UnderlinePageIndicator: int mFadeDelay
com.devil.openvideo.indicator.UnderlinePageIndicator: int mFadeLength
com.devil.openvideo.indicator.UnderlinePageIndicator: int mFadeBy
com.devil.openvideo.indicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager
com.devil.openvideo.indicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener
com.devil.openvideo.indicator.UnderlinePageIndicator: int mScrollState
com.devil.openvideo.indicator.UnderlinePageIndicator: int mCurrentPage
com.devil.openvideo.indicator.UnderlinePageIndicator: float mPositionOffset
com.devil.openvideo.indicator.UnderlinePageIndicator: int mTouchSlop
com.devil.openvideo.indicator.UnderlinePageIndicator: float mLastMotionX
com.devil.openvideo.indicator.UnderlinePageIndicator: int mActivePointerId
com.devil.openvideo.indicator.UnderlinePageIndicator: boolean mIsDragging
com.devil.openvideo.indicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable
com.devil.openvideo.indicator.UnderlinePageIndicator: UnderlinePageIndicator(android.content.Context)
com.devil.openvideo.indicator.UnderlinePageIndicator: UnderlinePageIndicator(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.indicator.UnderlinePageIndicator: UnderlinePageIndicator(android.content.Context,android.util.AttributeSet,int)
com.devil.openvideo.indicator.UnderlinePageIndicator: boolean getFades()
com.devil.openvideo.indicator.UnderlinePageIndicator: void setFades(boolean)
com.devil.openvideo.indicator.UnderlinePageIndicator: int getFadeDelay()
com.devil.openvideo.indicator.UnderlinePageIndicator: void setFadeDelay(int)
com.devil.openvideo.indicator.UnderlinePageIndicator: int getFadeLength()
com.devil.openvideo.indicator.UnderlinePageIndicator: void setFadeLength(int)
com.devil.openvideo.indicator.UnderlinePageIndicator: int getSelectedColor()
com.devil.openvideo.indicator.UnderlinePageIndicator: void setSelectedColor(int)
com.devil.openvideo.indicator.UnderlinePageIndicator: void onDraw(android.graphics.Canvas)
com.devil.openvideo.indicator.UnderlinePageIndicator: boolean onTouchEvent(android.view.MotionEvent)
com.devil.openvideo.indicator.UnderlinePageIndicator: void setViewPager(android.support.v4.view.ViewPager)
com.devil.openvideo.indicator.UnderlinePageIndicator: void setViewPager(android.support.v4.view.ViewPager,int)
com.devil.openvideo.indicator.UnderlinePageIndicator: void setCurrentItem(int)
com.devil.openvideo.indicator.UnderlinePageIndicator: void notifyDataSetChanged()
com.devil.openvideo.indicator.UnderlinePageIndicator: void onPageScrollStateChanged(int)
com.devil.openvideo.indicator.UnderlinePageIndicator: void onPageScrolled(int,float,int)
com.devil.openvideo.indicator.UnderlinePageIndicator: void onPageSelected(int)
com.devil.openvideo.indicator.UnderlinePageIndicator: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
com.devil.openvideo.indicator.UnderlinePageIndicator: void onRestoreInstanceState(android.os.Parcelable)
com.devil.openvideo.indicator.UnderlinePageIndicator: android.os.Parcelable onSaveInstanceState()
com.devil.openvideo.indicator.UnderlinePageIndicator: boolean access$0(com.devil.openvideo.indicator.UnderlinePageIndicator)
com.devil.openvideo.indicator.UnderlinePageIndicator: android.graphics.Paint access$1(com.devil.openvideo.indicator.UnderlinePageIndicator)
com.devil.openvideo.indicator.UnderlinePageIndicator: int access$2(com.devil.openvideo.indicator.UnderlinePageIndicator)
com.devil.openvideo.indicator.UnderlinePageIndicator: java.lang.Runnable access$3(com.devil.openvideo.indicator.UnderlinePageIndicator)
com.devil.openvideo.indicator.UnderlinePageIndicator$1
com.devil.openvideo.indicator.UnderlinePageIndicator$1: com.devil.openvideo.indicator.UnderlinePageIndicator this$0
com.devil.openvideo.indicator.UnderlinePageIndicator$1: UnderlinePageIndicator$1(com.devil.openvideo.indicator.UnderlinePageIndicator)
com.devil.openvideo.indicator.UnderlinePageIndicator$1: void run()
com.devil.openvideo.indicator.UnderlinePageIndicator$2
com.devil.openvideo.indicator.UnderlinePageIndicator$2: com.devil.openvideo.indicator.UnderlinePageIndicator this$0
com.devil.openvideo.indicator.UnderlinePageIndicator$2: UnderlinePageIndicator$2(com.devil.openvideo.indicator.UnderlinePageIndicator)
com.devil.openvideo.indicator.UnderlinePageIndicator$2: void run()
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState: int currentPage
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState: android.os.Parcelable$Creator CREATOR
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState: void <clinit>()
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState: UnderlinePageIndicator$SavedState(android.os.Parcelable)
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState: UnderlinePageIndicator$SavedState(android.os.Parcel)
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState: void writeToParcel(android.os.Parcel,int)
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState: UnderlinePageIndicator$SavedState(android.os.Parcel,com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState)
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1: UnderlinePageIndicator$SavedState$1()
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1: com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1: com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState[] newArray(int)
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.devil.openvideo.indicator.UnderlinePageIndicator$SavedState$1: java.lang.Object[] newArray(int)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer mTrans
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: android.view.animation.Interpolator lin
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: void <clinit>()
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: CanvasTransformerBuilder()
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: void initTransformer()
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer rotate(int,int,int,int)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer translate(int,int,int,int)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer concatTransformer(com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer access$0(com.devil.openvideo.slidingmenu.CanvasTransformerBuilder)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$1
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$1: CanvasTransformerBuilder$1()
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$1: float getInterpolation(float)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$2
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$2: com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$2: CanvasTransformerBuilder$2(com.devil.openvideo.slidingmenu.CanvasTransformerBuilder)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$2: void transformCanvas(android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: android.view.animation.Interpolator val$interp
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: int val$openedX
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: int val$closedX
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: int val$openedY
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: int val$closedY
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: int val$px
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: int val$py
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: CanvasTransformerBuilder$3(com.devil.openvideo.slidingmenu.CanvasTransformerBuilder,android.view.animation.Interpolator,int,int,int,int,int,int)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$3: void transformCanvas(android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: android.view.animation.Interpolator val$interp
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: int val$openedDeg
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: int val$closedDeg
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: int val$px
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: int val$py
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: CanvasTransformerBuilder$4(com.devil.openvideo.slidingmenu.CanvasTransformerBuilder,android.view.animation.Interpolator,int,int,int,int)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$4: void transformCanvas(android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: android.view.animation.Interpolator val$interp
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: int val$openedX
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: int val$closedX
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: int val$openedY
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: int val$closedY
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: CanvasTransformerBuilder$5(com.devil.openvideo.slidingmenu.CanvasTransformerBuilder,android.view.animation.Interpolator,int,int,int,int)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$5: void transformCanvas(android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$6
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$6: com.devil.openvideo.slidingmenu.CanvasTransformerBuilder this$0
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$6: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer val$t
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$6: CanvasTransformerBuilder$6(com.devil.openvideo.slidingmenu.CanvasTransformerBuilder,com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer)
com.devil.openvideo.slidingmenu.CanvasTransformerBuilder$6: void transformCanvas(android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.CustomViewAbove
com.devil.openvideo.slidingmenu.CustomViewAbove: java.lang.String TAG
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean DEBUG
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean USE_CACHE
com.devil.openvideo.slidingmenu.CustomViewAbove: int MAX_SETTLE_DURATION
com.devil.openvideo.slidingmenu.CustomViewAbove: int MIN_DISTANCE_FOR_FLING
com.devil.openvideo.slidingmenu.CustomViewAbove: android.view.animation.Interpolator sInterpolator
com.devil.openvideo.slidingmenu.CustomViewAbove: android.view.View mContent
com.devil.openvideo.slidingmenu.CustomViewAbove: int mCurItem
com.devil.openvideo.slidingmenu.CustomViewAbove: android.widget.Scroller mScroller
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean mScrollingCacheEnabled
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean mScrolling
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean mIsBeingDragged
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean mIsUnableToDrag
com.devil.openvideo.slidingmenu.CustomViewAbove: int mTouchSlop
com.devil.openvideo.slidingmenu.CustomViewAbove: float mInitialMotionX
com.devil.openvideo.slidingmenu.CustomViewAbove: float mLastMotionX
com.devil.openvideo.slidingmenu.CustomViewAbove: float mLastMotionY
com.devil.openvideo.slidingmenu.CustomViewAbove: int mActivePointerId
com.devil.openvideo.slidingmenu.CustomViewAbove: int INVALID_POINTER
com.devil.openvideo.slidingmenu.CustomViewAbove: android.view.VelocityTracker mVelocityTracker
com.devil.openvideo.slidingmenu.CustomViewAbove: int mMinimumVelocity
com.devil.openvideo.slidingmenu.CustomViewAbove: int mMaximumVelocity
com.devil.openvideo.slidingmenu.CustomViewAbove: int mFlingDistance
com.devil.openvideo.slidingmenu.CustomViewAbove: com.devil.openvideo.slidingmenu.CustomViewBehind mViewBehind
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean mEnabled
com.devil.openvideo.slidingmenu.CustomViewAbove: com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener mOnPageChangeListener
com.devil.openvideo.slidingmenu.CustomViewAbove: com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener
com.devil.openvideo.slidingmenu.CustomViewAbove: com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener mClosedListener
com.devil.openvideo.slidingmenu.CustomViewAbove: com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener mOpenedListener
com.devil.openvideo.slidingmenu.CustomViewAbove: java.util.List mIgnoredViews
com.devil.openvideo.slidingmenu.CustomViewAbove: int mTouchMode
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean mQuickReturn
com.devil.openvideo.slidingmenu.CustomViewAbove: float mScrollX
com.devil.openvideo.slidingmenu.CustomViewAbove: void <clinit>()
com.devil.openvideo.slidingmenu.CustomViewAbove: CustomViewAbove(android.content.Context)
com.devil.openvideo.slidingmenu.CustomViewAbove: CustomViewAbove(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.slidingmenu.CustomViewAbove: void initCustomViewAbove()
com.devil.openvideo.slidingmenu.CustomViewAbove: void setCurrentItem(int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void setCurrentItem(int,boolean)
com.devil.openvideo.slidingmenu.CustomViewAbove: int getCurrentItem()
com.devil.openvideo.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean)
com.devil.openvideo.slidingmenu.CustomViewAbove: void setCurrentItemInternal(int,boolean,boolean,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void setOnPageChangeListener(com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener)
com.devil.openvideo.slidingmenu.CustomViewAbove: void setOnOpenedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener)
com.devil.openvideo.slidingmenu.CustomViewAbove: void setOnClosedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener)
com.devil.openvideo.slidingmenu.CustomViewAbove: com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener)
com.devil.openvideo.slidingmenu.CustomViewAbove: void addIgnoredView(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewAbove: void removeIgnoredView(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewAbove: void clearIgnoredViews()
com.devil.openvideo.slidingmenu.CustomViewAbove: float distanceInfluenceForSnapDuration(float)
com.devil.openvideo.slidingmenu.CustomViewAbove: int getDestScrollX(int)
com.devil.openvideo.slidingmenu.CustomViewAbove: int getLeftBound()
com.devil.openvideo.slidingmenu.CustomViewAbove: int getRightBound()
com.devil.openvideo.slidingmenu.CustomViewAbove: int getContentLeft()
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean isMenuOpen()
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean isInIgnoredView(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: int getBehindWidth()
com.devil.openvideo.slidingmenu.CustomViewAbove: int getChildWidth(int)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean isSlidingEnabled()
com.devil.openvideo.slidingmenu.CustomViewAbove: void setSlidingEnabled(boolean)
com.devil.openvideo.slidingmenu.CustomViewAbove: void smoothScrollTo(int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void smoothScrollTo(int,int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void setContent(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewAbove: android.view.View getContent()
com.devil.openvideo.slidingmenu.CustomViewAbove: void setCustomViewBehind(com.devil.openvideo.slidingmenu.CustomViewBehind)
com.devil.openvideo.slidingmenu.CustomViewAbove: void onMeasure(int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void onSizeChanged(int,int,int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void onLayout(boolean,int,int,int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void setAboveOffset(int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void computeScroll()
com.devil.openvideo.slidingmenu.CustomViewAbove: void pageScrolled(int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void onPageScrolled(int,float,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: void completeScroll()
com.devil.openvideo.slidingmenu.CustomViewAbove: void setTouchMode(int)
com.devil.openvideo.slidingmenu.CustomViewAbove: int getTouchMode()
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean thisTouchAllowed(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean thisSlideAllowed(float)
com.devil.openvideo.slidingmenu.CustomViewAbove: int getPointerIndex(android.view.MotionEvent,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean onTouchEvent(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: void determineDrag(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: void scrollTo(int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: int determineTargetPage(float,int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: float getPercentOpen()
com.devil.openvideo.slidingmenu.CustomViewAbove: void dispatchDraw(android.graphics.Canvas)
com.devil.openvideo.slidingmenu.CustomViewAbove: void onSecondaryPointerUp(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: void startDrag()
com.devil.openvideo.slidingmenu.CustomViewAbove: void endDrag()
com.devil.openvideo.slidingmenu.CustomViewAbove: void setScrollingCacheEnabled(boolean)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean canScroll(android.view.View,boolean,int,int,int)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean dispatchKeyEvent(android.view.KeyEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean executeKeyEvent(android.view.KeyEvent)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean arrowScroll(int)
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean pageLeft()
com.devil.openvideo.slidingmenu.CustomViewAbove: boolean pageRight()
com.devil.openvideo.slidingmenu.CustomViewAbove: com.devil.openvideo.slidingmenu.CustomViewBehind access$0(com.devil.openvideo.slidingmenu.CustomViewAbove)
com.devil.openvideo.slidingmenu.CustomViewAbove$1
com.devil.openvideo.slidingmenu.CustomViewAbove$1: CustomViewAbove$1()
com.devil.openvideo.slidingmenu.CustomViewAbove$1: float getInterpolation(float)
com.devil.openvideo.slidingmenu.CustomViewAbove$2
com.devil.openvideo.slidingmenu.CustomViewAbove$2: com.devil.openvideo.slidingmenu.CustomViewAbove this$0
com.devil.openvideo.slidingmenu.CustomViewAbove$2: CustomViewAbove$2(com.devil.openvideo.slidingmenu.CustomViewAbove)
com.devil.openvideo.slidingmenu.CustomViewAbove$2: void onPageSelected(int)
com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener
com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener: void onPageScrolled(int,float,int)
com.devil.openvideo.slidingmenu.CustomViewAbove$OnPageChangeListener: void onPageSelected(int)
com.devil.openvideo.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener
com.devil.openvideo.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener: CustomViewAbove$SimpleOnPageChangeListener()
com.devil.openvideo.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)
com.devil.openvideo.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener: void onPageSelected(int)
com.devil.openvideo.slidingmenu.CustomViewAbove$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)
com.devil.openvideo.slidingmenu.CustomViewBehind
com.devil.openvideo.slidingmenu.CustomViewBehind: java.lang.String TAG
com.devil.openvideo.slidingmenu.CustomViewBehind: int MARGIN_THRESHOLD
com.devil.openvideo.slidingmenu.CustomViewBehind: int mTouchMode
com.devil.openvideo.slidingmenu.CustomViewBehind: com.devil.openvideo.slidingmenu.CustomViewAbove mViewAbove
com.devil.openvideo.slidingmenu.CustomViewBehind: android.view.View mContent
com.devil.openvideo.slidingmenu.CustomViewBehind: android.view.View mSecondaryContent
com.devil.openvideo.slidingmenu.CustomViewBehind: int mMarginThreshold
com.devil.openvideo.slidingmenu.CustomViewBehind: int mWidthOffset
com.devil.openvideo.slidingmenu.CustomViewBehind: com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer mTransformer
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean mChildrenEnabled
com.devil.openvideo.slidingmenu.CustomViewBehind: int mMode
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean mFadeEnabled
com.devil.openvideo.slidingmenu.CustomViewBehind: android.graphics.Paint mFadePaint
com.devil.openvideo.slidingmenu.CustomViewBehind: float mScrollScale
com.devil.openvideo.slidingmenu.CustomViewBehind: android.graphics.drawable.Drawable mShadowDrawable
com.devil.openvideo.slidingmenu.CustomViewBehind: android.graphics.drawable.Drawable mSecondaryShadowDrawable
com.devil.openvideo.slidingmenu.CustomViewBehind: int mShadowWidth
com.devil.openvideo.slidingmenu.CustomViewBehind: float mFadeDegree
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean mSelectorEnabled
com.devil.openvideo.slidingmenu.CustomViewBehind: android.graphics.Bitmap mSelectorDrawable
com.devil.openvideo.slidingmenu.CustomViewBehind: android.view.View mSelectedView
com.devil.openvideo.slidingmenu.CustomViewBehind: CustomViewBehind(android.content.Context)
com.devil.openvideo.slidingmenu.CustomViewBehind: CustomViewBehind(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setCustomViewAbove(com.devil.openvideo.slidingmenu.CustomViewAbove)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setCanvasTransformer(com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setWidthOffset(int)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setMarginThreshold(int)
com.devil.openvideo.slidingmenu.CustomViewBehind: int getMarginThreshold()
com.devil.openvideo.slidingmenu.CustomViewBehind: int getBehindWidth()
com.devil.openvideo.slidingmenu.CustomViewBehind: void setContent(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewBehind: android.view.View getContent()
com.devil.openvideo.slidingmenu.CustomViewBehind: void setSecondaryContent(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewBehind: android.view.View getSecondaryContent()
com.devil.openvideo.slidingmenu.CustomViewBehind: void setChildrenEnabled(boolean)
com.devil.openvideo.slidingmenu.CustomViewBehind: void scrollTo(int,int)
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean onTouchEvent(android.view.MotionEvent)
com.devil.openvideo.slidingmenu.CustomViewBehind: void dispatchDraw(android.graphics.Canvas)
com.devil.openvideo.slidingmenu.CustomViewBehind: void onLayout(boolean,int,int,int,int)
com.devil.openvideo.slidingmenu.CustomViewBehind: void onMeasure(int,int)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setMode(int)
com.devil.openvideo.slidingmenu.CustomViewBehind: int getMode()
com.devil.openvideo.slidingmenu.CustomViewBehind: void setScrollScale(float)
com.devil.openvideo.slidingmenu.CustomViewBehind: float getScrollScale()
com.devil.openvideo.slidingmenu.CustomViewBehind: void setShadowDrawable(android.graphics.drawable.Drawable)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setSecondaryShadowDrawable(android.graphics.drawable.Drawable)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setShadowWidth(int)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setFadeEnabled(boolean)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setFadeDegree(float)
com.devil.openvideo.slidingmenu.CustomViewBehind: int getMenuPage(int)
com.devil.openvideo.slidingmenu.CustomViewBehind: void scrollBehindTo(android.view.View,int,int)
com.devil.openvideo.slidingmenu.CustomViewBehind: int getMenuLeft(android.view.View,int)
com.devil.openvideo.slidingmenu.CustomViewBehind: int getAbsLeftBound(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewBehind: int getAbsRightBound(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean marginTouchAllowed(android.view.View,int)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setTouchMode(int)
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean menuOpenTouchAllowed(android.view.View,int,float)
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean menuTouchInQuickReturn(android.view.View,int,float)
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean menuClosedSlideAllowed(float)
com.devil.openvideo.slidingmenu.CustomViewBehind: boolean menuOpenSlideAllowed(float)
com.devil.openvideo.slidingmenu.CustomViewBehind: void drawShadow(android.view.View,android.graphics.Canvas)
com.devil.openvideo.slidingmenu.CustomViewBehind: void drawFade(android.view.View,android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.CustomViewBehind: void drawSelector(android.view.View,android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setSelectorEnabled(boolean)
com.devil.openvideo.slidingmenu.CustomViewBehind: void setSelectedView(android.view.View)
com.devil.openvideo.slidingmenu.CustomViewBehind: int getSelectorTop()
com.devil.openvideo.slidingmenu.CustomViewBehind: void setSelectorBitmap(android.graphics.Bitmap)
com.devil.openvideo.slidingmenu.MenuInterface
com.devil.openvideo.slidingmenu.MenuInterface: void scrollBehindTo(int,int,com.devil.openvideo.slidingmenu.CustomViewBehind,float)
com.devil.openvideo.slidingmenu.MenuInterface: int getMenuLeft(com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View)
com.devil.openvideo.slidingmenu.MenuInterface: int getAbsLeftBound(com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View)
com.devil.openvideo.slidingmenu.MenuInterface: int getAbsRightBound(com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View)
com.devil.openvideo.slidingmenu.MenuInterface: boolean marginTouchAllowed(android.view.View,int,int)
com.devil.openvideo.slidingmenu.MenuInterface: boolean menuOpenTouchAllowed(android.view.View,int,int)
com.devil.openvideo.slidingmenu.MenuInterface: boolean menuTouchInQuickReturn(android.view.View,int,int)
com.devil.openvideo.slidingmenu.MenuInterface: boolean menuClosedSlideAllowed(int)
com.devil.openvideo.slidingmenu.MenuInterface: boolean menuOpenSlideAllowed(int)
com.devil.openvideo.slidingmenu.MenuInterface: void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int)
com.devil.openvideo.slidingmenu.MenuInterface: void drawFade(android.graphics.Canvas,int,com.devil.openvideo.slidingmenu.CustomViewBehind,android.view.View)
com.devil.openvideo.slidingmenu.MenuInterface: void drawSelector(android.view.View,android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.SlidingMenu
com.devil.openvideo.slidingmenu.SlidingMenu: java.lang.String TAG
com.devil.openvideo.slidingmenu.SlidingMenu: int SLIDING_WINDOW
com.devil.openvideo.slidingmenu.SlidingMenu: int SLIDING_CONTENT
com.devil.openvideo.slidingmenu.SlidingMenu: boolean mActionbarOverlay
com.devil.openvideo.slidingmenu.SlidingMenu: int TOUCHMODE_MARGIN
com.devil.openvideo.slidingmenu.SlidingMenu: int TOUCHMODE_FULLSCREEN
com.devil.openvideo.slidingmenu.SlidingMenu: int TOUCHMODE_NONE
com.devil.openvideo.slidingmenu.SlidingMenu: int LEFT
com.devil.openvideo.slidingmenu.SlidingMenu: int RIGHT
com.devil.openvideo.slidingmenu.SlidingMenu: int LEFT_RIGHT
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.CustomViewAbove mViewAbove
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.CustomViewBehind mViewBehind
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener mOpenListener
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener mSecondaryOpenListner
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener mCloseListener
com.devil.openvideo.slidingmenu.SlidingMenu: void <clinit>()
com.devil.openvideo.slidingmenu.SlidingMenu: SlidingMenu(android.content.Context)
com.devil.openvideo.slidingmenu.SlidingMenu: SlidingMenu(android.app.Activity,int)
com.devil.openvideo.slidingmenu.SlidingMenu: SlidingMenu(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.slidingmenu.SlidingMenu: SlidingMenu(android.content.Context,android.util.AttributeSet,int)
com.devil.openvideo.slidingmenu.SlidingMenu: void attachToActivity(android.app.Activity,int)
com.devil.openvideo.slidingmenu.SlidingMenu: void attachToActivity(android.app.Activity,int,boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: void setContent(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setContent(android.view.View)
com.devil.openvideo.slidingmenu.SlidingMenu: android.view.View getContent()
com.devil.openvideo.slidingmenu.SlidingMenu: void setMenu(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setMenu(android.view.View)
com.devil.openvideo.slidingmenu.SlidingMenu: android.view.View getMenu()
com.devil.openvideo.slidingmenu.SlidingMenu: void setSecondaryMenu(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSecondaryMenu(android.view.View)
com.devil.openvideo.slidingmenu.SlidingMenu: android.view.View getSecondaryMenu()
com.devil.openvideo.slidingmenu.SlidingMenu: void setSlidingEnabled(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: boolean isSlidingEnabled()
com.devil.openvideo.slidingmenu.SlidingMenu: void setMode(int)
com.devil.openvideo.slidingmenu.SlidingMenu: int getMode()
com.devil.openvideo.slidingmenu.SlidingMenu: void setStatic(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: void showMenu()
com.devil.openvideo.slidingmenu.SlidingMenu: void showMenu(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: void showSecondaryMenu()
com.devil.openvideo.slidingmenu.SlidingMenu: void showSecondaryMenu(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: void showContent()
com.devil.openvideo.slidingmenu.SlidingMenu: void showContent(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: void toggle()
com.devil.openvideo.slidingmenu.SlidingMenu: void toggle(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: boolean isMenuShowing()
com.devil.openvideo.slidingmenu.SlidingMenu: boolean isSecondaryMenuShowing()
com.devil.openvideo.slidingmenu.SlidingMenu: int getBehindOffset()
com.devil.openvideo.slidingmenu.SlidingMenu: void setBehindOffset(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setBehindOffsetRes(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setAboveOffset(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setAboveOffsetRes(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setBehindWidth(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setBehindWidthRes(int)
com.devil.openvideo.slidingmenu.SlidingMenu: float getBehindScrollScale()
com.devil.openvideo.slidingmenu.SlidingMenu: int getTouchmodeMarginThreshold()
com.devil.openvideo.slidingmenu.SlidingMenu: void setTouchmodeMarginThreshold(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setBehindScrollScale(float)
com.devil.openvideo.slidingmenu.SlidingMenu: void setBehindCanvasTransformer(com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer)
com.devil.openvideo.slidingmenu.SlidingMenu: int getTouchModeAbove()
com.devil.openvideo.slidingmenu.SlidingMenu: void setTouchModeAbove(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setTouchModeBehind(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setShadowDrawable(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setShadowDrawable(android.graphics.drawable.Drawable)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSecondaryShadowDrawable(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSecondaryShadowDrawable(android.graphics.drawable.Drawable)
com.devil.openvideo.slidingmenu.SlidingMenu: void setShadowWidthRes(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setShadowWidth(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setFadeEnabled(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: void setFadeDegree(float)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSelectorEnabled(boolean)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSelectedView(android.view.View)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSelectorDrawable(int)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSelectorBitmap(android.graphics.Bitmap)
com.devil.openvideo.slidingmenu.SlidingMenu: void addIgnoredView(android.view.View)
com.devil.openvideo.slidingmenu.SlidingMenu: void removeIgnoredView(android.view.View)
com.devil.openvideo.slidingmenu.SlidingMenu: void clearIgnoredViews()
com.devil.openvideo.slidingmenu.SlidingMenu: void setOnOpenListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener)
com.devil.openvideo.slidingmenu.SlidingMenu: void setSecondaryOnOpenListner(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener)
com.devil.openvideo.slidingmenu.SlidingMenu: void setOnCloseListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener)
com.devil.openvideo.slidingmenu.SlidingMenu: void setOnOpenedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener)
com.devil.openvideo.slidingmenu.SlidingMenu: void setOnClosedListener(com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener)
com.devil.openvideo.slidingmenu.SlidingMenu: android.os.Parcelable onSaveInstanceState()
com.devil.openvideo.slidingmenu.SlidingMenu: void onRestoreInstanceState(android.os.Parcelable)
com.devil.openvideo.slidingmenu.SlidingMenu: boolean fitSystemWindows(android.graphics.Rect)
com.devil.openvideo.slidingmenu.SlidingMenu: void manageLayers(float)
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener access$0(com.devil.openvideo.slidingmenu.SlidingMenu)
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener access$1(com.devil.openvideo.slidingmenu.SlidingMenu)
com.devil.openvideo.slidingmenu.SlidingMenu: com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener access$2(com.devil.openvideo.slidingmenu.SlidingMenu)
com.devil.openvideo.slidingmenu.SlidingMenu: java.lang.String access$3()
com.devil.openvideo.slidingmenu.SlidingMenu$1
com.devil.openvideo.slidingmenu.SlidingMenu$1: int POSITION_OPEN
com.devil.openvideo.slidingmenu.SlidingMenu$1: int POSITION_CLOSE
com.devil.openvideo.slidingmenu.SlidingMenu$1: int POSITION_SECONDARY_OPEN
com.devil.openvideo.slidingmenu.SlidingMenu$1: com.devil.openvideo.slidingmenu.SlidingMenu this$0
com.devil.openvideo.slidingmenu.SlidingMenu$1: SlidingMenu$1(com.devil.openvideo.slidingmenu.SlidingMenu)
com.devil.openvideo.slidingmenu.SlidingMenu$1: void onPageScrolled(int,float,int)
com.devil.openvideo.slidingmenu.SlidingMenu$1: void onPageSelected(int)
com.devil.openvideo.slidingmenu.SlidingMenu$2
com.devil.openvideo.slidingmenu.SlidingMenu$2: com.devil.openvideo.slidingmenu.SlidingMenu this$0
com.devil.openvideo.slidingmenu.SlidingMenu$2: int val$layerType
com.devil.openvideo.slidingmenu.SlidingMenu$2: SlidingMenu$2(com.devil.openvideo.slidingmenu.SlidingMenu,int)
com.devil.openvideo.slidingmenu.SlidingMenu$2: void run()
com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer
com.devil.openvideo.slidingmenu.SlidingMenu$CanvasTransformer: void transformCanvas(android.graphics.Canvas,float)
com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener
com.devil.openvideo.slidingmenu.SlidingMenu$OnCloseListener: void onClose()
com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener
com.devil.openvideo.slidingmenu.SlidingMenu$OnClosedListener: void onClosed()
com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener
com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenListener: void onOpen()
com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener
com.devil.openvideo.slidingmenu.SlidingMenu$OnOpenedListener: void onOpened()
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: int mItem
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: android.os.Parcelable$Creator CREATOR
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: void <clinit>()
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: SlidingMenu$SavedState(android.os.Parcelable,int)
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: SlidingMenu$SavedState(android.os.Parcel)
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: int getItem()
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: void writeToParcel(android.os.Parcel,int)
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState: SlidingMenu$SavedState(android.os.Parcel,com.devil.openvideo.slidingmenu.SlidingMenu$SavedState)
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1: SlidingMenu$SavedState$1()
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1: com.devil.openvideo.slidingmenu.SlidingMenu$SavedState createFromParcel(android.os.Parcel)
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1: com.devil.openvideo.slidingmenu.SlidingMenu$SavedState[] newArray(int)
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.devil.openvideo.slidingmenu.SlidingMenu$SavedState$1: java.lang.Object[] newArray(int)
com.devil.openvideo.slidingmenu.app.SlidingActivity
com.devil.openvideo.slidingmenu.app.SlidingActivity: com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper
com.devil.openvideo.slidingmenu.app.SlidingActivity: SlidingActivity()
com.devil.openvideo.slidingmenu.app.SlidingActivity: void onCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void onPostCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingActivity: android.view.View findViewById(int)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void onSaveInstanceState(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void setContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void setContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void setBehindContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void setBehindContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingActivity: void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingActivity: com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivity: void toggle()
com.devil.openvideo.slidingmenu.app.SlidingActivity: void showContent()
com.devil.openvideo.slidingmenu.app.SlidingActivity: void showMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivity: void showSecondaryMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivity: void setSlidingActionBarEnabled(boolean)
com.devil.openvideo.slidingmenu.app.SlidingActivity: boolean onKeyUp(int,android.view.KeyEvent)
com.devil.openvideo.slidingmenu.app.SlidingActivityBase
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void setBehindContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void setBehindContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void toggle()
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void showContent()
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void showMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void showSecondaryMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivityBase: void setSlidingActionBarEnabled(boolean)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: android.app.Activity mActivity
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: com.devil.openvideo.slidingmenu.SlidingMenu mSlidingMenu
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: android.view.View mViewAbove
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: android.view.View mViewBehind
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: boolean mBroadcasting
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: boolean mOnPostCreateCalled
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: boolean mEnableSlide
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: SlidingActivityHelper(android.app.Activity)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void onCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void onPostCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void setSlidingActionBarEnabled(boolean)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: android.view.View findViewById(int)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void onSaveInstanceState(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void setContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void toggle()
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void showContent()
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void showMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: void showSecondaryMenu()
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: boolean onKeyUp(int,android.view.KeyEvent)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper: com.devil.openvideo.slidingmenu.SlidingMenu access$0(com.devil.openvideo.slidingmenu.app.SlidingActivityHelper)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1: com.devil.openvideo.slidingmenu.app.SlidingActivityHelper this$0
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1: boolean val$open
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1: boolean val$secondary
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1: SlidingActivityHelper$1(com.devil.openvideo.slidingmenu.app.SlidingActivityHelper,boolean,boolean)
com.devil.openvideo.slidingmenu.app.SlidingActivityHelper$1: void run()
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: SlidingFragmentActivity()
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void onCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void onPostCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: android.view.View findViewById(int)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void onSaveInstanceState(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void setContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void setContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void setBehindContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void setBehindContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu()
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void toggle()
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void showContent()
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void showMenu()
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void showSecondaryMenu()
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: void setSlidingActionBarEnabled(boolean)
com.devil.openvideo.slidingmenu.app.SlidingFragmentActivity: boolean onKeyUp(int,android.view.KeyEvent)
com.devil.openvideo.slidingmenu.app.SlidingListActivity
com.devil.openvideo.slidingmenu.app.SlidingListActivity: com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper
com.devil.openvideo.slidingmenu.app.SlidingListActivity: SlidingListActivity()
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void onCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void onPostCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: android.view.View findViewById(int)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void onSaveInstanceState(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void setContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void setContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void setBehindContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void setBehindContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu()
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void toggle()
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void showContent()
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void showMenu()
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void showSecondaryMenu()
com.devil.openvideo.slidingmenu.app.SlidingListActivity: void setSlidingActionBarEnabled(boolean)
com.devil.openvideo.slidingmenu.app.SlidingListActivity: boolean onKeyUp(int,android.view.KeyEvent)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: com.devil.openvideo.slidingmenu.app.SlidingActivityHelper mHelper
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: SlidingPreferenceActivity()
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void onCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void onPostCreate(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: android.view.View findViewById(int)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void onSaveInstanceState(android.os.Bundle)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void setContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void setContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void setBehindContentView(int)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void setBehindContentView(android.view.View)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: com.devil.openvideo.slidingmenu.SlidingMenu getSlidingMenu()
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void toggle()
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void showContent()
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void showMenu()
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void showSecondaryMenu()
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: void setSlidingActionBarEnabled(boolean)
com.devil.openvideo.slidingmenu.app.SlidingPreferenceActivity: boolean onKeyUp(int,android.view.KeyEvent)
com.devil.openvideo.view.MultiSwipeRefreshLayout
com.devil.openvideo.view.MultiSwipeRefreshLayout: MultiSwipeRefreshLayout(android.content.Context)
com.devil.openvideo.view.MultiSwipeRefreshLayout: MultiSwipeRefreshLayout(android.content.Context,android.util.AttributeSet)
com.devil.openvideo.view.MultiSwipeRefreshLayout: void setSwipeableChildren(int[])
io.vov.vitamio.EGL
io.vov.vitamio.EGL: javax.microedition.khronos.egl.EGL10 mEgl
io.vov.vitamio.EGL: javax.microedition.khronos.egl.EGLDisplay mEglDisplay
io.vov.vitamio.EGL: javax.microedition.khronos.egl.EGLSurface mEglSurface
io.vov.vitamio.EGL: javax.microedition.khronos.egl.EGLConfig mEglConfig
io.vov.vitamio.EGL: javax.microedition.khronos.egl.EGLContext mEglContext
io.vov.vitamio.EGL: io.vov.vitamio.EGL$EGLConfigChooser mEGLConfigChooser
io.vov.vitamio.EGL: io.vov.vitamio.EGL$EGLContextFactory mEGLContextFactory
io.vov.vitamio.EGL: io.vov.vitamio.EGL$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory
io.vov.vitamio.EGL: EGL()
io.vov.vitamio.EGL: boolean initialize(android.view.Surface)
io.vov.vitamio.EGL: void release()
io.vov.vitamio.EGL: void start()
io.vov.vitamio.EGL: javax.microedition.khronos.opengles.GL createSurface(android.view.Surface)
io.vov.vitamio.EGL: boolean swap()
io.vov.vitamio.EGL: void destroySurface()
io.vov.vitamio.EGL: void finish()
io.vov.vitamio.EGL: void throwEglException(java.lang.String)
io.vov.vitamio.EGL: void throwEglException(java.lang.String,int)
io.vov.vitamio.EGL$ComponentSizeChooser
io.vov.vitamio.EGL$ComponentSizeChooser: int mRedSize
io.vov.vitamio.EGL$ComponentSizeChooser: int mGreenSize
io.vov.vitamio.EGL$ComponentSizeChooser: int mBlueSize
io.vov.vitamio.EGL$ComponentSizeChooser: int mAlphaSize
io.vov.vitamio.EGL$ComponentSizeChooser: int mDepthSize
io.vov.vitamio.EGL$ComponentSizeChooser: int mStencilSize
io.vov.vitamio.EGL$ComponentSizeChooser: int[] mValue
io.vov.vitamio.EGL$ComponentSizeChooser: io.vov.vitamio.EGL this$0
io.vov.vitamio.EGL$ComponentSizeChooser: EGL$ComponentSizeChooser(io.vov.vitamio.EGL,int,int,int,int,int,int)
io.vov.vitamio.EGL$ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
io.vov.vitamio.EGL$ComponentSizeChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
io.vov.vitamio.EGL$EGLConfigChooser
io.vov.vitamio.EGL$EGLConfigChooser: int[] mConfigSpec
io.vov.vitamio.EGL$EGLConfigChooser: io.vov.vitamio.EGL this$0
io.vov.vitamio.EGL$EGLConfigChooser: EGL$EGLConfigChooser(io.vov.vitamio.EGL,int[])
io.vov.vitamio.EGL$EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
io.vov.vitamio.EGL$EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
io.vov.vitamio.EGL$EGLConfigChooser: int[] filterConfigSpec(int[])
io.vov.vitamio.EGL$EGLContextFactory
io.vov.vitamio.EGL$EGLContextFactory: int EGL_CONTEXT_CLIENT_VERSION
io.vov.vitamio.EGL$EGLContextFactory: io.vov.vitamio.EGL this$0
io.vov.vitamio.EGL$EGLContextFactory: EGL$EGLContextFactory(io.vov.vitamio.EGL)
io.vov.vitamio.EGL$EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
io.vov.vitamio.EGL$EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
io.vov.vitamio.EGL$EGLContextFactory: EGL$EGLContextFactory(io.vov.vitamio.EGL,io.vov.vitamio.EGL$EGLContextFactory)
io.vov.vitamio.EGL$EGLWindowSurfaceFactory
io.vov.vitamio.EGL$EGLWindowSurfaceFactory: EGL$EGLWindowSurfaceFactory()
io.vov.vitamio.EGL$EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)
io.vov.vitamio.EGL$EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)
io.vov.vitamio.EGL$EGLWindowSurfaceFactory: EGL$EGLWindowSurfaceFactory(io.vov.vitamio.EGL$EGLWindowSurfaceFactory)
io.vov.vitamio.EGL$SimpleEGLConfigChooser
io.vov.vitamio.EGL$SimpleEGLConfigChooser: io.vov.vitamio.EGL this$0
io.vov.vitamio.EGL$SimpleEGLConfigChooser: EGL$SimpleEGLConfigChooser(io.vov.vitamio.EGL)
io.vov.vitamio.LibsChecker
io.vov.vitamio.LibsChecker: java.lang.String FROM_ME
io.vov.vitamio.LibsChecker: LibsChecker()
io.vov.vitamio.LibsChecker: boolean checkVitamioLibs(android.app.Activity)
io.vov.vitamio.MediaFile
io.vov.vitamio.MediaFile: java.lang.String sFileExtensions
io.vov.vitamio.MediaFile: int FILE_TYPE_MP3
io.vov.vitamio.MediaFile: int FILE_TYPE_M4A
io.vov.vitamio.MediaFile: int FILE_TYPE_WAV
io.vov.vitamio.MediaFile: int FILE_TYPE_AMR
io.vov.vitamio.MediaFile: int FILE_TYPE_AWB
io.vov.vitamio.MediaFile: int FILE_TYPE_WMA
io.vov.vitamio.MediaFile: int FILE_TYPE_OGG
io.vov.vitamio.MediaFile: int FILE_TYPE_AAC
io.vov.vitamio.MediaFile: int FILE_TYPE_MKA
io.vov.vitamio.MediaFile: int FILE_TYPE_MID
io.vov.vitamio.MediaFile: int FILE_TYPE_SMF
io.vov.vitamio.MediaFile: int FILE_TYPE_IMY
io.vov.vitamio.MediaFile: int FILE_TYPE_APE
io.vov.vitamio.MediaFile: int FILE_TYPE_FLAC
io.vov.vitamio.MediaFile: int FIRST_AUDIO_FILE_TYPE
io.vov.vitamio.MediaFile: int LAST_AUDIO_FILE_TYPE
io.vov.vitamio.MediaFile: int FILE_TYPE_MP4
io.vov.vitamio.MediaFile: int FILE_TYPE_M4V
io.vov.vitamio.MediaFile: int FILE_TYPE_3GPP
io.vov.vitamio.MediaFile: int FILE_TYPE_3GPP2
io.vov.vitamio.MediaFile: int FILE_TYPE_WMV
io.vov.vitamio.MediaFile: int FILE_TYPE_ASF
io.vov.vitamio.MediaFile: int FILE_TYPE_MKV
io.vov.vitamio.MediaFile: int FILE_TYPE_MP2TS
io.vov.vitamio.MediaFile: int FILE_TYPE_FLV
io.vov.vitamio.MediaFile: int FILE_TYPE_MOV
io.vov.vitamio.MediaFile: int FILE_TYPE_RM
io.vov.vitamio.MediaFile: int FILE_TYPE_DVD
io.vov.vitamio.MediaFile: int FILE_TYPE_DIVX
io.vov.vitamio.MediaFile: int FILE_TYPE_OGV
io.vov.vitamio.MediaFile: int FILE_TYPE_VIVO
io.vov.vitamio.MediaFile: int FILE_TYPE_WTV
io.vov.vitamio.MediaFile: int FILE_TYPE_AVS
io.vov.vitamio.MediaFile: int FILE_TYPE_SWF
io.vov.vitamio.MediaFile: int FILE_TYPE_RAW
io.vov.vitamio.MediaFile: int FIRST_VIDEO_FILE_TYPE
io.vov.vitamio.MediaFile: int LAST_VIDEO_FILE_TYPE
io.vov.vitamio.MediaFile: java.util.HashMap sFileTypeMap
io.vov.vitamio.MediaFile: java.util.HashMap sMimeTypeMap
io.vov.vitamio.MediaFile: void <clinit>()
io.vov.vitamio.MediaFile: MediaFile()
io.vov.vitamio.MediaFile: void addFileType(java.lang.String,int,java.lang.String)
io.vov.vitamio.MediaFile: boolean isAudioFileType(int)
io.vov.vitamio.MediaFile: boolean isVideoFileType(int)
io.vov.vitamio.MediaFile: io.vov.vitamio.MediaFile$MediaFileType getFileType(java.lang.String)
io.vov.vitamio.MediaFile: int getFileTypeForMimeType(java.lang.String)
io.vov.vitamio.MediaFile$MediaFileType
io.vov.vitamio.MediaFile$MediaFileType: int fileType
io.vov.vitamio.MediaFile$MediaFileType: java.lang.String mimeType
io.vov.vitamio.MediaFile$MediaFileType: MediaFile$MediaFileType(int,java.lang.String)
io.vov.vitamio.MediaFormat
io.vov.vitamio.MediaFormat: java.util.Map mMap
io.vov.vitamio.MediaFormat: java.lang.String KEY_MIME
io.vov.vitamio.MediaFormat: java.lang.String KEY_LANGUAGE
io.vov.vitamio.MediaFormat: java.lang.String KEY_TITLE
io.vov.vitamio.MediaFormat: java.lang.String KEY_PATH
io.vov.vitamio.MediaFormat: java.lang.String KEY_SAMPLE_RATE
io.vov.vitamio.MediaFormat: java.lang.String KEY_CHANNEL_COUNT
io.vov.vitamio.MediaFormat: java.lang.String KEY_WIDTH
io.vov.vitamio.MediaFormat: java.lang.String KEY_HEIGHT
io.vov.vitamio.MediaFormat: java.lang.String KEY_MAX_WIDTH
io.vov.vitamio.MediaFormat: java.lang.String KEY_MAX_HEIGHT
io.vov.vitamio.MediaFormat: java.lang.String KEY_MAX_INPUT_SIZE
io.vov.vitamio.MediaFormat: java.lang.String KEY_BIT_RATE
io.vov.vitamio.MediaFormat: java.lang.String KEY_COLOR_FORMAT
io.vov.vitamio.MediaFormat: java.lang.String KEY_FRAME_RATE
io.vov.vitamio.MediaFormat: java.lang.String KEY_I_FRAME_INTERVAL
io.vov.vitamio.MediaFormat: java.lang.String KEY_STRIDE
io.vov.vitamio.MediaFormat: java.lang.String KEY_SLICE_HEIGHT
io.vov.vitamio.MediaFormat: java.lang.String KEY_REPEAT_PREVIOUS_FRAME_AFTER
io.vov.vitamio.MediaFormat: java.lang.String KEY_PUSH_BLANK_BUFFERS_ON_STOP
io.vov.vitamio.MediaFormat: java.lang.String KEY_DURATION
io.vov.vitamio.MediaFormat: java.lang.String KEY_IS_ADTS
io.vov.vitamio.MediaFormat: java.lang.String KEY_CHANNEL_MASK
io.vov.vitamio.MediaFormat: java.lang.String KEY_AAC_PROFILE
io.vov.vitamio.MediaFormat: java.lang.String KEY_FLAC_COMPRESSION_LEVEL
io.vov.vitamio.MediaFormat: java.lang.String KEY_IS_AUTOSELECT
io.vov.vitamio.MediaFormat: java.lang.String KEY_IS_DEFAULT
io.vov.vitamio.MediaFormat: java.lang.String KEY_IS_FORCED_SUBTITLE
io.vov.vitamio.MediaFormat: MediaFormat(java.util.Map)
io.vov.vitamio.MediaFormat: MediaFormat()
io.vov.vitamio.MediaFormat: java.util.Map getMap()
io.vov.vitamio.MediaFormat: boolean containsKey(java.lang.String)
io.vov.vitamio.MediaFormat: int getInteger(java.lang.String)
io.vov.vitamio.MediaFormat: int getInteger(java.lang.String,int)
io.vov.vitamio.MediaFormat: long getLong(java.lang.String)
io.vov.vitamio.MediaFormat: float getFloat(java.lang.String)
io.vov.vitamio.MediaFormat: java.lang.String getString(java.lang.String)
io.vov.vitamio.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)
io.vov.vitamio.MediaFormat: void setInteger(java.lang.String,int)
io.vov.vitamio.MediaFormat: void setLong(java.lang.String,long)
io.vov.vitamio.MediaFormat: void setFloat(java.lang.String,float)
io.vov.vitamio.MediaFormat: void setString(java.lang.String,java.lang.String)
io.vov.vitamio.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)
io.vov.vitamio.MediaFormat: io.vov.vitamio.MediaFormat createAudioFormat(java.lang.String,int,int)
io.vov.vitamio.MediaFormat: io.vov.vitamio.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)
io.vov.vitamio.MediaFormat: io.vov.vitamio.MediaFormat createVideoFormat(java.lang.String,int,int)
io.vov.vitamio.MediaFormat: java.lang.String toString()
io.vov.vitamio.MediaMetadataRetriever
io.vov.vitamio.MediaMetadataRetriever: android.content.res.AssetFileDescriptor mFD
io.vov.vitamio.MediaMetadataRetriever: int mNativeContext
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_ALBUM
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_ALBUM_ARTIST
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_ARTIST
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_COMMENT
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_AUTHOR
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_COMPOSER
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_COPYRIGHT
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_CREATION_TIME
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_DATE
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_DISC
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_ENCODER
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_ENCODED_BY
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_FILENAME
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_GENRE
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_LANGUAGE
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_PERFORMER
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_PUBLISHER
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_SERVICE_NAME
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_SERVICE_PROVIDER
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_TITLE
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_TRACK
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_VARIANT_BITRATE
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_DURATION
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_AUDIO_CODEC
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_VIDEO_CODEC
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_VIDEO_ROTATION
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_VIDEO_WIDTH
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_VIDEO_HEIGHT
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_NUM_TRACKS
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_HAS_AUDIO
io.vov.vitamio.MediaMetadataRetriever: java.lang.String METADATA_KEY_HAS_VIDEO
io.vov.vitamio.MediaMetadataRetriever: void <clinit>()
io.vov.vitamio.MediaMetadataRetriever: MediaMetadataRetriever(android.content.Context)
io.vov.vitamio.MediaMetadataRetriever: boolean loadFFmpeg_native(java.lang.String)
io.vov.vitamio.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)
io.vov.vitamio.MediaMetadataRetriever: void setDataSource(java.lang.String)
io.vov.vitamio.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)
io.vov.vitamio.MediaMetadataRetriever: java.lang.String extractMetadata(java.lang.String)
io.vov.vitamio.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)
io.vov.vitamio.MediaMetadataRetriever: byte[] getEmbeddedPicture()
io.vov.vitamio.MediaMetadataRetriever: void _release()
io.vov.vitamio.MediaMetadataRetriever: void native_setup()
io.vov.vitamio.MediaMetadataRetriever: void native_init()
io.vov.vitamio.MediaMetadataRetriever: void native_finalize()
io.vov.vitamio.MediaMetadataRetriever: void release()
io.vov.vitamio.MediaMetadataRetriever: void finalize()
io.vov.vitamio.MediaMetadataRetriever: void closeFD()
io.vov.vitamio.MediaPlayer
io.vov.vitamio.MediaPlayer: int CACHE_TYPE_NOT_AVAILABLE
io.vov.vitamio.MediaPlayer: int CACHE_TYPE_START
io.vov.vitamio.MediaPlayer: int CACHE_TYPE_UPDATE
io.vov.vitamio.MediaPlayer: int CACHE_TYPE_SPEED
io.vov.vitamio.MediaPlayer: int CACHE_TYPE_COMPLETE
io.vov.vitamio.MediaPlayer: int CACHE_INFO_NO_SPACE
io.vov.vitamio.MediaPlayer: int CACHE_INFO_STREAM_NOT_SUPPORT
io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_UNKNOWN
io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK
io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_IO
io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_MALFORMED
io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_UNSUPPORTED
io.vov.vitamio.MediaPlayer: int MEDIA_ERROR_TIMED_OUT
io.vov.vitamio.MediaPlayer: int MEDIA_INFO_VIDEO_TRACK_LAGGING
io.vov.vitamio.MediaPlayer: int MEDIA_INFO_BUFFERING_START
io.vov.vitamio.MediaPlayer: int MEDIA_INFO_BUFFERING_END
io.vov.vitamio.MediaPlayer: int MEDIA_INFO_NOT_SEEKABLE
io.vov.vitamio.MediaPlayer: int MEDIA_INFO_DOWNLOAD_RATE_CHANGED
io.vov.vitamio.MediaPlayer: int VIDEOQUALITY_LOW
io.vov.vitamio.MediaPlayer: int VIDEOQUALITY_MEDIUM
io.vov.vitamio.MediaPlayer: int VIDEOQUALITY_HIGH
io.vov.vitamio.MediaPlayer: int VIDEOCHROMA_RGB565
io.vov.vitamio.MediaPlayer: int VIDEOCHROMA_RGBA
io.vov.vitamio.MediaPlayer: int SUBTITLE_INTERNAL
io.vov.vitamio.MediaPlayer: int SUBTITLE_EXTERNAL
io.vov.vitamio.MediaPlayer: java.lang.String[] SUB_TYPES
io.vov.vitamio.MediaPlayer: int MEDIA_NOP
io.vov.vitamio.MediaPlayer: int MEDIA_PREPARED
io.vov.vitamio.MediaPlayer: int MEDIA_PLAYBACK_COMPLETE
io.vov.vitamio.MediaPlayer: int MEDIA_BUFFERING_UPDATE
io.vov.vitamio.MediaPlayer: int MEDIA_SEEK_COMPLETE
io.vov.vitamio.MediaPlayer: int MEDIA_SET_VIDEO_SIZE
io.vov.vitamio.MediaPlayer: int MEDIA_ERROR
io.vov.vitamio.MediaPlayer: int MEDIA_INFO
io.vov.vitamio.MediaPlayer: int MEDIA_CACHE
io.vov.vitamio.MediaPlayer: int MEDIA_HW_ERROR
io.vov.vitamio.MediaPlayer: int MEDIA_TIMED_TEXT
io.vov.vitamio.MediaPlayer: int MEDIA_CACHING_UPDATE
io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_CACHING_SEGMENTS
io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_CACHING_TYPE
io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_CACHING_INFO
io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_SUBTITLE_STRING
io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_SUBTITLE_BYTES
io.vov.vitamio.MediaPlayer: java.lang.String MEDIA_SUBTITLE_TYPE
io.vov.vitamio.MediaPlayer: int SUBTITLE_TEXT
io.vov.vitamio.MediaPlayer: int SUBTITLE_BITMAP
io.vov.vitamio.MediaPlayer: java.util.concurrent.atomic.AtomicBoolean NATIVE_OMX_LOADED
io.vov.vitamio.MediaPlayer: android.content.Context mContext
io.vov.vitamio.MediaPlayer: android.view.Surface mSurface
io.vov.vitamio.MediaPlayer: android.view.SurfaceHolder mSurfaceHolder
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$EventHandler mEventHandler
io.vov.vitamio.MediaPlayer: android.os.PowerManager$WakeLock mWakeLock
io.vov.vitamio.MediaPlayer: boolean mScreenOnWhilePlaying
io.vov.vitamio.MediaPlayer: boolean mStayAwake
io.vov.vitamio.MediaPlayer: io.vov.vitamio.Metadata mMeta
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$TrackInfo[] mInbandTracks
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$TrackInfo mOutOfBandTracks
io.vov.vitamio.MediaPlayer: android.content.res.AssetFileDescriptor mFD
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener mOnHWRenderFailedListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnCachingUpdateListener mOnCachingUpdateListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnTimedTextListener mOnTimedTextListener
io.vov.vitamio.MediaPlayer: android.media.AudioTrack mAudioTrack
io.vov.vitamio.MediaPlayer: int mAudioTrackBufferSize
io.vov.vitamio.MediaPlayer: android.view.Surface mLocalSurface
io.vov.vitamio.MediaPlayer: android.graphics.Bitmap mBitmap
io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer mByteBuffer
io.vov.vitamio.MediaPlayer: void <clinit>()
io.vov.vitamio.MediaPlayer: MediaPlayer(android.content.Context)
io.vov.vitamio.MediaPlayer: MediaPlayer(android.content.Context,boolean)
io.vov.vitamio.MediaPlayer: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
io.vov.vitamio.MediaPlayer: boolean loadVAO_native(java.lang.String)
io.vov.vitamio.MediaPlayer: boolean loadVVO_native(java.lang.String)
io.vov.vitamio.MediaPlayer: boolean loadOMX_native(java.lang.String)
io.vov.vitamio.MediaPlayer: void unloadOMX_native()
io.vov.vitamio.MediaPlayer: boolean loadFFmpeg_native(java.lang.String)
io.vov.vitamio.MediaPlayer: void _setVideoSurface(android.view.Surface)
io.vov.vitamio.MediaPlayer: void setDisplay(android.view.SurfaceHolder)
io.vov.vitamio.MediaPlayer: void setSurface(android.view.Surface)
io.vov.vitamio.MediaPlayer: void setDataSource(java.lang.String)
io.vov.vitamio.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)
io.vov.vitamio.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)
io.vov.vitamio.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)
io.vov.vitamio.MediaPlayer: void setDataSource(java.lang.String,java.lang.String[],java.lang.String[])
io.vov.vitamio.MediaPlayer: void setDataSegments(java.lang.String[],java.lang.String)
io.vov.vitamio.MediaPlayer: void setOnHWRenderFailedListener(io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener)
io.vov.vitamio.MediaPlayer: void _setDataSource(java.lang.String,java.lang.String[],java.lang.String[])
io.vov.vitamio.MediaPlayer: void setDataSource(java.io.FileDescriptor)
io.vov.vitamio.MediaPlayer: void _setDataSegmentsSource(java.lang.String[],java.lang.String)
io.vov.vitamio.MediaPlayer: void prepare()
io.vov.vitamio.MediaPlayer: void prepareAsync()
io.vov.vitamio.MediaPlayer: void start()
io.vov.vitamio.MediaPlayer: void _start()
io.vov.vitamio.MediaPlayer: void stop()
io.vov.vitamio.MediaPlayer: void _stop()
io.vov.vitamio.MediaPlayer: void pause()
io.vov.vitamio.MediaPlayer: void _pause()
io.vov.vitamio.MediaPlayer: void setWakeMode(android.content.Context,int)
io.vov.vitamio.MediaPlayer: void setScreenOnWhilePlaying(boolean)
io.vov.vitamio.MediaPlayer: void stayAwake(boolean)
io.vov.vitamio.MediaPlayer: void updateSurfaceScreenOn()
io.vov.vitamio.MediaPlayer: int getVideoWidth()
io.vov.vitamio.MediaPlayer: int getVideoWidth_a()
io.vov.vitamio.MediaPlayer: int getVideoHeight()
io.vov.vitamio.MediaPlayer: int getVideoHeight_a()
io.vov.vitamio.MediaPlayer: boolean isPlaying()
io.vov.vitamio.MediaPlayer: void setUseCache(boolean)
io.vov.vitamio.MediaPlayer: void setCacheDirectory(java.lang.String)
io.vov.vitamio.MediaPlayer: void setAdaptiveStream(boolean)
io.vov.vitamio.MediaPlayer: void seekTo(long)
io.vov.vitamio.MediaPlayer: long getCurrentPosition()
io.vov.vitamio.MediaPlayer: android.graphics.Bitmap getCurrentFrame()
io.vov.vitamio.MediaPlayer: long getDuration()
io.vov.vitamio.MediaPlayer: io.vov.vitamio.Metadata getMetadata()
io.vov.vitamio.MediaPlayer: void release()
io.vov.vitamio.MediaPlayer: void _release()
io.vov.vitamio.MediaPlayer: void reset()
io.vov.vitamio.MediaPlayer: void _reset()
io.vov.vitamio.MediaPlayer: void closeFD()
io.vov.vitamio.MediaPlayer: void setLooping(boolean)
io.vov.vitamio.MediaPlayer: boolean isLooping()
io.vov.vitamio.MediaPlayer: void setAudioAmplify(float)
io.vov.vitamio.MediaPlayer: void setVolume(float,float)
io.vov.vitamio.MediaPlayer: boolean native_getTrackInfo(android.util.SparseArray)
io.vov.vitamio.MediaPlayer: boolean native_getMetadata(java.util.Map)
io.vov.vitamio.MediaPlayer: void native_init()
io.vov.vitamio.MediaPlayer: void native_finalize()
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$TrackInfo[] getTrackInfo(java.lang.String)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$TrackInfo[] getInbandTrackInfo(java.lang.String)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$TrackInfo[] getTrackInfo()
io.vov.vitamio.MediaPlayer: android.util.SparseArray parseTrackInfo(byte[],java.lang.String)
io.vov.vitamio.MediaPlayer: android.util.SparseArray findTrackFromTrackInfo(int,io.vov.vitamio.MediaPlayer$TrackInfo[])
io.vov.vitamio.MediaPlayer: void addTimedTextSource(java.lang.String)
io.vov.vitamio.MediaPlayer: void selectTrack(int)
io.vov.vitamio.MediaPlayer: void deselectTrack(int)
io.vov.vitamio.MediaPlayer: void selectOrDeselectBandTrack(int,boolean)
io.vov.vitamio.MediaPlayer: void selectOrDeselectTrack(int,boolean)
io.vov.vitamio.MediaPlayer: void finalize()
io.vov.vitamio.MediaPlayer: void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener)
io.vov.vitamio.MediaPlayer: void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener)
io.vov.vitamio.MediaPlayer: void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener)
io.vov.vitamio.MediaPlayer: void setOnCachingUpdateListener(io.vov.vitamio.MediaPlayer$OnCachingUpdateListener)
io.vov.vitamio.MediaPlayer: void updateCacheStatus(int,int,long[])
io.vov.vitamio.MediaPlayer: void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener)
io.vov.vitamio.MediaPlayer: void setOnVideoSizeChangedListener(io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener)
io.vov.vitamio.MediaPlayer: void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener)
io.vov.vitamio.MediaPlayer: void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener)
io.vov.vitamio.MediaPlayer: void setOnTimedTextListener(io.vov.vitamio.MediaPlayer$OnTimedTextListener)
io.vov.vitamio.MediaPlayer: void updateSub(int,byte[],java.lang.String,int,int)
io.vov.vitamio.MediaPlayer: void _releaseVideoSurface()
io.vov.vitamio.MediaPlayer: void releaseDisplay()
io.vov.vitamio.MediaPlayer: float getVideoAspectRatio()
io.vov.vitamio.MediaPlayer: void setVideoQuality(int)
io.vov.vitamio.MediaPlayer: void setVideoChroma(int)
io.vov.vitamio.MediaPlayer: void setDeinterlace(boolean)
io.vov.vitamio.MediaPlayer: void setBufferSize(long)
io.vov.vitamio.MediaPlayer: void setPlaybackSpeed(float)
io.vov.vitamio.MediaPlayer: boolean isBuffering()
io.vov.vitamio.MediaPlayer: int getBufferProgress()
io.vov.vitamio.MediaPlayer: java.lang.String getMetaEncoding()
io.vov.vitamio.MediaPlayer: void setMetaEncoding(java.lang.String)
io.vov.vitamio.MediaPlayer: int getAudioTrack()
io.vov.vitamio.MediaPlayer: int getVideoTrack()
io.vov.vitamio.MediaPlayer: void setTimedTextShown(boolean)
io.vov.vitamio.MediaPlayer: void setTimedTextEncoding(java.lang.String)
io.vov.vitamio.MediaPlayer: int getTimedTextLocation()
io.vov.vitamio.MediaPlayer: java.lang.String getTimedTextPath()
io.vov.vitamio.MediaPlayer: int getTimedTextTrack()
io.vov.vitamio.MediaPlayer: int audioTrackInit(int,int)
io.vov.vitamio.MediaPlayer: void audioTrackSetVolume(float,float)
io.vov.vitamio.MediaPlayer: void audioTrackWrite(byte[],int,int)
io.vov.vitamio.MediaPlayer: void audioTrackStart()
io.vov.vitamio.MediaPlayer: void audioTrackPause()
io.vov.vitamio.MediaPlayer: void audioTrackRelease()
io.vov.vitamio.MediaPlayer: java.nio.ByteBuffer surfaceInit()
io.vov.vitamio.MediaPlayer: void surfaceRender()
io.vov.vitamio.MediaPlayer: void surfaceRelease()
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnPreparedListener access$0(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnCompletionListener access$1(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: void access$2(io.vov.vitamio.MediaPlayer,boolean)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$3(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$4(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener access$5(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnErrorListener access$6(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnInfoListener access$7(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnTimedTextListener access$8(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnCachingUpdateListener access$9(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer: io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener access$10(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer$EventHandler
io.vov.vitamio.MediaPlayer$EventHandler: io.vov.vitamio.MediaPlayer mMediaPlayer
io.vov.vitamio.MediaPlayer$EventHandler: android.os.Bundle mData
io.vov.vitamio.MediaPlayer$EventHandler: io.vov.vitamio.MediaPlayer this$0
io.vov.vitamio.MediaPlayer$EventHandler: MediaPlayer$EventHandler(io.vov.vitamio.MediaPlayer,io.vov.vitamio.MediaPlayer,android.os.Looper)
io.vov.vitamio.MediaPlayer$EventHandler: void handleMessage(android.os.Message)
io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener
io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener: void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int)
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener: void onCachingUpdate(io.vov.vitamio.MediaPlayer,long[])
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener: void onCachingSpeed(io.vov.vitamio.MediaPlayer,int)
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener: void onCachingStart(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener: void onCachingComplete(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer$OnCachingUpdateListener: void onCachingNotAvailable(io.vov.vitamio.MediaPlayer,int)
io.vov.vitamio.MediaPlayer$OnCompletionListener
io.vov.vitamio.MediaPlayer$OnCompletionListener: void onCompletion(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer$OnErrorListener
io.vov.vitamio.MediaPlayer$OnErrorListener: boolean onError(io.vov.vitamio.MediaPlayer,int,int)
io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener
io.vov.vitamio.MediaPlayer$OnHWRenderFailedListener: void onFailed()
io.vov.vitamio.MediaPlayer$OnInfoListener
io.vov.vitamio.MediaPlayer$OnInfoListener: boolean onInfo(io.vov.vitamio.MediaPlayer,int,int)
io.vov.vitamio.MediaPlayer$OnPreparedListener
io.vov.vitamio.MediaPlayer$OnPreparedListener: void onPrepared(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer$OnSeekCompleteListener
io.vov.vitamio.MediaPlayer$OnSeekCompleteListener: void onSeekComplete(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.MediaPlayer$OnTimedTextListener
io.vov.vitamio.MediaPlayer$OnTimedTextListener: void onTimedText(java.lang.String)
io.vov.vitamio.MediaPlayer$OnTimedTextListener: void onTimedTextUpdate(byte[],int,int)
io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener
io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener: void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int)
io.vov.vitamio.MediaPlayer$TrackInfo
io.vov.vitamio.MediaPlayer$TrackInfo: int MEDIA_TRACK_TYPE_UNKNOWN
io.vov.vitamio.MediaPlayer$TrackInfo: int MEDIA_TRACK_TYPE_VIDEO
io.vov.vitamio.MediaPlayer$TrackInfo: int MEDIA_TRACK_TYPE_AUDIO
io.vov.vitamio.MediaPlayer$TrackInfo: int MEDIA_TRACK_TYPE_TIMEDTEXT
io.vov.vitamio.MediaPlayer$TrackInfo: int MEDIA_TRACK_TYPE_SUBTITLE
io.vov.vitamio.MediaPlayer$TrackInfo: int mTrackType
io.vov.vitamio.MediaPlayer$TrackInfo: android.util.SparseArray mTrackInfoArray
io.vov.vitamio.MediaPlayer$TrackInfo: MediaPlayer$TrackInfo(int,android.util.SparseArray)
io.vov.vitamio.MediaPlayer$TrackInfo: int getTrackType()
io.vov.vitamio.MediaPlayer$TrackInfo: android.util.SparseArray getTrackInfoArray()
io.vov.vitamio.MediaScanner
io.vov.vitamio.MediaScanner: java.lang.String[] VIDEO_PROJECTION
io.vov.vitamio.MediaScanner: int ID_VIDEO_COLUMN_INDEX
io.vov.vitamio.MediaScanner: int PATH_VIDEO_COLUMN_INDEX
io.vov.vitamio.MediaScanner: int DATE_MODIFIED_VIDEO_COLUMN_INDEX
io.vov.vitamio.MediaScanner: android.content.Context mContext
io.vov.vitamio.MediaScanner: android.content.ContentProviderClient mProvider
io.vov.vitamio.MediaScanner: boolean mCaseInsensitivePaths
io.vov.vitamio.MediaScanner: java.util.HashMap mFileCache
io.vov.vitamio.MediaScanner: io.vov.vitamio.MediaScanner$MyMediaScannerClient mClient
io.vov.vitamio.MediaScanner: void <clinit>()
io.vov.vitamio.MediaScanner: MediaScanner(android.content.Context)
io.vov.vitamio.MediaScanner: boolean loadFFmpeg_native(java.lang.String)
io.vov.vitamio.MediaScanner: void initialize()
io.vov.vitamio.MediaScanner: void prescan(java.lang.String)
io.vov.vitamio.MediaScanner: void postscan(java.lang.String[])
io.vov.vitamio.MediaScanner: boolean inScanDirectory(java.lang.String,java.lang.String[])
io.vov.vitamio.MediaScanner: void scanDirectories(java.lang.String[])
io.vov.vitamio.MediaScanner: android.net.Uri scanSingleFile(java.lang.String,java.lang.String)
io.vov.vitamio.MediaScanner: void processDirectory(java.lang.String,java.lang.String)
io.vov.vitamio.MediaScanner: boolean processFile(java.lang.String,java.lang.String)
io.vov.vitamio.MediaScanner: void native_init(io.vov.vitamio.MediaScannerClient)
io.vov.vitamio.MediaScanner: void release()
io.vov.vitamio.MediaScanner: void native_finalize()
io.vov.vitamio.MediaScanner: void finalize()
io.vov.vitamio.MediaScanner: boolean access$0(io.vov.vitamio.MediaScanner)
io.vov.vitamio.MediaScanner: java.util.HashMap access$1(io.vov.vitamio.MediaScanner)
io.vov.vitamio.MediaScanner: boolean access$2(io.vov.vitamio.MediaScanner,java.lang.String,java.lang.String)
io.vov.vitamio.MediaScanner: android.content.ContentProviderClient access$3(io.vov.vitamio.MediaScanner)
io.vov.vitamio.MediaScanner$FileCacheEntry
io.vov.vitamio.MediaScanner$FileCacheEntry: android.net.Uri mTableUri
io.vov.vitamio.MediaScanner$FileCacheEntry: long mRowId
io.vov.vitamio.MediaScanner$FileCacheEntry: java.lang.String mPath
io.vov.vitamio.MediaScanner$FileCacheEntry: long mLastModified
io.vov.vitamio.MediaScanner$FileCacheEntry: boolean mLastModifiedChanged
io.vov.vitamio.MediaScanner$FileCacheEntry: boolean mSeenInFileSystem
io.vov.vitamio.MediaScanner$FileCacheEntry: MediaScanner$FileCacheEntry(android.net.Uri,long,java.lang.String,long)
io.vov.vitamio.MediaScanner$FileCacheEntry: java.lang.String toString()
io.vov.vitamio.MediaScanner$MyMediaScannerClient
io.vov.vitamio.MediaScanner$MyMediaScannerClient: java.lang.String mMimeType
io.vov.vitamio.MediaScanner$MyMediaScannerClient: int mFileType
io.vov.vitamio.MediaScanner$MyMediaScannerClient: java.lang.String mPath
io.vov.vitamio.MediaScanner$MyMediaScannerClient: long mLastModified
io.vov.vitamio.MediaScanner$MyMediaScannerClient: long mFileSize
io.vov.vitamio.MediaScanner$MyMediaScannerClient: java.lang.String mTitle
io.vov.vitamio.MediaScanner$MyMediaScannerClient: java.lang.String mArtist
io.vov.vitamio.MediaScanner$MyMediaScannerClient: java.lang.String mAlbum
io.vov.vitamio.MediaScanner$MyMediaScannerClient: java.lang.String mLanguage
io.vov.vitamio.MediaScanner$MyMediaScannerClient: long mDuration
io.vov.vitamio.MediaScanner$MyMediaScannerClient: int mWidth
io.vov.vitamio.MediaScanner$MyMediaScannerClient: int mHeight
io.vov.vitamio.MediaScanner$MyMediaScannerClient: io.vov.vitamio.MediaScanner this$0
io.vov.vitamio.MediaScanner$MyMediaScannerClient: MediaScanner$MyMediaScannerClient(io.vov.vitamio.MediaScanner)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: io.vov.vitamio.MediaScanner$FileCacheEntry beginFile(java.lang.String,long,long)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: void scanFile(java.lang.String,long,long)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,long,long,boolean)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: int parseSubstring(java.lang.String,int,int)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: void handleStringTag(java.lang.String,byte[],java.lang.String)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: void setMimeType(java.lang.String)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: android.content.ContentValues toValues()
io.vov.vitamio.MediaScanner$MyMediaScannerClient: android.net.Uri endFile(io.vov.vitamio.MediaScanner$FileCacheEntry)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: void addNoMediaFolder(java.lang.String)
io.vov.vitamio.MediaScanner$MyMediaScannerClient: MediaScanner$MyMediaScannerClient(io.vov.vitamio.MediaScanner,io.vov.vitamio.MediaScanner$MyMediaScannerClient)
io.vov.vitamio.MediaScannerClient
io.vov.vitamio.MediaScannerClient: void scanFile(java.lang.String,long,long)
io.vov.vitamio.MediaScannerClient: void addNoMediaFolder(java.lang.String)
io.vov.vitamio.MediaScannerClient: void handleStringTag(java.lang.String,byte[],java.lang.String)
io.vov.vitamio.MediaScannerClient: void setMimeType(java.lang.String)
io.vov.vitamio.Metadata
io.vov.vitamio.Metadata: int ANY
io.vov.vitamio.Metadata: int TITLE
io.vov.vitamio.Metadata: int COMMENT
io.vov.vitamio.Metadata: int COPYRIGHT
io.vov.vitamio.Metadata: int ALBUM
io.vov.vitamio.Metadata: int ARTIST
io.vov.vitamio.Metadata: int AUTHOR
io.vov.vitamio.Metadata: int COMPOSER
io.vov.vitamio.Metadata: int GENRE
io.vov.vitamio.Metadata: int DATE
io.vov.vitamio.Metadata: int DURATION
io.vov.vitamio.Metadata: int CD_TRACK_NUM
io.vov.vitamio.Metadata: int CD_TRACK_MAX
io.vov.vitamio.Metadata: int RATING
io.vov.vitamio.Metadata: int ALBUM_ART
io.vov.vitamio.Metadata: int VIDEO_FRAME
io.vov.vitamio.Metadata: int LENGTH
io.vov.vitamio.Metadata: int BIT_RATE
io.vov.vitamio.Metadata: int AUDIO_BIT_RATE
io.vov.vitamio.Metadata: int VIDEO_BIT_RATE
io.vov.vitamio.Metadata: int AUDIO_SAMPLE_RATE
io.vov.vitamio.Metadata: int VIDEO_FRAME_RATE
io.vov.vitamio.Metadata: int MIME_TYPE
io.vov.vitamio.Metadata: int AUDIO_CODEC
io.vov.vitamio.Metadata: int VIDEO_CODEC
io.vov.vitamio.Metadata: int VIDEO_HEIGHT
io.vov.vitamio.Metadata: int VIDEO_WIDTH
io.vov.vitamio.Metadata: int NUM_TRACKS
io.vov.vitamio.Metadata: int DRM_CRIPPLED
io.vov.vitamio.Metadata: int PAUSE_AVAILABLE
io.vov.vitamio.Metadata: int SEEK_BACKWARD_AVAILABLE
io.vov.vitamio.Metadata: int SEEK_FORWARD_AVAILABLE
io.vov.vitamio.Metadata: int SEEK_AVAILABLE
io.vov.vitamio.Metadata: int LAST_SYSTEM
io.vov.vitamio.Metadata: int FIRST_CUSTOM
io.vov.vitamio.Metadata: android.util.SparseArray mMeta
io.vov.vitamio.Metadata: java.lang.String mEncoding
io.vov.vitamio.Metadata: Metadata()
io.vov.vitamio.Metadata: boolean parse(java.util.Map,java.lang.String)
io.vov.vitamio.Metadata: boolean has(int)
io.vov.vitamio.Metadata: java.lang.String getString(int)
io.vov.vitamio.Metadata: int getInt(int)
io.vov.vitamio.Metadata: boolean getBoolean(int)
io.vov.vitamio.Metadata: long getLong(int)
io.vov.vitamio.Metadata: double getDouble(int)
io.vov.vitamio.Metadata: byte[] getByteArray(int)
io.vov.vitamio.Metadata: boolean checkMetadataId(int)
io.vov.vitamio.R
io.vov.vitamio.R: R()
io.vov.vitamio.R$color
io.vov.vitamio.R$color: int mediacontroller_bg
io.vov.vitamio.R$color: int mediacontroller_bg_pressed
io.vov.vitamio.R$color: int transparent
io.vov.vitamio.R$color: R$color()
io.vov.vitamio.R$drawable
io.vov.vitamio.R$drawable: int ic_launcher
io.vov.vitamio.R$drawable: int mediacontroller_button
io.vov.vitamio.R$drawable: int mediacontroller_pause
io.vov.vitamio.R$drawable: int mediacontroller_play
io.vov.vitamio.R$drawable: int scrubber_control_disabled_holo
io.vov.vitamio.R$drawable: int scrubber_control_focused_holo
io.vov.vitamio.R$drawable: int scrubber_control_normal_holo
io.vov.vitamio.R$drawable: int scrubber_control_pressed_holo
io.vov.vitamio.R$drawable: int scrubber_control_selector_holo
io.vov.vitamio.R$drawable: int scrubber_primary_holo
io.vov.vitamio.R$drawable: int scrubber_progress_horizontal_holo_dark
io.vov.vitamio.R$drawable: int scrubber_secondary_holo
io.vov.vitamio.R$drawable: int scrubber_track_holo_dark
io.vov.vitamio.R$drawable: R$drawable()
io.vov.vitamio.R$id
io.vov.vitamio.R$id: int mediacontroller_file_name
io.vov.vitamio.R$id: int mediacontroller_play_pause
io.vov.vitamio.R$id: int mediacontroller_seekbar
io.vov.vitamio.R$id: int mediacontroller_time_current
io.vov.vitamio.R$id: int mediacontroller_time_total
io.vov.vitamio.R$id: R$id()
io.vov.vitamio.R$layout
io.vov.vitamio.R$layout: int mediacontroller
io.vov.vitamio.R$layout: R$layout()
io.vov.vitamio.R$raw
io.vov.vitamio.R$raw: int libarm
io.vov.vitamio.R$raw: R$raw()
io.vov.vitamio.R$string
io.vov.vitamio.R$string: int VideoView_error_button
io.vov.vitamio.R$string: int VideoView_error_text_invalid_progressive_playback
io.vov.vitamio.R$string: int VideoView_error_text_unknown
io.vov.vitamio.R$string: int VideoView_error_title
io.vov.vitamio.R$string: int mediacontroller_play_pause
io.vov.vitamio.R$string: int permission_group_tools_description
io.vov.vitamio.R$string: int permission_group_tools_label
io.vov.vitamio.R$string: int permission_receive_messages_description
io.vov.vitamio.R$string: int permission_receive_messages_label
io.vov.vitamio.R$string: int permission_write_providers_description
io.vov.vitamio.R$string: int permission_write_providers_label
io.vov.vitamio.R$string: int vitamio_init_decoders
io.vov.vitamio.R$string: int vitamio_library_app_name
io.vov.vitamio.R$string: R$string()
io.vov.vitamio.R$style
io.vov.vitamio.R$style: int MediaController_SeekBar
io.vov.vitamio.R$style: int MediaController_Text
io.vov.vitamio.R$style: R$style()
io.vov.vitamio.ThumbnailUtils
io.vov.vitamio.ThumbnailUtils: int OPTIONS_NONE
io.vov.vitamio.ThumbnailUtils: int OPTIONS_SCALE_UP
io.vov.vitamio.ThumbnailUtils: int OPTIONS_RECYCLE_INPUT
io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MINI_THUMBNAIL_WIDTH
io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MINI_THUMBNAIL_HEIGHT
io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MICRO_THUMBNAIL_WIDTH
io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT
io.vov.vitamio.ThumbnailUtils: ThumbnailUtils()
io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(android.content.Context,java.lang.String,int)
io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int)
io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)
io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int)
io.vov.vitamio.VIntent
io.vov.vitamio.VIntent: java.lang.String ACTION_MEDIA_SCANNER_SCAN_DIRECTORY
io.vov.vitamio.VIntent: java.lang.String ACTION_MEDIA_SCANNER_SCAN_FILE
io.vov.vitamio.VIntent: java.lang.String ACTION_MEDIA_SCANNER_STARTED
io.vov.vitamio.VIntent: java.lang.String ACTION_MEDIA_SCANNER_FINISHED
io.vov.vitamio.VIntent: VIntent()
io.vov.vitamio.Vitamio
io.vov.vitamio.Vitamio: java.lang.String[] LIBS_ARM_CODECS
io.vov.vitamio.Vitamio: java.lang.String[] LIBS_X86_CODECS
io.vov.vitamio.Vitamio: java.lang.String[] LIBS_MIPS_CODECS
io.vov.vitamio.Vitamio: java.lang.String[] LIBS_PLAYER
io.vov.vitamio.Vitamio: java.lang.String[] LIBS_SCANNER
io.vov.vitamio.Vitamio: java.lang.String[] LIBS_AV
io.vov.vitamio.Vitamio: java.lang.String LIBS_LOCK
io.vov.vitamio.Vitamio: int VITAMIO_NOT_SUPPORTED
io.vov.vitamio.Vitamio: int VITAMIO_MIPS
io.vov.vitamio.Vitamio: int VITAMIO_X86
io.vov.vitamio.Vitamio: int VITAMIO_ARMV6
io.vov.vitamio.Vitamio: int VITAMIO_ARMV6_VFP
io.vov.vitamio.Vitamio: int VITAMIO_ARMV7_VFPV3
io.vov.vitamio.Vitamio: int VITAMIO_ARMV7_NEON
io.vov.vitamio.Vitamio: int vitamioType
io.vov.vitamio.Vitamio: java.lang.String vitamioPackage
io.vov.vitamio.Vitamio: java.lang.String vitamioLibraryPath
io.vov.vitamio.Vitamio: void <clinit>()
io.vov.vitamio.Vitamio: Vitamio()
io.vov.vitamio.Vitamio: boolean initialize(android.content.Context)
io.vov.vitamio.Vitamio: boolean initialize(android.content.Context,int)
io.vov.vitamio.Vitamio: boolean isInitialized(android.content.Context)
io.vov.vitamio.Vitamio: java.lang.String getVitamioPackage()
io.vov.vitamio.Vitamio: int getVitamioType()
io.vov.vitamio.Vitamio: java.lang.String getLibraryPath()
io.vov.vitamio.Vitamio: java.util.List getRequiredLibs()
io.vov.vitamio.Vitamio: boolean extractLibs(android.content.Context,int)
io.vov.vitamio.Vitamio: java.lang.String copyCompressedLib(android.content.Context,int,java.lang.String)
io.vov.vitamio.Vitamio: boolean native_initializeLibs(java.lang.String,java.lang.String,java.lang.String)
io.vov.vitamio.VitamioLicense
io.vov.vitamio.VitamioLicense: java.lang.String LICENSE
io.vov.vitamio.VitamioLicense: VitamioLicense()
io.vov.vitamio.activity.InitActivity
io.vov.vitamio.activity.InitActivity: java.lang.String FROM_ME
io.vov.vitamio.activity.InitActivity: android.app.ProgressDialog mPD
io.vov.vitamio.activity.InitActivity: io.vov.vitamio.activity.InitActivity$UIHandler uiHandler
io.vov.vitamio.activity.InitActivity: InitActivity()
io.vov.vitamio.activity.InitActivity: void onCreate(android.os.Bundle)
io.vov.vitamio.activity.InitActivity: android.app.ProgressDialog access$0(io.vov.vitamio.activity.InitActivity)
io.vov.vitamio.activity.InitActivity: void access$1(io.vov.vitamio.activity.InitActivity,android.app.ProgressDialog)
io.vov.vitamio.activity.InitActivity: io.vov.vitamio.activity.InitActivity$UIHandler access$2(io.vov.vitamio.activity.InitActivity)
io.vov.vitamio.activity.InitActivity$1
io.vov.vitamio.activity.InitActivity$1: io.vov.vitamio.activity.InitActivity this$0
io.vov.vitamio.activity.InitActivity$1: InitActivity$1(io.vov.vitamio.activity.InitActivity)
io.vov.vitamio.activity.InitActivity$1: void onPreExecute()
io.vov.vitamio.activity.InitActivity$1: java.lang.Boolean doInBackground(java.lang.Object[])
io.vov.vitamio.activity.InitActivity$1: void onPostExecute(java.lang.Boolean)
io.vov.vitamio.activity.InitActivity$1: void onPostExecute(java.lang.Object)
io.vov.vitamio.activity.InitActivity$1: java.lang.Object doInBackground(java.lang.Object[])
io.vov.vitamio.activity.InitActivity$UIHandler
io.vov.vitamio.activity.InitActivity$UIHandler: java.lang.ref.WeakReference mContext
io.vov.vitamio.activity.InitActivity$UIHandler: InitActivity$UIHandler(android.content.Context)
io.vov.vitamio.activity.InitActivity$UIHandler: void handleMessage(android.os.Message)
io.vov.vitamio.provider.MediaStore
io.vov.vitamio.provider.MediaStore: java.lang.String AUTHORITY
io.vov.vitamio.provider.MediaStore: java.lang.String MEDIA_SCANNER_VOLUME
io.vov.vitamio.provider.MediaStore: java.lang.String CONTENT_AUTHORITY_SLASH
io.vov.vitamio.provider.MediaStore: android.net.Uri CONTENT_URI
io.vov.vitamio.provider.MediaStore: java.lang.String BASE_SQL_FIELDS
io.vov.vitamio.provider.MediaStore: void <clinit>()
io.vov.vitamio.provider.MediaStore: MediaStore()
io.vov.vitamio.provider.MediaStore: android.net.Uri getMediaScannerUri()
io.vov.vitamio.provider.MediaStore: android.net.Uri getVolumeUri()
io.vov.vitamio.provider.MediaStore$Audio
io.vov.vitamio.provider.MediaStore$Audio: MediaStore$Audio()
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns: java.lang.String DURATION
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns: java.lang.String BOOKMARK
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns: java.lang.String ARTIST
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns: java.lang.String COMPOSER
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns: java.lang.String ALBUM
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns: java.lang.String TRACK
io.vov.vitamio.provider.MediaStore$Audio$AudioColumns: java.lang.String YEAR
io.vov.vitamio.provider.MediaStore$Audio$Media
io.vov.vitamio.provider.MediaStore$Audio$Media: android.net.Uri CONTENT_URI
io.vov.vitamio.provider.MediaStore$Audio$Media: java.lang.String CONTENT_TYPE
io.vov.vitamio.provider.MediaStore$Audio$Media: void <clinit>()
io.vov.vitamio.provider.MediaStore$Audio$Media: MediaStore$Audio$Media()
io.vov.vitamio.provider.MediaStore$InternalThumbnails
io.vov.vitamio.provider.MediaStore$InternalThumbnails: int DEFAULT_GROUP_ID
io.vov.vitamio.provider.MediaStore$InternalThumbnails: int MINI_KIND
io.vov.vitamio.provider.MediaStore$InternalThumbnails: int MICRO_KIND
io.vov.vitamio.provider.MediaStore$InternalThumbnails: java.lang.String[] PROJECTION
io.vov.vitamio.provider.MediaStore$InternalThumbnails: java.lang.Object sThumbBufLock
io.vov.vitamio.provider.MediaStore$InternalThumbnails: byte[] sThumbBuf
io.vov.vitamio.provider.MediaStore$InternalThumbnails: void <clinit>()
io.vov.vitamio.provider.MediaStore$InternalThumbnails: MediaStore$InternalThumbnails()
io.vov.vitamio.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getMiniThumbFromFile(android.database.Cursor,android.net.Uri,android.content.ContentResolver,android.graphics.BitmapFactory$Options)
io.vov.vitamio.provider.MediaStore$InternalThumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,android.net.Uri,long)
io.vov.vitamio.provider.MediaStore$InternalThumbnails: java.lang.String getThumbnailPath(android.content.Context,android.content.ContentResolver,long,android.net.Uri)
io.vov.vitamio.provider.MediaStore$InternalThumbnails: android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options,android.net.Uri)
io.vov.vitamio.provider.MediaStore$MediaColumns
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String DATA
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String DIRECTORY
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String DIRECTORY_NAME
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String SIZE
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String DISPLAY_NAME
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String TITLE
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String TITLE_KEY
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String DATE_ADDED
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String DATE_MODIFIED
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String MIME_TYPE
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String AVAILABLE_SIZE
io.vov.vitamio.provider.MediaStore$MediaColumns: java.lang.String PLAY_STATUS
io.vov.vitamio.provider.MediaStore$Video
io.vov.vitamio.provider.MediaStore$Video: MediaStore$Video()
io.vov.vitamio.provider.MediaStore$Video$Media
io.vov.vitamio.provider.MediaStore$Video$Media: android.net.Uri CONTENT_URI
io.vov.vitamio.provider.MediaStore$Video$Media: java.lang.String CONTENT_TYPE
io.vov.vitamio.provider.MediaStore$Video$Media: java.lang.String TABLE_NAME
io.vov.vitamio.provider.MediaStore$Video$Media: java.lang.String SQL_FIELDS
io.vov.vitamio.provider.MediaStore$Video$Media: java.lang.String SQL_TRIGGER_VIDEO_CLEANUP
io.vov.vitamio.provider.MediaStore$Video$Media: java.lang.String SQL_TRIGGER_VIDEO_UPDATE
io.vov.vitamio.provider.MediaStore$Video$Media: void <clinit>()
io.vov.vitamio.provider.MediaStore$Video$Media: MediaStore$Video$Media()
io.vov.vitamio.provider.MediaStore$Video$Thumbnails
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: int MINI_KIND
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: int MICRO_KIND
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: android.net.Uri CONTENT_URI
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String THUMBNAILS_DIRECTORY
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String DATA
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String VIDEO_ID
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String KIND
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String WIDTH
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String HEIGHT
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String TABLE_NAME
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String SQL_FIELDS
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String SQL_INDEX_VIDEO_ID
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String SQL_TRIGGER_VIDEO_THUMBNAILS_CLEANUP
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: void <clinit>()
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: MediaStore$Video$Thumbnails()
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.Context,android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory$Options)
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: java.lang.String getThumbnailPath(android.content.Context,android.content.ContentResolver,long)
io.vov.vitamio.provider.MediaStore$Video$Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)
io.vov.vitamio.provider.MediaStore$Video$VideoColumns
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String DURATION
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String ARTIST
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String ALBUM
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String WIDTH
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String HEIGHT
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String DESCRIPTION
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String LANGUAGE
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String LATITUDE
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String LONGITUDE
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String DATE_TAKEN
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String BOOKMARK
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String MINI_THUMB_MAGIC
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String HIDDEN
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String SUBTRACK
io.vov.vitamio.provider.MediaStore$Video$VideoColumns: java.lang.String AUDIO_TRACK
io.vov.vitamio.provider.MiniThumbFile
io.vov.vitamio.provider.MiniThumbFile: int BYTES_PER_MINTHUMB
io.vov.vitamio.provider.MiniThumbFile: int MINI_THUMB_DATA_FILE_VERSION
io.vov.vitamio.provider.MiniThumbFile: int HEADER_SIZE
io.vov.vitamio.provider.MiniThumbFile: java.util.Hashtable sThumbFiles
io.vov.vitamio.provider.MiniThumbFile: android.net.Uri mUri
io.vov.vitamio.provider.MiniThumbFile: java.io.RandomAccessFile mMiniThumbFile
io.vov.vitamio.provider.MiniThumbFile: java.nio.channels.FileChannel mChannel
io.vov.vitamio.provider.MiniThumbFile: java.nio.ByteBuffer mBuffer
io.vov.vitamio.provider.MiniThumbFile: void <clinit>()
io.vov.vitamio.provider.MiniThumbFile: MiniThumbFile(android.net.Uri)
io.vov.vitamio.provider.MiniThumbFile: void reset()
io.vov.vitamio.provider.MiniThumbFile: io.vov.vitamio.provider.MiniThumbFile instance(android.net.Uri)
io.vov.vitamio.provider.MiniThumbFile: java.lang.String randomAccessFilePath(int)
io.vov.vitamio.provider.MiniThumbFile: void removeOldFile()
io.vov.vitamio.provider.MiniThumbFile: java.io.RandomAccessFile miniThumbDataFile()
io.vov.vitamio.provider.MiniThumbFile: void deactivate()
io.vov.vitamio.provider.MiniThumbFile: long getMagic(long)
io.vov.vitamio.provider.MiniThumbFile: void saveMiniThumbToFile(byte[],long,long)
io.vov.vitamio.provider.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])
io.vov.vitamio.utils.Base64
io.vov.vitamio.utils.Base64: int DEFAULT
io.vov.vitamio.utils.Base64: int NO_PADDING
io.vov.vitamio.utils.Base64: int NO_WRAP
io.vov.vitamio.utils.Base64: int CRLF
io.vov.vitamio.utils.Base64: int URL_SAFE
io.vov.vitamio.utils.Base64: int NO_CLOSE
io.vov.vitamio.utils.Base64: boolean $assertionsDisabled
io.vov.vitamio.utils.Base64: void <clinit>()
io.vov.vitamio.utils.Base64: byte[] decode(java.lang.String,int)
io.vov.vitamio.utils.Base64: byte[] decode(byte[],int)
io.vov.vitamio.utils.Base64: byte[] decode(byte[],int,int,int)
io.vov.vitamio.utils.Base64: java.lang.String encodeToString(byte[],int)
io.vov.vitamio.utils.Base64: java.lang.String encodeToString(byte[],int,int,int)
io.vov.vitamio.utils.Base64: byte[] encode(byte[],int)
io.vov.vitamio.utils.Base64: byte[] encode(byte[],int,int,int)
io.vov.vitamio.utils.Base64: Base64()
io.vov.vitamio.utils.Base64$Coder
io.vov.vitamio.utils.Base64$Coder: byte[] output
io.vov.vitamio.utils.Base64$Coder: int op
io.vov.vitamio.utils.Base64$Coder: Base64$Coder()
io.vov.vitamio.utils.Base64$Coder: boolean process(byte[],int,int,boolean)
io.vov.vitamio.utils.Base64$Coder: int maxOutputSize(int)
io.vov.vitamio.utils.Base64$Decoder
io.vov.vitamio.utils.Base64$Decoder: int[] DECODE
io.vov.vitamio.utils.Base64$Decoder: int[] DECODE_WEBSAFE
io.vov.vitamio.utils.Base64$Decoder: int SKIP
io.vov.vitamio.utils.Base64$Decoder: int EQUALS
io.vov.vitamio.utils.Base64$Decoder: int state
io.vov.vitamio.utils.Base64$Decoder: int value
io.vov.vitamio.utils.Base64$Decoder: int[] alphabet
io.vov.vitamio.utils.Base64$Decoder: void <clinit>()
io.vov.vitamio.utils.Base64$Decoder: Base64$Decoder(int,byte[])
io.vov.vitamio.utils.Base64$Decoder: int maxOutputSize(int)
io.vov.vitamio.utils.Base64$Decoder: boolean process(byte[],int,int,boolean)
io.vov.vitamio.utils.Base64$Encoder
io.vov.vitamio.utils.Base64$Encoder: int LINE_GROUPS
io.vov.vitamio.utils.Base64$Encoder: byte[] ENCODE
io.vov.vitamio.utils.Base64$Encoder: byte[] ENCODE_WEBSAFE
io.vov.vitamio.utils.Base64$Encoder: byte[] tail
io.vov.vitamio.utils.Base64$Encoder: int tailLen
io.vov.vitamio.utils.Base64$Encoder: int count
io.vov.vitamio.utils.Base64$Encoder: boolean do_padding
io.vov.vitamio.utils.Base64$Encoder: boolean do_newline
io.vov.vitamio.utils.Base64$Encoder: boolean do_cr
io.vov.vitamio.utils.Base64$Encoder: byte[] alphabet
io.vov.vitamio.utils.Base64$Encoder: boolean $assertionsDisabled
io.vov.vitamio.utils.Base64$Encoder: void <clinit>()
io.vov.vitamio.utils.Base64$Encoder: Base64$Encoder(int,byte[])
io.vov.vitamio.utils.Base64$Encoder: int maxOutputSize(int)
io.vov.vitamio.utils.Base64$Encoder: boolean process(byte[],int,int,boolean)
io.vov.vitamio.utils.CPU
io.vov.vitamio.utils.CPU: java.util.Map cpuinfo
io.vov.vitamio.utils.CPU: int cachedFeature
io.vov.vitamio.utils.CPU: java.lang.String cachedFeatureString
io.vov.vitamio.utils.CPU: int FEATURE_ARM_V5TE
io.vov.vitamio.utils.CPU: int FEATURE_ARM_V6
io.vov.vitamio.utils.CPU: int FEATURE_ARM_VFP
io.vov.vitamio.utils.CPU: int FEATURE_ARM_V7A
io.vov.vitamio.utils.CPU: int FEATURE_ARM_VFPV3
io.vov.vitamio.utils.CPU: int FEATURE_ARM_NEON
io.vov.vitamio.utils.CPU: int FEATURE_X86
io.vov.vitamio.utils.CPU: int FEATURE_MIPS
io.vov.vitamio.utils.CPU: void <clinit>()
io.vov.vitamio.utils.CPU: CPU()
io.vov.vitamio.utils.CPU: java.lang.String getFeatureString()
io.vov.vitamio.utils.CPU: int getFeature()
io.vov.vitamio.utils.CPU: int getCachedFeature()
io.vov.vitamio.utils.CPU: boolean isDroidXDroid2()
io.vov.vitamio.utils.ContextUtils
io.vov.vitamio.utils.ContextUtils: ContextUtils()
io.vov.vitamio.utils.ContextUtils: int getVersionCode(android.content.Context)
io.vov.vitamio.utils.ContextUtils: java.lang.String getDataDir(android.content.Context)
io.vov.vitamio.utils.ContextUtils: java.lang.String fixLastSlash(java.lang.String)
io.vov.vitamio.utils.Crypto
io.vov.vitamio.utils.Crypto: javax.crypto.Cipher ecipher
io.vov.vitamio.utils.Crypto: Crypto(java.lang.String)
io.vov.vitamio.utils.Crypto: void setupCrypto(javax.crypto.SecretKey)
io.vov.vitamio.utils.Crypto: java.lang.String encrypt(java.lang.String)
io.vov.vitamio.utils.Crypto: java.lang.String md5(java.lang.String)
io.vov.vitamio.utils.Crypto: byte[] generateKey(java.lang.String)
io.vov.vitamio.utils.Crypto: java.security.PublicKey readKeyFromStream(java.io.InputStream)
io.vov.vitamio.utils.Crypto: java.lang.String rsaEncrypt(java.io.InputStream,java.lang.String)
io.vov.vitamio.utils.Crypto: java.lang.String rsaEncrypt(java.io.InputStream,byte[])
io.vov.vitamio.utils.Device
io.vov.vitamio.utils.Device: Device()
io.vov.vitamio.utils.Device: java.lang.String getLocale()
io.vov.vitamio.utils.Device: java.lang.String getDeviceFeatures(android.content.Context)
io.vov.vitamio.utils.Device: java.lang.String getIdentifiers(android.content.Context)
io.vov.vitamio.utils.Device: java.lang.String getSystemFeatures()
io.vov.vitamio.utils.Device: java.lang.String getScreenFeatures(android.content.Context)
io.vov.vitamio.utils.Device: java.lang.String getPair(java.lang.String,java.lang.String)
io.vov.vitamio.utils.FileUtils
io.vov.vitamio.utils.FileUtils: java.lang.String FILE_NAME_RESERVED
io.vov.vitamio.utils.FileUtils: FileUtils()
io.vov.vitamio.utils.FileUtils: java.lang.String getUniqueFileName(java.lang.String,java.lang.String)
io.vov.vitamio.utils.FileUtils: java.lang.String getCanonical(java.io.File)
io.vov.vitamio.utils.FileUtils: java.lang.String getPath(java.lang.String)
io.vov.vitamio.utils.FileUtils: java.lang.String getName(java.lang.String)
io.vov.vitamio.utils.FileUtils: void deleteDir(java.io.File)
io.vov.vitamio.utils.IOUtils
io.vov.vitamio.utils.IOUtils: java.lang.String TAG
io.vov.vitamio.utils.IOUtils: IOUtils()
io.vov.vitamio.utils.IOUtils: void closeSilently(java.io.Closeable)
io.vov.vitamio.utils.IOUtils: void closeSilently(android.os.ParcelFileDescriptor)
io.vov.vitamio.utils.IOUtils: void closeSilently(android.database.Cursor)
io.vov.vitamio.utils.Log
io.vov.vitamio.utils.Log: java.lang.String TAG
io.vov.vitamio.utils.Log: Log()
io.vov.vitamio.utils.Log: void i(java.lang.String,java.lang.Object[])
io.vov.vitamio.utils.Log: void d(java.lang.String,java.lang.Object[])
io.vov.vitamio.utils.Log: void e(java.lang.String,java.lang.Object[])
io.vov.vitamio.utils.Log: void e(java.lang.String,java.lang.Throwable)
io.vov.vitamio.utils.StringUtils
io.vov.vitamio.utils.StringUtils: StringUtils()
io.vov.vitamio.utils.StringUtils: java.lang.String join(java.lang.Object[],java.lang.CharSequence)
io.vov.vitamio.utils.StringUtils: java.lang.String join(java.lang.Iterable,java.lang.CharSequence)
io.vov.vitamio.utils.StringUtils: java.lang.String fixLastSlash(java.lang.String)
io.vov.vitamio.utils.StringUtils: int convertToInt(java.lang.String)
io.vov.vitamio.utils.StringUtils: java.lang.String generateTime(long)
io.vov.vitamio.widget.CenterLayout
io.vov.vitamio.widget.CenterLayout: int mPaddingLeft
io.vov.vitamio.widget.CenterLayout: int mPaddingRight
io.vov.vitamio.widget.CenterLayout: int mPaddingTop
io.vov.vitamio.widget.CenterLayout: int mPaddingBottom
io.vov.vitamio.widget.CenterLayout: int mWidth
io.vov.vitamio.widget.CenterLayout: int mHeight
io.vov.vitamio.widget.CenterLayout: CenterLayout(android.content.Context)
io.vov.vitamio.widget.CenterLayout: CenterLayout(android.content.Context,android.util.AttributeSet)
io.vov.vitamio.widget.CenterLayout: CenterLayout(android.content.Context,android.util.AttributeSet,int)
io.vov.vitamio.widget.CenterLayout: void onMeasure(int,int)
io.vov.vitamio.widget.CenterLayout: void onLayout(boolean,int,int,int,int)
io.vov.vitamio.widget.CenterLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.vov.vitamio.widget.CenterLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.vov.vitamio.widget.CenterLayout$LayoutParams
io.vov.vitamio.widget.CenterLayout$LayoutParams: int x
io.vov.vitamio.widget.CenterLayout$LayoutParams: int y
io.vov.vitamio.widget.CenterLayout$LayoutParams: CenterLayout$LayoutParams(int,int,int,int)
io.vov.vitamio.widget.CenterLayout$LayoutParams: CenterLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
io.vov.vitamio.widget.MediaController
io.vov.vitamio.widget.MediaController: int sDefaultTimeout
io.vov.vitamio.widget.MediaController: int FADE_OUT
io.vov.vitamio.widget.MediaController: int SHOW_PROGRESS
io.vov.vitamio.widget.MediaController: io.vov.vitamio.widget.MediaController$MediaPlayerControl mPlayer
io.vov.vitamio.widget.MediaController: android.content.Context mContext
io.vov.vitamio.widget.MediaController: android.widget.PopupWindow mWindow
io.vov.vitamio.widget.MediaController: int mAnimStyle
io.vov.vitamio.widget.MediaController: android.view.View mAnchor
io.vov.vitamio.widget.MediaController: android.view.View mRoot
io.vov.vitamio.widget.MediaController: android.widget.SeekBar mProgress
io.vov.vitamio.widget.MediaController: android.widget.TextView mEndTime
io.vov.vitamio.widget.MediaController: android.widget.TextView mCurrentTime
io.vov.vitamio.widget.MediaController: android.widget.TextView mFileName
io.vov.vitamio.widget.MediaController: io.vov.vitamio.widget.OutlineTextView mInfoView
io.vov.vitamio.widget.MediaController: java.lang.String mTitle
io.vov.vitamio.widget.MediaController: long mDuration
io.vov.vitamio.widget.MediaController: boolean mShowing
io.vov.vitamio.widget.MediaController: boolean mDragging
io.vov.vitamio.widget.MediaController: boolean mInstantSeeking
io.vov.vitamio.widget.MediaController: boolean mFromXml
io.vov.vitamio.widget.MediaController: android.widget.ImageButton mPauseButton
io.vov.vitamio.widget.MediaController: android.media.AudioManager mAM
io.vov.vitamio.widget.MediaController: io.vov.vitamio.widget.MediaController$OnShownListener mShownListener
io.vov.vitamio.widget.MediaController: io.vov.vitamio.widget.MediaController$OnHiddenListener mHiddenListener
io.vov.vitamio.widget.MediaController: android.os.Handler mHandler
io.vov.vitamio.widget.MediaController: android.view.View$OnClickListener mPauseListener
io.vov.vitamio.widget.MediaController: android.widget.SeekBar$OnSeekBarChangeListener mSeekListener
io.vov.vitamio.widget.MediaController: MediaController(android.content.Context,android.util.AttributeSet)
io.vov.vitamio.widget.MediaController: MediaController(android.content.Context)
io.vov.vitamio.widget.MediaController: boolean initController(android.content.Context)
io.vov.vitamio.widget.MediaController: void onFinishInflate()
io.vov.vitamio.widget.MediaController: void initFloatingWindow()
io.vov.vitamio.widget.MediaController: void setWindowLayoutType()
io.vov.vitamio.widget.MediaController: void setAnchorView(android.view.View)
io.vov.vitamio.widget.MediaController: android.view.View makeControllerView()
io.vov.vitamio.widget.MediaController: void initControllerView(android.view.View)
io.vov.vitamio.widget.MediaController: void setMediaPlayer(io.vov.vitamio.widget.MediaController$MediaPlayerControl)
io.vov.vitamio.widget.MediaController: void setInstantSeeking(boolean)
io.vov.vitamio.widget.MediaController: void show()
io.vov.vitamio.widget.MediaController: void setFileName(java.lang.String)
io.vov.vitamio.widget.MediaController: void setInfoView(io.vov.vitamio.widget.OutlineTextView)
io.vov.vitamio.widget.MediaController: void setAnimationStyle(int)
io.vov.vitamio.widget.MediaController: void show(int)
io.vov.vitamio.widget.MediaController: boolean isShowing()
io.vov.vitamio.widget.MediaController: void hide()
io.vov.vitamio.widget.MediaController: void setOnShownListener(io.vov.vitamio.widget.MediaController$OnShownListener)
io.vov.vitamio.widget.MediaController: void setOnHiddenListener(io.vov.vitamio.widget.MediaController$OnHiddenListener)
io.vov.vitamio.widget.MediaController: long setProgress()
io.vov.vitamio.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)
io.vov.vitamio.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)
io.vov.vitamio.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)
io.vov.vitamio.widget.MediaController: void updatePausePlay()
io.vov.vitamio.widget.MediaController: void doPauseResume()
io.vov.vitamio.widget.MediaController: void setEnabled(boolean)
io.vov.vitamio.widget.MediaController: long access$0(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: boolean access$1(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: boolean access$2(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: void access$3(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: void access$4(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: void access$5(io.vov.vitamio.widget.MediaController,boolean)
io.vov.vitamio.widget.MediaController: android.os.Handler access$6(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: boolean access$7(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: android.media.AudioManager access$8(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: io.vov.vitamio.widget.OutlineTextView access$9(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: long access$10(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: io.vov.vitamio.widget.MediaController$MediaPlayerControl access$11(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController: android.widget.TextView access$12(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController$1
io.vov.vitamio.widget.MediaController$1: io.vov.vitamio.widget.MediaController this$0
io.vov.vitamio.widget.MediaController$1: MediaController$1(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController$1: void handleMessage(android.os.Message)
io.vov.vitamio.widget.MediaController$2
io.vov.vitamio.widget.MediaController$2: io.vov.vitamio.widget.MediaController this$0
io.vov.vitamio.widget.MediaController$2: MediaController$2(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController$2: void onClick(android.view.View)
io.vov.vitamio.widget.MediaController$3
io.vov.vitamio.widget.MediaController$3: io.vov.vitamio.widget.MediaController this$0
io.vov.vitamio.widget.MediaController$3: MediaController$3(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.MediaController$3: void onStartTrackingTouch(android.widget.SeekBar)
io.vov.vitamio.widget.MediaController$3: void onProgressChanged(android.widget.SeekBar,int,boolean)
io.vov.vitamio.widget.MediaController$3: void onStopTrackingTouch(android.widget.SeekBar)
io.vov.vitamio.widget.MediaController$MediaPlayerControl
io.vov.vitamio.widget.MediaController$MediaPlayerControl: void start()
io.vov.vitamio.widget.MediaController$MediaPlayerControl: void pause()
io.vov.vitamio.widget.MediaController$MediaPlayerControl: long getDuration()
io.vov.vitamio.widget.MediaController$MediaPlayerControl: long getCurrentPosition()
io.vov.vitamio.widget.MediaController$MediaPlayerControl: void seekTo(long)
io.vov.vitamio.widget.MediaController$MediaPlayerControl: boolean isPlaying()
io.vov.vitamio.widget.MediaController$MediaPlayerControl: int getBufferPercentage()
io.vov.vitamio.widget.MediaController$OnHiddenListener
io.vov.vitamio.widget.MediaController$OnHiddenListener: void onHidden()
io.vov.vitamio.widget.MediaController$OnShownListener
io.vov.vitamio.widget.MediaController$OnShownListener: void onShown()
io.vov.vitamio.widget.OutlineTextView
io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaint
io.vov.vitamio.widget.OutlineTextView: android.text.TextPaint mTextPaintOutline
io.vov.vitamio.widget.OutlineTextView: java.lang.String mText
io.vov.vitamio.widget.OutlineTextView: int mAscent
io.vov.vitamio.widget.OutlineTextView: float mBorderSize
io.vov.vitamio.widget.OutlineTextView: int mBorderColor
io.vov.vitamio.widget.OutlineTextView: int mColor
io.vov.vitamio.widget.OutlineTextView: float mSpacingMult
io.vov.vitamio.widget.OutlineTextView: float mSpacingAdd
io.vov.vitamio.widget.OutlineTextView: boolean mIncludePad
io.vov.vitamio.widget.OutlineTextView: OutlineTextView(android.content.Context)
io.vov.vitamio.widget.OutlineTextView: OutlineTextView(android.content.Context,android.util.AttributeSet)
io.vov.vitamio.widget.OutlineTextView: OutlineTextView(android.content.Context,android.util.AttributeSet,int)
io.vov.vitamio.widget.OutlineTextView: void initPaint()
io.vov.vitamio.widget.OutlineTextView: void setText(java.lang.String)
io.vov.vitamio.widget.OutlineTextView: void setTextSize(float)
io.vov.vitamio.widget.OutlineTextView: void setTextColor(int)
io.vov.vitamio.widget.OutlineTextView: void setShadowLayer(float,float,float,int)
io.vov.vitamio.widget.OutlineTextView: void setTypeface(android.graphics.Typeface,int)
io.vov.vitamio.widget.OutlineTextView: void setTypeface(android.graphics.Typeface)
io.vov.vitamio.widget.OutlineTextView: void onDraw(android.graphics.Canvas)
io.vov.vitamio.widget.OutlineTextView: void onMeasure(int,int)
io.vov.vitamio.widget.OutlineTextView: int measureWidth(int)
io.vov.vitamio.widget.OutlineTextView: int measureHeight(int)
io.vov.vitamio.widget.VideoView
io.vov.vitamio.widget.VideoView: int VIDEO_LAYOUT_ORIGIN
io.vov.vitamio.widget.VideoView: int VIDEO_LAYOUT_SCALE
io.vov.vitamio.widget.VideoView: int VIDEO_LAYOUT_STRETCH
io.vov.vitamio.widget.VideoView: int VIDEO_LAYOUT_ZOOM
io.vov.vitamio.widget.VideoView: int STATE_ERROR
io.vov.vitamio.widget.VideoView: int STATE_IDLE
io.vov.vitamio.widget.VideoView: int STATE_PREPARING
io.vov.vitamio.widget.VideoView: int STATE_PREPARED
io.vov.vitamio.widget.VideoView: int STATE_PLAYING
io.vov.vitamio.widget.VideoView: int STATE_PAUSED
io.vov.vitamio.widget.VideoView: int STATE_PLAYBACK_COMPLETED
io.vov.vitamio.widget.VideoView: int STATE_SUSPEND
io.vov.vitamio.widget.VideoView: int STATE_RESUME
io.vov.vitamio.widget.VideoView: int STATE_SUSPEND_UNSUPPORTED
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnPreparedListener mPreparedListener
io.vov.vitamio.widget.VideoView: android.view.SurfaceHolder$Callback mSHCallback
io.vov.vitamio.widget.VideoView: android.net.Uri mUri
io.vov.vitamio.widget.VideoView: long mDuration
io.vov.vitamio.widget.VideoView: int mCurrentState
io.vov.vitamio.widget.VideoView: int mTargetState
io.vov.vitamio.widget.VideoView: float mAspectRatio
io.vov.vitamio.widget.VideoView: int mVideoLayout
io.vov.vitamio.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer mMediaPlayer
io.vov.vitamio.widget.VideoView: int mVideoWidth
io.vov.vitamio.widget.VideoView: int mVideoHeight
io.vov.vitamio.widget.VideoView: float mVideoAspectRatio
io.vov.vitamio.widget.VideoView: int mVideoChroma
io.vov.vitamio.widget.VideoView: boolean mHardwareDecoder
io.vov.vitamio.widget.VideoView: int mSurfaceWidth
io.vov.vitamio.widget.VideoView: int mSurfaceHeight
io.vov.vitamio.widget.VideoView: io.vov.vitamio.widget.MediaController mMediaController
io.vov.vitamio.widget.VideoView: android.view.View mMediaBufferingIndicator
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnCompletionListener mOnCompletionListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnPreparedListener mOnPreparedListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnErrorListener mOnErrorListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnTimedTextListener mOnTimedTextListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnInfoListener mOnInfoListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener
io.vov.vitamio.widget.VideoView: int mCurrentBufferPercentage
io.vov.vitamio.widget.VideoView: long mSeekWhenPrepared
io.vov.vitamio.widget.VideoView: android.content.Context mContext
io.vov.vitamio.widget.VideoView: java.util.Map mHeaders
io.vov.vitamio.widget.VideoView: int mBufSize
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnCompletionListener mCompletionListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnErrorListener mErrorListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnInfoListener mInfoListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener mSeekCompleteListener
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnTimedTextListener mTimedTextListener
io.vov.vitamio.widget.VideoView: VideoView(android.content.Context)
io.vov.vitamio.widget.VideoView: VideoView(android.content.Context,android.util.AttributeSet)
io.vov.vitamio.widget.VideoView: VideoView(android.content.Context,android.util.AttributeSet,int)
io.vov.vitamio.widget.VideoView: void onMeasure(int,int)
io.vov.vitamio.widget.VideoView: void setVideoLayout(int,float)
io.vov.vitamio.widget.VideoView: void initVideoView(android.content.Context)
io.vov.vitamio.widget.VideoView: boolean isValid()
io.vov.vitamio.widget.VideoView: void setVideoPath(java.lang.String)
io.vov.vitamio.widget.VideoView: void setVideoURI(android.net.Uri)
io.vov.vitamio.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)
io.vov.vitamio.widget.VideoView: void stopPlayback()
io.vov.vitamio.widget.VideoView: void openVideo()
io.vov.vitamio.widget.VideoView: void setMediaController(io.vov.vitamio.widget.MediaController)
io.vov.vitamio.widget.VideoView: void setMediaBufferingIndicator(android.view.View)
io.vov.vitamio.widget.VideoView: void attachMediaController()
io.vov.vitamio.widget.VideoView: void setOnPreparedListener(io.vov.vitamio.MediaPlayer$OnPreparedListener)
io.vov.vitamio.widget.VideoView: void setOnCompletionListener(io.vov.vitamio.MediaPlayer$OnCompletionListener)
io.vov.vitamio.widget.VideoView: void setOnErrorListener(io.vov.vitamio.MediaPlayer$OnErrorListener)
io.vov.vitamio.widget.VideoView: void setOnBufferingUpdateListener(io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener)
io.vov.vitamio.widget.VideoView: void setOnSeekCompleteListener(io.vov.vitamio.MediaPlayer$OnSeekCompleteListener)
io.vov.vitamio.widget.VideoView: void setOnTimedTextListener(io.vov.vitamio.MediaPlayer$OnTimedTextListener)
io.vov.vitamio.widget.VideoView: void setOnInfoListener(io.vov.vitamio.MediaPlayer$OnInfoListener)
io.vov.vitamio.widget.VideoView: void release(boolean)
io.vov.vitamio.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)
io.vov.vitamio.widget.VideoView: boolean onTrackballEvent(android.view.MotionEvent)
io.vov.vitamio.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)
io.vov.vitamio.widget.VideoView: void toggleMediaControlsVisiblity()
io.vov.vitamio.widget.VideoView: void start()
io.vov.vitamio.widget.VideoView: void pause()
io.vov.vitamio.widget.VideoView: void suspend()
io.vov.vitamio.widget.VideoView: void resume()
io.vov.vitamio.widget.VideoView: long getDuration()
io.vov.vitamio.widget.VideoView: long getCurrentPosition()
io.vov.vitamio.widget.VideoView: void seekTo(long)
io.vov.vitamio.widget.VideoView: boolean isPlaying()
io.vov.vitamio.widget.VideoView: int getBufferPercentage()
io.vov.vitamio.widget.VideoView: void setVolume(float,float)
io.vov.vitamio.widget.VideoView: int getVideoWidth()
io.vov.vitamio.widget.VideoView: int getVideoHeight()
io.vov.vitamio.widget.VideoView: float getVideoAspectRatio()
io.vov.vitamio.widget.VideoView: void setVideoChroma(int)
io.vov.vitamio.widget.VideoView: void setHardwareDecoder(boolean)
io.vov.vitamio.widget.VideoView: void setVideoQuality(int)
io.vov.vitamio.widget.VideoView: void setBufferSize(int)
io.vov.vitamio.widget.VideoView: boolean isBuffering()
io.vov.vitamio.widget.VideoView: java.lang.String getMetaEncoding()
io.vov.vitamio.widget.VideoView: void setMetaEncoding(java.lang.String)
io.vov.vitamio.widget.VideoView: android.util.SparseArray getAudioTrackMap(java.lang.String)
io.vov.vitamio.widget.VideoView: int getAudioTrack()
io.vov.vitamio.widget.VideoView: void setAudioTrack(int)
io.vov.vitamio.widget.VideoView: void setTimedTextShown(boolean)
io.vov.vitamio.widget.VideoView: void setTimedTextEncoding(java.lang.String)
io.vov.vitamio.widget.VideoView: int getTimedTextLocation()
io.vov.vitamio.widget.VideoView: void addTimedTextSource(java.lang.String)
io.vov.vitamio.widget.VideoView: java.lang.String getTimedTextPath()
io.vov.vitamio.widget.VideoView: void setSubTrack(int)
io.vov.vitamio.widget.VideoView: int getTimedTextTrack()
io.vov.vitamio.widget.VideoView: android.util.SparseArray getSubTrackMap(java.lang.String)
io.vov.vitamio.widget.VideoView: boolean isInPlaybackState()
io.vov.vitamio.widget.VideoView: void access$0(io.vov.vitamio.widget.VideoView,int)
io.vov.vitamio.widget.VideoView: void access$1(io.vov.vitamio.widget.VideoView,int)
io.vov.vitamio.widget.VideoView: void access$2(io.vov.vitamio.widget.VideoView,float)
io.vov.vitamio.widget.VideoView: int access$3(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: int access$4(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: int access$5(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: float access$6(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: void access$7(io.vov.vitamio.widget.VideoView,int)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnPreparedListener access$8(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer access$9(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.widget.MediaController access$10(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: long access$11(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: int access$12(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: int access$13(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: int access$14(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: void access$15(io.vov.vitamio.widget.VideoView,int)
io.vov.vitamio.widget.VideoView: void access$16(io.vov.vitamio.widget.VideoView,int)
io.vov.vitamio.widget.VideoView: void access$17(io.vov.vitamio.widget.VideoView,android.view.SurfaceHolder)
io.vov.vitamio.widget.VideoView: int access$18(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: android.view.SurfaceHolder access$19(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: void access$20(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: void access$21(io.vov.vitamio.widget.VideoView,boolean)
io.vov.vitamio.widget.VideoView: void access$22(io.vov.vitamio.widget.VideoView,int)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnCompletionListener access$23(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnErrorListener access$24(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: android.content.Context access$25(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: void access$26(io.vov.vitamio.widget.VideoView,int)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnBufferingUpdateListener access$27(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnInfoListener access$28(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: android.view.View access$29(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnSeekCompleteListener access$30(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView: io.vov.vitamio.MediaPlayer$OnTimedTextListener access$31(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$1
io.vov.vitamio.widget.VideoView$1: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$1: VideoView$1(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$1: void onVideoSizeChanged(io.vov.vitamio.MediaPlayer,int,int)
io.vov.vitamio.widget.VideoView$2
io.vov.vitamio.widget.VideoView$2: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$2: VideoView$2(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$2: void onPrepared(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.widget.VideoView$3
io.vov.vitamio.widget.VideoView$3: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$3: VideoView$3(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$3: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
io.vov.vitamio.widget.VideoView$3: void surfaceCreated(android.view.SurfaceHolder)
io.vov.vitamio.widget.VideoView$3: void surfaceDestroyed(android.view.SurfaceHolder)
io.vov.vitamio.widget.VideoView$4
io.vov.vitamio.widget.VideoView$4: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$4: VideoView$4(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$4: void onCompletion(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.widget.VideoView$5
io.vov.vitamio.widget.VideoView$5: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$5: VideoView$5(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$5: boolean onError(io.vov.vitamio.MediaPlayer,int,int)
io.vov.vitamio.widget.VideoView$5: io.vov.vitamio.widget.VideoView access$0(io.vov.vitamio.widget.VideoView$5)
io.vov.vitamio.widget.VideoView$5$1
io.vov.vitamio.widget.VideoView$5$1: io.vov.vitamio.widget.VideoView$5 this$1
io.vov.vitamio.widget.VideoView$5$1: VideoView$5$1(io.vov.vitamio.widget.VideoView$5)
io.vov.vitamio.widget.VideoView$5$1: void onClick(android.content.DialogInterface,int)
io.vov.vitamio.widget.VideoView$6
io.vov.vitamio.widget.VideoView$6: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$6: VideoView$6(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$6: void onBufferingUpdate(io.vov.vitamio.MediaPlayer,int)
io.vov.vitamio.widget.VideoView$7
io.vov.vitamio.widget.VideoView$7: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$7: VideoView$7(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$7: boolean onInfo(io.vov.vitamio.MediaPlayer,int,int)
io.vov.vitamio.widget.VideoView$8
io.vov.vitamio.widget.VideoView$8: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$8: VideoView$8(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$8: void onSeekComplete(io.vov.vitamio.MediaPlayer)
io.vov.vitamio.widget.VideoView$9
io.vov.vitamio.widget.VideoView$9: io.vov.vitamio.widget.VideoView this$0
io.vov.vitamio.widget.VideoView$9: VideoView$9(io.vov.vitamio.widget.VideoView)
io.vov.vitamio.widget.VideoView$9: void onTimedTextUpdate(byte[],int,int)
io.vov.vitamio.widget.VideoView$9: void onTimedText(java.lang.String)
